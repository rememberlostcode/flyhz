<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyhz.shop.persistence.dao.PurchaseDao">
    <select id="getPurchasePageCount" resultType="Integer" parameterType="PurchasePageDto">
    	select count(1) count from purchase ps,product p,brand b where ps.product_id = p.id and p.brand_id = b.id 
    	<if test="orderNumber != null">
   		   and ps.order_number = #{orderNumber} 
   	    </if>
	    <if test="name != null">
   		   and p.name like CONCAT('%','${name}','%') 
   	    </if>
   	    <if test="brandstyle != null">
   		   and p.brandstyle=#{brandstyle} 
   	    </if>
   	    <if test="brandId != null">
   		   and p.brand_id=#{brandId} 
   	    </if>
   	    <if test="status != null">
   		   and ps.status = #{status} 
   	    </if>
    </select>
    
    <select id="getPurchaseDtosPage" resultType="PurchaseDto" parameterType="PurchasePageDto">
    	select ps.id,
		       ps.order_number orderNumber,
		       ps.product_id productId,
		       ps.reserve_price reservePrice,
		       ps.tborder_id tborderId,
		       ps.logistics_id logisticsId,
		       ps.status,
		       p.name productName,
		       p.brandstyle,
		       p.currency,
		       b.name brandName,
		       p.cover_small coverSmall 
		  from purchase ps,product p,brand b 
		  where ps.product_id = p.id and p.brand_id = b.id 
		  <if test="orderNumber != null">
    		   and ps.order_number = #{orderNumber} 
    	  </if>
		  <if test="name != null">
    		   and p.name like CONCAT('%','${name}','%') 
    	  </if>
    	  <if test="brandstyle != null">
    		   and p.brandstyle=#{brandstyle} 
    	  </if>
    	  <if test="brandId != null">
    		   and p.brand_id=#{brandId} 
    	  </if>
    	  <if test="status != null">
    		   and ps.status = #{status} 
    	  </if>
		  order by ps.id limit #{start},#{pagesize}
    </select>
    
    <select id="getPurchaseDto" resultType="PurchaseDto" parameterType="Integer">
    	select ps.id,
		       ps.order_number orderNumber,
		       ps.product_id productId,
		       ps.reserve_price reservePrice,
		       ps.tborder_id tborderId,
		       ps.logistics_id logisticsId,
		       ps.status,
		       p.name productName,
		       p.brandstyle,
		       p.currency,
		       b.name brandName,
		       p.cover_small coverSmall 
		  from purchase ps,product p,brand b 
		  where ps.product_id = p.id and p.brand_id = b.id and ps.id = #{purchaseId}
    </select>
    
    <select id="getPurchaseModel" resultType="PurchaseModel" parameterType="Integer">
    	select ps.id,
		       ps.order_number orderNumber,
		       ps.product_id productId,
		       ps.reserve_price reservePrice,
		       ps.tborder_id tborderId,
		       ps.logistics_id logisticsId,
		       ps.status 
		 from purchase ps where ps.id = #{purchaseId}
    </select>
    
    <update id="updatePurchase" parameterType="PurchaseModel">
    	update purchase set logistics_id = #{logisticsId},status=#{status} where id = #{id}
    </update>
    
     <insert id="addPurchaseLog" parameterType="PurchaseLogModel">
    	insert into purchase_log(id,purchase_id,user_id,operate,gmt_modify
    	<if test="beforeInfo != null">
    		,before_info
    	</if>
    	<if test="afterInfo != null">
    		,after_info
    	</if>
    	) values(#{id},#{purchaseId},#{userId},#{operate},#{gmtModify}
    	<if test="beforeInfo != null">
    		,#{beforeInfo}
    	</if>
    	<if test="afterInfo != null">
    		,#{afterInfo}
    	</if>
    	)
    	<selectKey resultType="Integer" keyProperty="id">
	        SELECT LAST_INSERT_ID();
	    </selectKey>
    </insert>
</mapper>