<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyhz.shop.persistence.dao.ProductDao">
    <select id="getCountOfAll" resultType="Integer">
		select count(1) count from product t
    </select>
    
    <select id="findAll" parameterType="SolrPage" resultType="ProductBuildDto">
		select t.*, @rownum := @rownum + 1 ss
		  from (select t.*, @rownum := @rownum + 1 sd
		          from (select p.id,
		                       p.name n,
		                       p.brandstyle bs,
		                       date_format(p.gmt_modify, '%Y-%m-%d %H:%i:%s') t,
		                       p.imgs,
		                       p.cover_small p,
		                       p.cover bp,
		                       p.description d,
		                       p.purchasingprice pp,
		                       p.localprice lp,
		                       p.brand_id bid,
		                       b.name be,
		                       p.category_id cid,
		                       c.name ce,
		                       p.localprice - p.purchasingprice sp,
		                       @rownum := @rownum + 1 st,
		                       (select sum(s.totalnumber)
		                          from salesvolume s
		                         where s.product_id = p.id) sn,
		                       (select sum(s.totalnumber)
		                          from salesvolume s
		                         where s.product_id = p.id
		                           and s.gmt_modify >=
		                               DATE_SUB(CURDATE(), INTERVAL 1 WEEK)) zsn
		                  from (select @rownum := 0) r,
		                       product p,
		                       brand b,
		                       category c
		                 where p.brand_id = b.id
		                   and p.category_id = c.id
		                 order by p.gmt_modify asc) t,
		               (select @rownum := 0) r
		         order by t.sp asc) t,
		       (select @rownum := 0) r
		 order by t.sn asc limit #{start}, #{num}
    </select>
    
    <!-- 用于Solr，查询单个商品信息 -->
    <select id="getProductBuildDtoById" parameterType="Integer" resultType="ProductBuildDto">
      select xxx.* from(
    	select t.*, @rownum := @rownum + 1 ss
		  from (select t.*, @rownum := @rownum + 1 sd
		          from (select p.id,
		                       p.name n,
		                       p.brandstyle bs,
		                       date_format(p.gmt_modify, '%Y-%m-%d %H:%i:%s') t,
		                       p.imgs,
		                       p.cover_small p,
		                       p.cover bp,
		                       p.description d,
		                       p.purchasingprice pp,
		                       p.localprice lp,
		                       p.brand_id bid,
		                       b.name be,
		                       p.category_id cid,
		                       c.name ce,
		                       p.localprice - p.purchasingprice sp,
		                       @rownum := @rownum + 1 st,
		                       (select sum(s.totalnumber)
		                          from salesvolume s
		                         where s.product_id = p.id) sn,
		                       (select sum(s.totalnumber)
		                          from salesvolume s
		                         where s.product_id = p.id
		                           and s.gmt_modify >=
		                               DATE_SUB(CURDATE(), INTERVAL 1 WEEK)) zsn
		                  from (select @rownum := 0) r,
		                       product p,
		                       brand b,
		                       category c
		                 where p.brand_id = b.id
		                   and p.category_id = c.id
		                 order by p.gmt_modify asc) t,
		               (select @rownum := 0) r
		         order by t.sp asc) t,
		       (select @rownum := 0) r 
		 order by t.sn asc
	  )xxx where xxx.id=#{productId}
    </select>
    
    <select id="getModelById" parameterType="Integer" resultType="ProductModel">
		select p.id,
		       p.name,
		       p.gmt_create gmtCreate,
		       p.gmt_modify gmtModify,
		       p.imgs,
		       p.description,
		       p.style,
		       p.color,
		       p.colorimg,
		       p.category_id categoryId,
		       p.brand_id brandId,
		       p.brandstyle,
		       p.cover,
		       p.cover_small coverSmall,
		       p.off_shelf offShelf,
		       p.sizedesc,
		       p.creator,
		       p.data_src dataSrc,
		       p.currency,
		       p.originprice,
		       p.discountprice  
		  from product p where p.id=#{id}
    </select>
    
    <select id="getPagedProducts" resultType="ProductModel">
    	select p.id,
		       p.name,
		       p.gmt_create gmtCreate,
		       p.gmt_modify gmtModify,
		       p.imgs,
		       p.description,
		       p.style,
		       p.color,
		       p.colorimg,
		       p.category_id categoryId,
		       p.brand_id brandId,
		       p.brandstyle,
		       p.cover,
		       p.cover_small coverSmall,
		       p.off_shelf offShelf,
		       p.sizedesc,
		       p.creator,
		       p.data_src dataSrc,
		       p.currency,
		       p.originprice,
		       p.discountprice   
		  from product p
    </select>
    
    <select id="getPageProductCmsDtos" resultType="ProductCmsDto">
    	select p.id,
		       p.name,
		       p.description,
		       p.color,
		       p.cover,
		       p.cover_small coverSmall,
		       c.name cateName,
		       b.name brandName,
		       p.brandstyle,
		       p.off_shelf offShelf,
		       p.sizedesc,
		       p.currency,
		       p.originprice,
		       p.discountprice   
		  from product p,brand b,category c 
		  where p.brand_id = b.id and p.category_id = c.id 
    </select>
    
    <select id="getProductCmsDtosPage" resultType="ProductCmsDto" parameterType="ProductPageDto">
    	select p.id,
		       p.name,
		       p.description,
		       p.color,
		       p.cover,
		       p.cover_small coverSmall,
		       c.name cateName,
		       b.name brandName,
		       p.brandstyle,
		       p.off_shelf offShelf,
		       p.sizedesc,
		       p.currency,
		       p.originprice,
		       p.discountprice   
		  from product p,brand b,category c 
		  where p.brand_id = b.id and p.category_id = c.id 
		  <if test="name != null">
    		   and p.name like #{name} 
    	  </if>
    	  <if test="brandstyle != null">
    		   and p.brandstyle=#{brandstyle} 
    	  </if>
    	  <if test="brandId != null">
    		   and p.brand_id=#{brandId} 
    	  </if>
    	  <if test="categoryId != null">
    		   and p.category_id=#{categoryId} 
    	  </if>
    	  order by p.id desc limit #{start},#{pagesize}
    </select>
    
    <select id="getProductCmsDtosPageCount" resultType="Integer" parameterType="ProductPageDto">
    	 select count(1) count 
    	   from product p,brand b,category c 
		  where p.brand_id = b.id and p.category_id = c.id 
		  <if test="name != null">
    		   and p.name like #{name} 
    	  </if>
    	  <if test="brandstyle != null">
    		   and p.brandstyle=#{brandstyle} 
    	  </if>
    	  <if test="brandId != null">
    		   and p.brand_id=#{brandId} 
    	  </if>
    	  <if test="categoryId != null">
    		   and p.category_id=#{categoryId} 
    	  </if>
    </select>
    
    <select id="getMaxStyle" resultType="Integer">
    	select max(style) style from product
    </select>
    
    <delete id="deleteProduct" parameterType="Integer">
    	delete from product where id = #{productId}
    </delete>
    
    <insert id="addProduct" parameterType="ProductModel">
    	insert into product(id,name,brand_id,category_id,brandstyle,gmt_create,gmt_modify
    	<if test="imgs != null">
    		,imgs
    	</if>
    	<if test="description != null">
    		,description
    	</if>
    	<if test="style != null">
    		,style
    	</if>
    	<if test="color != null">
    		,color
    	</if>
    	<if test="colorimg != null">
    		,colorimg
    	</if>
    	<if test="cover != null">
    		,cover
    	</if>
    	<if test="coverSmall != null">
    		,cover_small
    	</if>
    	<if test="creator != null">
    		,creator
    	</if>
    	<if test="offShelf != null">
    		,off_shelf
    	</if>
    	<if test="sizedesc != null">
    		,sizedesc
    	</if>
    	<if test="dataSrc != null">
    		,data_src
    	</if>
    	<if test="currency != null">
    		,currency
    	</if>
    	<if test="originprice != null">
    		,originprice
    	</if>
    	<if test="discountprice != null">
    		,discountprice
    	</if>
    	) values(#{id},#{name},#{brandId},#{categoryId},#{brandstyle},#{gmtCreate},#{gmtModify}
    	<if test="imgs != null">
    		,#{imgs}
    	</if>
    	<if test="description != null">
    		,#{description}
    	</if>
    	<if test="style != null">
    		,#{style}
    	</if>
    	<if test="color != null">
    		,#{color}
    	</if>
    	<if test="colorimg != null">
    		,#{colorimg}
    	</if>
    	<if test="cover != null">
    		,#{cover}
    	</if>
    	<if test="coverSmall != null">
    		,#{coverSmall}
    	</if>
    	<if test="creator != null">
    		,#{creator}
    	</if>
    	<if test="offShelf != null">
    		,#{offShelf}
    	</if>
    	<if test="sizedesc != null">
    		,#{sizedesc}
    	</if>
    	<if test="dataSrc != null">
    		,#{dataSrc}
    	</if>
    	<if test="currency != null">
    		,#{currency}
    	</if>
    	<if test="originprice != null">
    		,#{originprice}
    	</if>
    	<if test="discountprice != null">
    		,#{discountprice}
    	</if>
    	)
    	<selectKey resultType="Integer" keyProperty="id">
	        SELECT LAST_INSERT_ID();
	    </selectKey>
    </insert>
    
    <update id="editProduct" parameterType="ProductModel">
    	update product set name=#{name},category_id=#{categoryId},brand_id=#{brandId},brandstyle=#{brandstyle},
    	gmt_modify=#{gmtModify},imgs=#{imgs},description=#{description},originprice=#{originprice},
    	cover_small=#{coverSmall},color=#{color},colorimg=#{colorimg},discountprice=#{discountprice},cover=#{cover},
    	currency=#{currency},off_shelf=#{offShelf},data_src=#{dataSrc},sizedesc=#{sizedesc} where id=#{id}
    </update>
    
    <insert id="addProductLog" parameterType="ProductLogModel">
    	insert into product_log(id,product_id,user_id,operate,gmt_modify
    	<if test="beforeInfo != null">
    		,before_info
    	</if>
    	<if test="afterInfo != null">
    		,after_info
    	</if>
    	) values(#{id},#{productId},#{userId},#{operate},#{gmtModify}
    	<if test="beforeInfo != null">
    		,#{beforeInfo}
    	</if>
    	<if test="afterInfo != null">
    		,#{afterInfo}
    	</if>
    	)
    	<selectKey resultType="Integer" keyProperty="id">
	        SELECT LAST_INSERT_ID();
	    </selectKey>
    </insert>
    
    <select id="getProductsByStartAndEnd" resultType="ProductModel" parameterType="ProductPageDto">
    	select p.id,
		       p.name,
		       p.gmt_create gmtCreate,
		       p.gmt_modify gmtModify,
		       p.imgs,
		       p.description,
		       p.style,
		       p.color,
		       p.colorimg,
		       p.category_id categoryId,
		       p.brand_id brandId,
		       p.brandstyle,
		       p.cover,
		       p.cover_small coverSmall,
		       p.off_shelf offShelf,
		       p.sizedesc,
		       p.creator,
		       p.data_src dataSrc,
		       p.currency,
		       p.originprice,
		       p.discountprice  
		  from product p where p.name is not null 
		  <if test="start != null">
    		   and p.id &gt;= #{start} 
    	  </if>
    	  <if test="end != null">
    		   and p.id &lt;= #{end} 
    	  </if>
    </select>
</mapper>