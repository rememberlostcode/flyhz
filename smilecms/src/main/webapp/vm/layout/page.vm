<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title></title>
<style>
body {font-size: 12px;}
#pages {color: #000000;font-size: 12px;padding: 8px 0px; text-align:center;}
#pages  span{color: #c1c1c1;margin: 0px 3px;border:1px solid #ccc; display:inline-block; vertical-align:middle;}
#pages .span_slh{border:0px; margin:0; padding:0; color: #333;}
#pages .span_bky{ border:1px solid #c1c1c1; padding:2px 6px; cursor:default;}
#pages .span_dty{ border:1px solid #669900; background:#99CC33; color:#fff; font-weight:bold; padding:2px 6px; }
#pages span a {text-decoration:none; color:#333; padding:2px 6px; display:block;}
#pages span a:hover { color:#fff;  background:#99CC33;}
</style>
<script language="JavaScript">
function showPages(name) { //初始化属性
this.name = name; //对象名称
this.page = 1; //当前页数
this.pageCount = 1; //总页数
this.argName = 'page'; //参数名
this.showTimes = 1; //打印次数
}

showPages.prototype.getPage = function(){ //丛url获得当前页数,如果变量重复只获取最后一个
var args = location.search;
var reg = new RegExp('[\?&]?' + this.argName + '=([^&]*)[&$]?', 'gi');
var chk = args.match(reg);
this.page = RegExp.$1;
}

showPages.prototype.checkPages = function(){ //进行当前页数和总页数的验证
this.page=parseInt($page.getCurrentPage());
if (isNaN(parseInt(this.pageCount))) this.pageCount = 1;
if (this.page < 1) this.page = 1;
if (this.pageCount < 1) this.pageCount = 1;
if (this.page > this.pageCount) this.page = this.pageCount;
this.page = parseInt(this.page);
this.pageCount = parseInt(this.pageCount);
}

showPages.prototype.createHtml = function(){ //生成html代码
var strHtml = '', prevPage = this.page - 1, nextPage = this.page + 1;
// (前后缩略,页数,首页,前页,后页,尾页)
if (prevPage < 1) {
strHtml += '<span  class="span_bky">第一页</span>';
strHtml += '<span class="span_bky">上一页</span>';
} else {
strHtml += '<span title="First Page"><a href="javascript:' + this.name + '.toPage(1);">第一页</a></span>';
strHtml += '<span title="Prev Page"><a href="javascript:' + this.name + '.toPage(' + prevPage + ');">上一页</a></span>';
}
if (this.page != 1) strHtml += '<span title="Page 1"><a href="javascript:' + this.name + '.toPage(1);">1</a></span>';
if (this.page >= 5) strHtml += '<span class="span_slh">...</span>';
if (this.pageCount > this.page + 2) {
var endPage = this.page + 2;
} else {
var endPage = this.pageCount;
}
for (var i = this.page - 2; i <= endPage; i++) {
if (i > 0) {
if (i == this.page) {
strHtml += '<span title="Page ' + i + '" class="span_dty">' + i + '</span>';
} else {
if (i != 1 && i != this.pageCount) {
strHtml += '<span title="Page ' + i + '"><a href="javascript:' + this.name + '.toPage(' + i + ');">' + i + '</a></span>';
}
}
}
}
if (this.page + 3 < this.pageCount) strHtml += '<span class="span_slh">...</span>';
if (this.page != this.pageCount) strHtml += '<span title="Page ' + this.pageCount + '"><a href="javascript:' + this.name + '.toPage(' + this.pageCount + ');">' + this.pageCount + '</a></span>';
if (nextPage > this.pageCount) {
strHtml += '<span class="span_bky">下一页</span>';
strHtml += '<span class="span_bky">最后页</span>';
} else {
strHtml += '<span title="Next Page"><a href="javascript:' + this.name + '.toPage(' + nextPage + ');">下一页</a></span>';
strHtml += '<span title="Last Page"><a href="javascript:' + this.name + '.toPage(' + this.pageCount + ');">最后页</a></span>';
}
return strHtml;
}

showPages.prototype.createUrl = function (page) { //生成页面跳转url
	if (isNaN(parseInt(page))) page = 1;
	if (page < 1) page = 1;
	if (page > this.pageCount) page = this.pageCount;
	/**********
	var url = location.protocol + '//' + location.host + location.pathname;
	var args = location.search;
	var reg = new RegExp('([\?&]?)' + this.argName + '=[^&]*[&$]?', 'gi');
	args = args.replace(reg,'$1');
	if (args == '' || args == null) {
	args += '?' + this.argName + '=' + page;
	} else if (args.substr(args.length - 1,1) == '?' || args.substr(args.length - 1,1) == '&') {
	args += this.argName + '=' + page;
	} else {
	args += '&' + this.argName + '=' + page;
	}
	return url + args;
	***********/
	return page;
}

showPages.prototype.toPage = function(page){ //页面跳转
var turnTo = 1;
if (typeof(page) == 'object') {
turnTo = page.options[page.selectedIndex].value;
} else {
turnTo = page;
}
   var page=this.createUrl(turnTo);
   document.getElementById("currentPage").value=page;
   document.getElementById("selected").click();
}

showPages.prototype.printHtml = function(mode){ //显示html代码
this.getPage();
this.checkPages();
this.showTimes += 1;
document.getElementById('pages').innerHTML = this.createHtml(mode);
}

showPages.prototype.formatInputPage = function(e){ //限定输入页数格式
var ie = navigator.appName=="Microsoft Internet Explorer"?true:false;
if(!ie) var key = e.which;
else var key = event.keyCode;
if (key == 8 || key == 46 || (key >= 48 && key <= 57)) return true;
return false;
}
</script>
</head>

<body>
		<div id="pages">
		</div>
            <input type="hidden" name="page.currentPage" id="currentPage" value="${page.currentPage}"/>  
            <input type="hidden" name="page.totalPages"  id="totalPages" value="${page.totalPages}"/> 
			
</body>
<script language="JavaScript">
var pg = new showPages('pg');
var totalPages='$page.getTotalPages()'; //得到总页数
pg.pageCount =parseInt(totalPages); // 定义总页数(必要)
pg.argName = 'pageNum'; // 定义参数名(可选,默认为page)
pg.printHtml();
</script>
</html> 