android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bk:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.s:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.t:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.v:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.y:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.holding.smile.activity.BaseActivity -> com.holding.smile.activity.BaseActivity:
    int CATE_CODE -> CATE_CODE
    int MORE_CODE -> MORE_CODE
    int SEARCH_CODE -> SEARCH_CODE
    int UPLOAD_IMAGE_CODE -> UPLOAD_IMAGE_CODE
    int EMAIL_CODE -> EMAIL_CODE
    int PHONE_CODE -> PHONE_CODE
    int SELECT_PHOTO_IMAGE -> SELECT_PHOTO_IMAGE
    int IDCARD_EDIT_CODE -> IDCARD_EDIT_CODE
    int ORDER_CODE -> ORDER_CODE
    android.content.Context context -> context
    android.widget.LinearLayout ly_content -> ly_content
    android.view.View contentView -> contentView
    int reqCode -> reqCode
    java.lang.String filepath -> filepath
    android.widget.ProgressBar progressBar -> progressBar
    int MENU_SETTINGS -> MENU_SETTINGS
    int MENU_CHANGEACCOUNT -> MENU_CHANGEACCOUNT
    int MENU_QUIT -> MENU_QUIT
    long waitTime -> waitTime
    long touchTime -> touchTime
    void onCreate(android.os.Bundle) -> onCreate
    void setVisible(int) -> setVisible
    void setHeadVisible() -> setHeadVisible
    void setFootVisible() -> setFootVisible
    android.widget.TextView displayHeaderDescription() -> displayHeaderDescription
    android.widget.ImageView displayHeaderBack() -> displayHeaderBack
    android.widget.TextView displayHeaderRight() -> displayHeaderRight
    void setContentLayout(int) -> setContentLayout
    android.view.View getLyContentView() -> getLyContentView
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void startTask() -> startTask
    void loadData() -> loadData
    android.view.View displayFooterMain(int) -> displayFooterMain
    android.view.View displayFooterMainBuyBtn() -> displayFooterMainBuyBtn
    android.view.View displayFooterMainTotal() -> displayFooterMainTotal
    android.view.View displayFooterMainOrder() -> displayFooterMainOrder
com.holding.smile.activity.BaseActivity$1 -> com.holding.smile.activity.BaseActivity$1:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.BaseActivity$2 -> com.holding.smile.activity.BaseActivity$2:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.BaseActivity$3 -> com.holding.smile.activity.BaseActivity$3:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.BaseActivity$4 -> com.holding.smile.activity.BaseActivity$4:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.BaseActivity$5 -> com.holding.smile.activity.BaseActivity$5:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.BaseActivity$LoadTask -> com.holding.smile.activity.BaseActivity$LoadTask:
    com.holding.smile.activity.BaseActivity this$0 -> this$0
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.holding.smile.activity.CategoryActivity -> com.holding.smile.activity.CategoryActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    com.holding.smile.adapter.CategoryAdapter cateAdapter -> cateAdapter
    android.widget.ListView listView -> listView
    java.util.List cateList -> cateList
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> loadData
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    java.util.List access$0(com.holding.smile.activity.CategoryActivity) -> access$0
    com.holding.smile.adapter.CategoryAdapter access$1(com.holding.smile.activity.CategoryActivity) -> access$1
com.holding.smile.activity.CategoryActivity$1 -> com.holding.smile.activity.CategoryActivity$1:
    com.holding.smile.activity.CategoryActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.CategoryActivity$2 -> com.holding.smile.activity.CategoryActivity$2:
    com.holding.smile.activity.CategoryActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.holding.smile.activity.EmailActivity -> com.holding.smile.activity.EmailActivity:
    android.widget.EditText emailEditText -> emailEditText
    android.widget.Button saveButton -> saveButton
    android.widget.Button canleButton -> canleButton
    java.lang.String email -> email
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.GoodsDetailActivity -> com.holding.smile.activity.GoodsDetailActivity:
    com.holding.smile.myview.MyViewPager mViewPager -> mViewPager
    java.util.List viewList -> viewList
    com.holding.smile.adapter.MyPagerAdapter pagerAdapter -> pagerAdapter
    android.widget.ImageView[] tips -> tips
    android.widget.TextView b -> b
    android.widget.TextView n -> n
    android.widget.TextView pp -> pp
    android.widget.TextView d -> d
    android.widget.TextView scolor -> scolor
    java.util.List details -> details
    com.holding.smile.entity.JGoods jGoods -> jGoods
    java.util.List picList -> picList
    java.util.List colorList -> colorList
    java.lang.Integer gid -> gid
    java.lang.String bs -> bs
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void loadData() -> loadData
    void initGoods() -> initGoods
    void loadColors() -> loadColors
    void onClick(android.view.View) -> onClick
    void addViewPager() -> addViewPager
    void onDestroy() -> onDestroy
    void access$0(com.holding.smile.activity.GoodsDetailActivity,java.util.List) -> access$0
    java.util.List access$1(com.holding.smile.activity.GoodsDetailActivity) -> access$1
    void access$2(com.holding.smile.activity.GoodsDetailActivity) -> access$2
    java.util.List access$3(com.holding.smile.activity.GoodsDetailActivity) -> access$3
    void access$4(com.holding.smile.activity.GoodsDetailActivity,java.lang.Integer) -> access$4
    android.widget.TextView access$5(com.holding.smile.activity.GoodsDetailActivity) -> access$5
    void access$6(com.holding.smile.activity.GoodsDetailActivity) -> access$6
    java.util.List access$7(com.holding.smile.activity.GoodsDetailActivity) -> access$7
    android.widget.ImageView[] access$8(com.holding.smile.activity.GoodsDetailActivity) -> access$8
com.holding.smile.activity.GoodsDetailActivity$1 -> com.holding.smile.activity.GoodsDetailActivity$1:
    com.holding.smile.activity.GoodsDetailActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.GoodsDetailActivity$2 -> com.holding.smile.activity.GoodsDetailActivity$2:
    com.holding.smile.activity.GoodsDetailActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.GoodsDetailActivity$3 -> com.holding.smile.activity.GoodsDetailActivity$3:
    com.holding.smile.activity.GoodsDetailActivity this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void setImageBackground(int) -> setImageBackground
com.holding.smile.activity.HtmlUIActivity -> com.holding.smile.activity.HtmlUIActivity:
    java.lang.String TAG -> TAG
    android.webkit.WebView webView -> webView
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
com.holding.smile.activity.HtmlUIActivity$JsObject -> com.holding.smile.activity.HtmlUIActivity$JsObject:
    com.holding.smile.activity.HtmlUIActivity this$0 -> this$0
    void call(java.lang.String,java.lang.String) -> call
com.holding.smile.activity.IdcardEditActivity -> com.holding.smile.activity.IdcardEditActivity:
    com.holding.smile.entity.Idcard idcard -> idcard
    java.lang.String picturePath -> picturePath
    android.widget.EditText idcardName -> idcardName
    android.widget.EditText idcardNumber -> idcardNumber
    android.widget.ImageView idcardPhotoButton -> idcardPhotoButton
    android.widget.Button idcardSave -> idcardSave
    android.widget.Button idcardDelete -> idcardDelete
    android.widget.ImageView imageView -> imageView
    int optNum -> optNum
    int OPT_CODE_SAVE -> OPT_CODE_SAVE
    int OPT_CODE_REMOVE -> OPT_CODE_REMOVE
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> loadData
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.holding.smile.entity.Idcard access$0(com.holding.smile.activity.IdcardEditActivity) -> access$0
    void access$1(com.holding.smile.activity.IdcardEditActivity,int) -> access$1
com.holding.smile.activity.IdcardEditActivity$1 -> com.holding.smile.activity.IdcardEditActivity$1:
    com.holding.smile.activity.IdcardEditActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.IdcardEditActivity$2 -> com.holding.smile.activity.IdcardEditActivity$2:
    com.holding.smile.activity.IdcardEditActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.holding.smile.activity.IdcardManagerActivity -> com.holding.smile.activity.IdcardManagerActivity:
    android.widget.Button idcardsAdd -> idcardsAdd
    java.util.List list -> list
    com.holding.smile.adapter.MyIdcardAdapter adapter -> adapter
    android.widget.ListView listView -> listView
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> loadData
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.holding.smile.activity.IdcardManagerActivity,java.util.List) -> access$0
    java.util.List access$1(com.holding.smile.activity.IdcardManagerActivity) -> access$1
    void access$2(com.holding.smile.activity.IdcardManagerActivity,com.holding.smile.adapter.MyIdcardAdapter) -> access$2
    android.widget.ListView access$3(com.holding.smile.activity.IdcardManagerActivity) -> access$3
    com.holding.smile.adapter.MyIdcardAdapter access$4(com.holding.smile.activity.IdcardManagerActivity) -> access$4
com.holding.smile.activity.IdcardManagerActivity$1 -> com.holding.smile.activity.IdcardManagerActivity$1:
    com.holding.smile.activity.IdcardManagerActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.LoginActivity -> com.holding.smile.activity.LoginActivity:
    java.lang.Class goingActivityClass -> goingActivityClass
    android.widget.EditText userAccount -> userAccount
    android.widget.EditText userPwd -> userPwd
    android.widget.Button btnLogining -> btnLogining
    android.widget.Button btnGetBackPwd -> btnGetBackPwd
    android.widget.Button btnSetLogin -> btnSetLogin
    android.widget.Button btnToRegister -> btnToRegister
    android.widget.LinearLayout loginBySelf -> loginBySelf
    boolean isClose -> isClose
    java.lang.Integer gid -> gid
    int LOGIN_BY_SELF -> LOGIN_BY_SELF
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loginViewInit() -> loginViewInit
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void loadData() -> loadData
    void access$0(com.holding.smile.activity.LoginActivity) -> access$0
    boolean access$1(com.holding.smile.activity.LoginActivity) -> access$1
    java.lang.Class access$2(com.holding.smile.activity.LoginActivity) -> access$2
    java.lang.Integer access$3(com.holding.smile.activity.LoginActivity) -> access$3
    void access$4(com.holding.smile.activity.LoginActivity,java.lang.Class) -> access$4
    void access$5(com.holding.smile.activity.LoginActivity,java.lang.Integer) -> access$5
com.holding.smile.activity.LoginActivity$1 -> com.holding.smile.activity.LoginActivity$1:
    com.holding.smile.activity.LoginActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.MainActivity -> com.holding.smile.activity.MainActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_DID_REFRESH -> WHAT_DID_REFRESH
    int AUTO_LOGIN -> AUTO_LOGIN
    com.holding.smile.myview.PullToRefreshView mPullToRefreshView -> mPullToRefreshView
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    java.util.List viewList -> viewList
    com.holding.smile.adapter.MyPagerAdapter pagerAdapter -> pagerAdapter
    android.widget.ImageView[] tips -> tips
    com.holding.smile.adapter.VerticalListAdapter vlAdapter -> vlAdapter
    com.holding.smile.myview.MyListView listView -> listView
    java.util.List recActList -> recActList
    java.util.List brandJGoodsList -> brandJGoodsList
    java.lang.Integer cid -> cid
    android.widget.TextView headerDescription -> headerDescription
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onHeaderRefresh(com.holding.smile.myview.PullToRefreshView) -> onHeaderRefresh
    void loadData() -> loadData
    void onRefresh() -> onRefresh
    void onDestroy() -> onDestroy
    void addViewPager() -> addViewPager
    java.util.List access$0(com.holding.smile.activity.MainActivity) -> access$0
    java.util.List access$1(com.holding.smile.activity.MainActivity) -> access$1
    void access$2(com.holding.smile.activity.MainActivity) -> access$2
    java.util.List access$3(com.holding.smile.activity.MainActivity) -> access$3
    void access$4(com.holding.smile.activity.MainActivity,com.holding.smile.adapter.MyPagerAdapter) -> access$4
    android.support.v4.view.ViewPager access$5(com.holding.smile.activity.MainActivity) -> access$5
    com.holding.smile.adapter.MyPagerAdapter access$6(com.holding.smile.activity.MainActivity) -> access$6
    com.holding.smile.adapter.VerticalListAdapter access$7(com.holding.smile.activity.MainActivity) -> access$7
    com.holding.smile.myview.PullToRefreshView access$8(com.holding.smile.activity.MainActivity) -> access$8
    android.os.Handler access$9(com.holding.smile.activity.MainActivity) -> access$9
    android.widget.ImageView[] access$10(com.holding.smile.activity.MainActivity) -> access$10
com.holding.smile.activity.MainActivity$1 -> com.holding.smile.activity.MainActivity$1:
    com.holding.smile.activity.MainActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.MainActivity$2 -> com.holding.smile.activity.MainActivity$2:
    com.holding.smile.activity.MainActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.MainActivity$3 -> com.holding.smile.activity.MainActivity$3:
    com.holding.smile.activity.MainActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.MainActivity$4 -> com.holding.smile.activity.MainActivity$4:
    com.holding.smile.activity.MainActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.MainActivity$5 -> com.holding.smile.activity.MainActivity$5:
    com.holding.smile.activity.MainActivity this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void setImageBackground(int) -> setImageBackground
com.holding.smile.activity.MainTwoActivity -> com.holding.smile.activity.MainTwoActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_DID_REFRESH -> WHAT_DID_REFRESH
    int WHAT_DID_MORE -> WHAT_DID_MORE
    com.holding.smile.adapter.MyJGoodsAdapter adapter -> adapter
    java.util.List mStrings -> mStrings
    int LIMIT -> LIMIT
    com.holding.smile.myview.PullToRefreshView mPullToRefreshView -> mPullToRefreshView
    android.widget.ListView mListView -> mListView
    java.lang.Integer bid -> bid
    java.lang.Integer cid -> cid
    java.lang.String seqorderType -> seqorderType
    java.util.List sorttypeList -> sorttypeList
    android.widget.AbsListView$OnScrollListener mScrollListener -> mScrollListener
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void setSortTypeLayout() -> setSortTypeLayout
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onFooterRefresh(com.holding.smile.myview.PullToRefreshView) -> onFooterRefresh
    void onHeaderRefresh(com.holding.smile.myview.PullToRefreshView) -> onHeaderRefresh
    void loadData() -> loadData
    void onRefresh() -> onRefresh
    void onLoadMore() -> onLoadMore
    void onDestroy() -> onDestroy
    com.holding.smile.adapter.MyJGoodsAdapter access$0(com.holding.smile.activity.MainTwoActivity) -> access$0
    void access$1(com.holding.smile.activity.MainTwoActivity) -> access$1
    java.util.List access$2(com.holding.smile.activity.MainTwoActivity) -> access$2
    com.holding.smile.myview.PullToRefreshView access$3(com.holding.smile.activity.MainTwoActivity) -> access$3
    void access$4(com.holding.smile.activity.MainTwoActivity,java.lang.String) -> access$4
com.holding.smile.activity.MainTwoActivity$1 -> com.holding.smile.activity.MainTwoActivity$1:
    com.holding.smile.activity.MainTwoActivity this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.holding.smile.activity.MainTwoActivity$2 -> com.holding.smile.activity.MainTwoActivity$2:
    com.holding.smile.activity.MainTwoActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.MainTwoActivity$3 -> com.holding.smile.activity.MainTwoActivity$3:
    com.holding.smile.activity.MainTwoActivity this$0 -> this$0
    com.holding.smile.myview.MyLinearLayout val$sortTypeLayout -> val$sortTypeLayout
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.MainTwoActivity$4 -> com.holding.smile.activity.MainTwoActivity$4:
    com.holding.smile.activity.MainTwoActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.MainTwoActivity$5 -> com.holding.smile.activity.MainTwoActivity$5:
    com.holding.smile.activity.MainTwoActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.MyApplication -> com.holding.smile.activity.MyApplication:
    java.lang.String LOG_TAG -> LOG_TAG
    com.holding.smile.activity.MyApplication singleton -> singleton
    com.holding.smile.cache.ImageLoader mImageLoader -> mImageLoader
    java.lang.Integer screenWidth -> screenWidth
    java.lang.Integer screenHeight -> screenHeight
    java.lang.Float density -> density
    com.holding.smile.service.DataService dataService -> dataService
    com.holding.smile.service.SubmitService submitService -> submitService
    com.holding.smile.service.SQLiteService sqliteService -> sqliteService
    com.holding.smile.service.LoginService loginService -> loginService
    java.lang.String jgoods_img_url -> jgoods_img_url
    java.lang.String tb_url -> tb_url
    com.holding.smile.entity.SUser currentUser -> currentUser
    java.lang.String sessionId -> sessionId
    void onCreate() -> onCreate
    com.holding.smile.cache.ImageLoader getImageLoader() -> getImageLoader
    com.holding.smile.service.DataService getDataService() -> getDataService
    com.holding.smile.service.SubmitService getSubmitService() -> getSubmitService
    com.holding.smile.service.LoginService getLoginService() -> getLoginService
    com.holding.smile.activity.MyApplication getInstance() -> getInstance
    java.lang.Integer getScreenWidth() -> getScreenWidth
    void setScreenWidth(java.lang.Integer) -> setScreenWidth
    java.lang.Integer getScreenHeight() -> getScreenHeight
    void setScreenHeight(java.lang.Integer) -> setScreenHeight
    java.lang.Float getDensity() -> getDensity
    void setDensity(java.lang.Float) -> setDensity
    com.holding.smile.entity.SUser getCurrentUser() -> getCurrentUser
    void setCurrentUser(com.holding.smile.entity.SUser) -> setCurrentUser
    java.lang.String getSessionId() -> getSessionId
    void setSessionId(java.lang.String) -> setSessionId
    com.holding.smile.service.SQLiteService getSqliteService() -> getSqliteService
    void setSqliteService(com.holding.smile.service.SQLiteService) -> setSqliteService
    java.lang.String getTb_url() -> getTb_url
    void setTb_url(java.lang.String) -> setTb_url
    void appExit() -> appExit
com.holding.smile.activity.MyOrdersActivity -> com.holding.smile.activity.MyOrdersActivity:
    java.util.List list -> list
    com.holding.smile.adapter.MyOrdersAdapter adapter -> adapter
    com.holding.smile.myview.MyListView listView -> listView
    java.lang.String status -> status
    android.widget.TextView editView -> editView
    android.widget.TextView allButton -> allButton
    android.widget.TextView finshButton -> finshButton
    android.widget.TextView unfinshButton -> unfinshButton
    android.widget.ImageView allChecked -> allChecked
    android.widget.TextView allPayButton -> allPayButton
    android.view.View footerView -> footerView
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> loadData
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String access$0(com.holding.smile.activity.MyOrdersActivity) -> access$0
    android.widget.TextView access$1(com.holding.smile.activity.MyOrdersActivity) -> access$1
    android.widget.TextView access$2(com.holding.smile.activity.MyOrdersActivity) -> access$2
    android.widget.TextView access$3(com.holding.smile.activity.MyOrdersActivity) -> access$3
    void access$4(com.holding.smile.activity.MyOrdersActivity,java.util.List) -> access$4
    java.util.List access$5(com.holding.smile.activity.MyOrdersActivity) -> access$5
    com.holding.smile.adapter.MyOrdersAdapter access$6(com.holding.smile.activity.MyOrdersActivity) -> access$6
    android.os.Handler access$7(com.holding.smile.activity.MyOrdersActivity) -> access$7
    void access$8(com.holding.smile.activity.MyOrdersActivity,com.holding.smile.adapter.MyOrdersAdapter) -> access$8
    com.holding.smile.myview.MyListView access$9(com.holding.smile.activity.MyOrdersActivity) -> access$9
    android.widget.TextView access$10(com.holding.smile.activity.MyOrdersActivity) -> access$10
    android.view.View access$11(com.holding.smile.activity.MyOrdersActivity) -> access$11
    android.widget.ImageView access$12(com.holding.smile.activity.MyOrdersActivity) -> access$12
com.holding.smile.activity.MyOrdersActivity$1 -> com.holding.smile.activity.MyOrdersActivity$1:
    com.holding.smile.activity.MyOrdersActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.MyOrdersActivity$2 -> com.holding.smile.activity.MyOrdersActivity$2:
    com.holding.smile.activity.MyOrdersActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.MyOrdersActivity$3 -> com.holding.smile.activity.MyOrdersActivity$3:
    com.holding.smile.activity.MyOrdersActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.MySmileActivity -> com.holding.smile.activity.MySmileActivity:
    android.widget.LinearLayout myOrdersLayout -> myOrdersLayout
    android.widget.LinearLayout myCouponLayout -> myCouponLayout
    android.widget.LinearLayout settingLayout -> settingLayout
    android.widget.LinearLayout clearCacheLayout -> clearCacheLayout
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void alert() -> alert
com.holding.smile.activity.MySmileActivity$1 -> com.holding.smile.activity.MySmileActivity$1:
    com.holding.smile.activity.MySmileActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.holding.smile.activity.OrderDetailActivity -> com.holding.smile.activity.OrderDetailActivity:
    com.holding.smile.adapter.OrderDetailAdapter adapter -> adapter
    com.holding.smile.myview.MyListView listView -> listView
    com.holding.smile.dto.OrderDto order -> order
    android.widget.TextView total -> total
    android.widget.TextView orderNumberView -> orderNumberView
    android.widget.TextView orderTimeView -> orderTimeView
    android.widget.TextView consigneeAddressView -> consigneeAddressView
    android.widget.TextView consigneePhoneView -> consigneePhoneView
    android.widget.TextView consigneeNameView -> consigneeNameView
    android.widget.TextView idcardView -> idcardView
    android.widget.ImageView idcardImageView -> idcardImageView
    android.widget.Button statusButton -> statusButton
    com.holding.smile.myview.MyListView logisticsListView -> logisticsListView
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    com.holding.smile.dto.OrderDto access$0(com.holding.smile.activity.OrderDetailActivity) -> access$0
com.holding.smile.activity.OrderDetailActivity$1 -> com.holding.smile.activity.OrderDetailActivity$1:
    com.holding.smile.activity.OrderDetailActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.OrderInformActivity -> com.holding.smile.activity.OrderInformActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_DID_UPDATE_DATA -> WHAT_DID_UPDATE_DATA
    int WHAT_PROGRESS_STATE -> WHAT_PROGRESS_STATE
    int WHAT_DID_CONFIRMORDER_DATA -> WHAT_DID_CONFIRMORDER_DATA
    android.app.ProgressDialog pDialog -> pDialog
    int mProgress -> mProgress
    com.holding.smile.myview.MyListView listView -> listView
    com.holding.smile.adapter.MyOrderInformAdapter orderAdapter -> orderAdapter
    android.widget.TextView confirmBtn -> confirmBtn
    android.widget.TextView totalNumber -> totalNumber
    android.widget.TextView totalMoney -> totalMoney
    com.holding.smile.dto.OrderDto order -> order
    java.util.List orderDetails -> orderDetails
    java.lang.Integer gid -> gid
    java.lang.Integer addressId -> addressId
    java.lang.Integer qty -> qty
    java.util.List cartIds -> cartIds
    java.lang.Integer allQty -> allQty
    java.math.BigDecimal allTotal -> allTotal
    boolean cartFlag -> cartFlag
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void loadData() -> loadData
    void initPDialog() -> initPDialog
    void confirmOrder() -> confirmOrder
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void calculateTotal() -> calculateTotal
    void access$0(com.holding.smile.activity.OrderInformActivity,com.holding.smile.dto.OrderDto) -> access$0
    com.holding.smile.dto.OrderDto access$1(com.holding.smile.activity.OrderInformActivity) -> access$1
    void access$2(com.holding.smile.activity.OrderInformActivity,java.util.List) -> access$2
    java.util.List access$3(com.holding.smile.activity.OrderInformActivity) -> access$3
    void access$4(com.holding.smile.activity.OrderInformActivity) -> access$4
    void access$5(com.holding.smile.activity.OrderInformActivity) -> access$5
    void access$6(com.holding.smile.activity.OrderInformActivity,java.lang.Integer) -> access$6
    com.holding.smile.adapter.MyOrderInformAdapter access$7(com.holding.smile.activity.OrderInformActivity) -> access$7
    android.app.ProgressDialog access$8(com.holding.smile.activity.OrderInformActivity) -> access$8
    java.util.List access$9(com.holding.smile.activity.OrderInformActivity) -> access$9
    boolean access$10(com.holding.smile.activity.OrderInformActivity) -> access$10
    int access$11(com.holding.smile.activity.OrderInformActivity) -> access$11
    void access$12(com.holding.smile.activity.OrderInformActivity,int) -> access$12
    android.os.Handler access$13(com.holding.smile.activity.OrderInformActivity) -> access$13
com.holding.smile.activity.OrderInformActivity$1 -> com.holding.smile.activity.OrderInformActivity$1:
    com.holding.smile.activity.OrderInformActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.OrderPayActivity -> com.holding.smile.activity.OrderPayActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_PROGRESS_STATE -> WHAT_PROGRESS_STATE
    android.app.ProgressDialog pDialog -> pDialog
    int mProgress -> mProgress
    android.widget.ImageView payBtn -> payBtn
    android.widget.TextView payMsgText -> payMsgText
    android.widget.TextView numberText -> numberText
    android.widget.TextView amountText -> amountText
    android.widget.TextView timeText -> timeText
    java.lang.String number -> number
    java.math.BigDecimal amount -> amount
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initPDialog() -> initPDialog
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    android.app.ProgressDialog access$0(com.holding.smile.activity.OrderPayActivity) -> access$0
    int access$1(com.holding.smile.activity.OrderPayActivity) -> access$1
    void access$2(com.holding.smile.activity.OrderPayActivity,int) -> access$2
    android.os.Handler access$3(com.holding.smile.activity.OrderPayActivity) -> access$3
com.holding.smile.activity.OrderPayActivity$1 -> com.holding.smile.activity.OrderPayActivity$1:
    com.holding.smile.activity.OrderPayActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.PersonalSettingsActivity -> com.holding.smile.activity.PersonalSettingsActivity:
    android.widget.LinearLayout idcardLayout -> idcardLayout
    android.widget.LinearLayout emailLayout -> emailLayout
    android.widget.LinearLayout mobileLayout -> mobileLayout
    android.widget.LinearLayout userPwdLayout -> userPwdLayout
    android.widget.Button logoutButton -> logoutButton
    android.widget.TextView emailTextView -> emailTextView
    android.widget.TextView phoneTextView -> phoneTextView
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loadData() -> loadData
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.widget.TextView access$0(com.holding.smile.activity.PersonalSettingsActivity) -> access$0
    android.widget.TextView access$1(com.holding.smile.activity.PersonalSettingsActivity) -> access$1
com.holding.smile.activity.PersonalSettingsActivity$1 -> com.holding.smile.activity.PersonalSettingsActivity$1:
    com.holding.smile.activity.PersonalSettingsActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.PersonalSettingsActivity$2 -> com.holding.smile.activity.PersonalSettingsActivity$2:
    com.holding.smile.activity.PersonalSettingsActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.holding.smile.activity.PhoneActivity -> com.holding.smile.activity.PhoneActivity:
    android.widget.EditText phoneEditText -> phoneEditText
    android.widget.Button saveButton -> saveButton
    java.lang.String phone -> phone
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.RegisterActivity -> com.holding.smile.activity.RegisterActivity:
    android.widget.EditText userAccount -> userAccount
    android.widget.EditText userPwd -> userPwd
    android.widget.EditText userPwd2 -> userPwd2
    android.widget.Button btnToRegister -> btnToRegister
    int REGISTER_BY_SELF -> REGISTER_BY_SELF
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void loginViewInit() -> loginViewInit
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void access$0(com.holding.smile.activity.RegisterActivity) -> access$0
com.holding.smile.activity.RegisterActivity$1 -> com.holding.smile.activity.RegisterActivity$1:
    com.holding.smile.activity.RegisterActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.ResetPwdActivity -> com.holding.smile.activity.ResetPwdActivity:
    android.widget.EditText pwdOld -> pwdOld
    android.widget.EditText pwdNew -> pwdNew
    android.widget.EditText pwdNewConfirm -> pwdNewConfirm
    android.widget.Button pwdSave -> pwdSave
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.EditText access$0(com.holding.smile.activity.ResetPwdActivity) -> access$0
    android.widget.EditText access$1(com.holding.smile.activity.ResetPwdActivity) -> access$1
    android.widget.EditText access$2(com.holding.smile.activity.ResetPwdActivity) -> access$2
com.holding.smile.activity.ResetPwdActivity$1 -> com.holding.smile.activity.ResetPwdActivity$1:
    com.holding.smile.activity.ResetPwdActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.ResetPwdActivity$2 -> com.holding.smile.activity.ResetPwdActivity$2:
    com.holding.smile.activity.ResetPwdActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.SearchGoodsActivity -> com.holding.smile.activity.SearchGoodsActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_DID_REFRESH -> WHAT_DID_REFRESH
    int WHAT_DID_MORE -> WHAT_DID_MORE
    int LIMIT -> LIMIT
    android.widget.EditText editText -> editText
    android.widget.ImageView resetView -> resetView
    android.widget.ListView historyListView -> historyListView
    java.util.List historySearchList -> historySearchList
    boolean smartFlag -> smartFlag
    com.holding.smile.adapter.MyJGoodsAdapter adapter -> adapter
    java.util.List mStrings -> mStrings
    com.holding.smile.myview.PullToRefreshView mPullToRefreshView -> mPullToRefreshView
    android.widget.ListView mListView -> mListView
    android.widget.AbsListView$OnScrollListener mScrollListener -> mScrollListener
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void showHistoryListView() -> showHistoryListView
    void searchGoodsList(java.lang.String) -> searchGoodsList
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onFooterRefresh(com.holding.smile.myview.PullToRefreshView) -> onFooterRefresh
    void onHeaderRefresh(com.holding.smile.myview.PullToRefreshView) -> onHeaderRefresh
    void loadData(java.lang.String) -> loadData
    void onRefresh() -> onRefresh
    void onLoadMore() -> onLoadMore
    com.holding.smile.adapter.MyJGoodsAdapter access$0(com.holding.smile.activity.SearchGoodsActivity) -> access$0
    java.util.List access$1(com.holding.smile.activity.SearchGoodsActivity) -> access$1
    com.holding.smile.myview.PullToRefreshView access$2(com.holding.smile.activity.SearchGoodsActivity) -> access$2
    android.widget.EditText access$3(com.holding.smile.activity.SearchGoodsActivity) -> access$3
    void access$4(com.holding.smile.activity.SearchGoodsActivity,boolean) -> access$4
    android.widget.ListView access$5(com.holding.smile.activity.SearchGoodsActivity) -> access$5
    boolean access$6(com.holding.smile.activity.SearchGoodsActivity) -> access$6
    java.util.List access$7(com.holding.smile.activity.SearchGoodsActivity) -> access$7
com.holding.smile.activity.SearchGoodsActivity$1 -> com.holding.smile.activity.SearchGoodsActivity$1:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.holding.smile.activity.SearchGoodsActivity$2 -> com.holding.smile.activity.SearchGoodsActivity$2:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.SearchGoodsActivity$3 -> com.holding.smile.activity.SearchGoodsActivity$3:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.holding.smile.activity.SearchGoodsActivity$4 -> com.holding.smile.activity.SearchGoodsActivity$4:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.holding.smile.activity.SearchGoodsActivity$5 -> com.holding.smile.activity.SearchGoodsActivity$5:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.holding.smile.activity.SearchGoodsActivity$6 -> com.holding.smile.activity.SearchGoodsActivity$6:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.SearchGoodsActivity$7 -> com.holding.smile.activity.SearchGoodsActivity$7:
    com.holding.smile.activity.SearchGoodsActivity this$0 -> this$0
    void run() -> run
com.holding.smile.activity.ShoppingCartActivity -> com.holding.smile.activity.ShoppingCartActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    int WHAT_DID_UPDATE_DATA -> WHAT_DID_UPDATE_DATA
    int WHAT_PROGRESS_STATE -> WHAT_PROGRESS_STATE
    int WHAT_DID_SELECT_DATA -> WHAT_DID_SELECT_DATA
    int WHAT_DID_DEL_DATA -> WHAT_DID_DEL_DATA
    android.app.ProgressDialog pDialog -> pDialog
    int mProgress -> mProgress
    android.widget.TextView editBtn -> editBtn
    com.holding.smile.myview.MyListView listView -> listView
    com.holding.smile.adapter.MyShoppingCartAdapter cartAdapter -> cartAdapter
    android.widget.TextView payoffBtn -> payoffBtn
    android.widget.TextView totalNumber -> totalNumber
    android.widget.TextView totalMoney -> totalMoney
    android.widget.ImageView allChecked -> allChecked
    java.util.List cartItemList -> cartItemList
    java.lang.Integer allQty -> allQty
    java.math.BigDecimal allTotal -> allTotal
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void loadData() -> loadData
    void initPDialog() -> initPDialog
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void calculateTotal() -> calculateTotal
    void alert(java.lang.Integer) -> alert
    java.util.List access$0(com.holding.smile.activity.ShoppingCartActivity) -> access$0
    void access$1(com.holding.smile.activity.ShoppingCartActivity) -> access$1
    void access$2(com.holding.smile.activity.ShoppingCartActivity) -> access$2
    android.app.ProgressDialog access$3(com.holding.smile.activity.ShoppingCartActivity) -> access$3
    void access$4(com.holding.smile.activity.ShoppingCartActivity,java.lang.Integer) -> access$4
    int access$5(com.holding.smile.activity.ShoppingCartActivity) -> access$5
    void access$6(com.holding.smile.activity.ShoppingCartActivity,int) -> access$6
    android.os.Handler access$7(com.holding.smile.activity.ShoppingCartActivity) -> access$7
    android.widget.ImageView access$8(com.holding.smile.activity.ShoppingCartActivity) -> access$8
    com.holding.smile.adapter.MyShoppingCartAdapter access$9(com.holding.smile.activity.ShoppingCartActivity) -> access$9
com.holding.smile.activity.ShoppingCartActivity$1 -> com.holding.smile.activity.ShoppingCartActivity$1:
    com.holding.smile.activity.ShoppingCartActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.ShoppingCartActivity$2 -> com.holding.smile.activity.ShoppingCartActivity$2:
    com.holding.smile.activity.ShoppingCartActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.ShoppingCartActivity$3 -> com.holding.smile.activity.ShoppingCartActivity$3:
    com.holding.smile.activity.ShoppingCartActivity this$0 -> this$0
    java.lang.Integer val$itemId -> val$itemId
    void onClick(android.content.DialogInterface,int) -> onClick
com.holding.smile.activity.SortActivity -> com.holding.smile.activity.SortActivity:
    int WHAT_DID_LOAD_DATA -> WHAT_DID_LOAD_DATA
    com.holding.smile.adapter.MyJGoodsAdapter adapter -> adapter
    java.util.List mStrings -> mStrings
    android.widget.ListView mListView -> mListView
    java.lang.String sortUrl -> sortUrl
    java.util.List jSortList -> jSortList
    android.widget.AbsListView$OnScrollListener mScrollListener -> mScrollListener
    android.os.Handler mUIHandler -> mUIHandler
    void onCreate(android.os.Bundle) -> onCreate
    void setSortLayout() -> setSortLayout
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void loadData() -> loadData
    void onDestroy() -> onDestroy
    com.holding.smile.adapter.MyJGoodsAdapter access$0(com.holding.smile.activity.SortActivity) -> access$0
    java.util.List access$1(com.holding.smile.activity.SortActivity) -> access$1
    void access$2(com.holding.smile.activity.SortActivity,java.lang.String) -> access$2
com.holding.smile.activity.SortActivity$1 -> com.holding.smile.activity.SortActivity$1:
    com.holding.smile.activity.SortActivity this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.holding.smile.activity.SortActivity$2 -> com.holding.smile.activity.SortActivity$2:
    com.holding.smile.activity.SortActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.holding.smile.activity.SortActivity$3 -> com.holding.smile.activity.SortActivity$3:
    com.holding.smile.activity.SortActivity this$0 -> this$0
    com.holding.smile.myview.MyLinearLayout val$jSortLayout -> val$jSortLayout
    void onClick(android.view.View) -> onClick
com.holding.smile.activity.WebViewActivity -> com.holding.smile.activity.WebViewActivity:
    java.lang.String number -> number
    java.math.BigDecimal amount -> amount
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    java.lang.String access$0(com.holding.smile.activity.WebViewActivity) -> access$0
    java.math.BigDecimal access$1(com.holding.smile.activity.WebViewActivity) -> access$1
com.holding.smile.activity.WebViewActivity$1 -> com.holding.smile.activity.WebViewActivity$1:
    com.holding.smile.activity.WebViewActivity this$0 -> this$0
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.holding.smile.adapter.CategoryAdapter -> com.holding.smile.a.a:
    java.util.List cateList -> a
    android.content.Context context -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.holding.smile.adapter.CategoryAdapter$ViewHolder -> com.holding.smile.a.b:
    android.widget.TextView name -> a
    android.widget.TextView gt -> b
com.holding.smile.adapter.HistorySearchAdapter -> com.holding.smile.a.c:
    java.util.List historySearchList -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.holding.smile.adapter.HorizontalGridViewAdapter -> com.holding.smile.a.d:
    android.view.LayoutInflater mInflater -> a
    java.util.List jGoodsList -> b
    android.content.Context context -> c
    com.holding.smile.cache.ImageLoader mImageLoader -> d
    boolean mBusy -> e
    void setFlagBusy(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.holding.smile.adapter.HorizontalGridViewAdapter) -> a
com.holding.smile.adapter.HorizontalGridViewAdapter$1 -> com.holding.smile.a.e:
    com.holding.smile.adapter.HorizontalGridViewAdapter this$0 -> a
    com.holding.smile.entity.JGoods val$jGoods -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.HorizontalGridViewAdapter$ViewHolder -> com.holding.smile.a.f:
    android.widget.TextView pn -> a
    android.widget.ImageView im -> b
    void access$1(com.holding.smile.adapter.HorizontalGridViewAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$2(com.holding.smile.adapter.HorizontalGridViewAdapter$ViewHolder,android.widget.TextView) -> a
    android.widget.ImageView access$3(com.holding.smile.adapter.HorizontalGridViewAdapter$ViewHolder) -> a
    android.widget.TextView access$4(com.holding.smile.adapter.HorizontalGridViewAdapter$ViewHolder) -> b
com.holding.smile.adapter.MyIdcardAdapter -> com.holding.smile.a.g:
    android.content.Context context -> a
    java.util.List idcardList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.holding.smile.adapter.MyIdcardAdapter) -> a
com.holding.smile.adapter.MyIdcardAdapter$1 -> com.holding.smile.a.h:
    com.holding.smile.adapter.MyIdcardAdapter this$0 -> a
    com.holding.smile.entity.Idcard val$idcard -> b
    android.view.ViewGroup val$parent -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyIdcardAdapter$ViewHolder -> com.holding.smile.a.i:
    android.widget.TextView name -> a
    android.widget.TextView idcard -> b
com.holding.smile.adapter.MyJGoodsAdapter -> com.holding.smile.a.j:
    android.content.Context context -> a
    java.util.List jGoodsList -> b
    com.holding.smile.cache.ImageLoader mImageLoader -> c
    boolean mBusy -> d
    void setFlagBusy(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.holding.smile.adapter.MyJGoodsAdapter) -> a
com.holding.smile.adapter.MyJGoodsAdapter$1 -> com.holding.smile.a.k:
    com.holding.smile.adapter.MyJGoodsAdapter this$0 -> a
    com.holding.smile.entity.JGoods val$jGoods -> b
    android.view.ViewGroup val$parent -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyJGoodsAdapter$ViewHolder -> com.holding.smile.a.l:
    android.widget.TextView n -> a
    android.widget.TextView lp -> b
    android.widget.TextView pp -> c
    android.widget.ImageView p -> d
    android.widget.TextView sn -> e
com.holding.smile.adapter.MyOrderInformAdapter -> com.holding.smile.a.m:
    android.content.Context context -> a
    java.util.List orderDetails -> b
    com.holding.smile.cache.ImageLoader mImageLoader -> c
    boolean mBusy -> d
    java.lang.Integer sWidth -> e
    android.app.ProgressDialog pDialog -> f
    android.os.Handler mUIHandler -> g
    boolean cartFlag -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showPDialog() -> a
    android.content.Context access$0(com.holding.smile.adapter.MyOrderInformAdapter) -> a
    void access$1(com.holding.smile.adapter.MyOrderInformAdapter) -> b
    android.os.Handler access$2(com.holding.smile.adapter.MyOrderInformAdapter) -> c
com.holding.smile.adapter.MyOrderInformAdapter$1 -> com.holding.smile.a.n:
    com.holding.smile.adapter.MyOrderInformAdapter this$0 -> a
    com.holding.smile.dto.ProductDto val$jGoods -> b
    android.view.ViewGroup val$parent -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyOrderInformAdapter$2 -> com.holding.smile.a.o:
    com.holding.smile.adapter.MyOrderInformAdapter this$0 -> a
    com.holding.smile.dto.OrderDetailDto val$orderDetail -> b
    com.holding.smile.dto.ProductDto val$jGoods -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyOrderInformAdapter$3 -> com.holding.smile.a.p:
    com.holding.smile.adapter.MyOrderInformAdapter this$0 -> a
    com.holding.smile.dto.OrderDetailDto val$orderDetail -> b
    com.holding.smile.dto.ProductDto val$jGoods -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyOrderInformAdapter$ViewHolder -> com.holding.smile.a.q:
    android.widget.TextView n -> a
    android.widget.TextView pp -> b
    android.widget.TextView spq -> c
    android.widget.ImageView p -> d
    android.widget.TextView color -> e
    android.widget.TextView brandstyle -> f
    android.widget.TextView qty -> g
    android.widget.ImageView subBtn -> h
    android.widget.ImageView addBtn -> i
com.holding.smile.adapter.MyOrdersAdapter -> com.holding.smile.a.r:
    android.content.Context context -> a
    java.util.List orderList -> b
    com.holding.smile.myview.MyListView listView -> c
    com.holding.smile.adapter.OrderDetailAdapter orderAdapter -> d
    boolean showDelete -> e
    java.util.Set numbers -> f
    java.math.BigDecimal total -> g
    java.lang.Boolean selectAll -> h
    android.os.Handler mUIHandler -> i
    void setData(java.util.List) -> a
    void showEdit(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setSelectAll(java.lang.Boolean) -> a
    java.util.Set getSelectNumbers() -> a
    java.math.BigDecimal getTotal() -> b
    android.content.Context access$0(com.holding.smile.adapter.MyOrdersAdapter) -> a
    java.util.Set access$1(com.holding.smile.adapter.MyOrdersAdapter) -> b
    java.math.BigDecimal access$2(com.holding.smile.adapter.MyOrdersAdapter) -> c
    void access$3(com.holding.smile.adapter.MyOrdersAdapter,java.math.BigDecimal) -> a
    void access$4(com.holding.smile.adapter.MyOrdersAdapter,java.lang.Boolean) -> a
com.holding.smile.adapter.MyOrdersAdapter$1 -> com.holding.smile.a.s:
    com.holding.smile.adapter.MyOrdersAdapter this$0 -> a
    com.holding.smile.dto.OrderDto val$order -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyOrdersAdapter$2 -> com.holding.smile.a.t:
    com.holding.smile.adapter.MyOrdersAdapter this$0 -> a
    com.holding.smile.dto.OrderDto val$order -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyOrdersAdapter$3 -> com.holding.smile.a.u:
    com.holding.smile.adapter.MyOrdersAdapter this$0 -> a
    com.holding.smile.dto.OrderDto val$order -> b
    com.holding.smile.adapter.MyOrdersAdapter$ViewHolder val$holder -> c
    void onClick(android.view.View) -> onClick
    com.holding.smile.adapter.MyOrdersAdapter access$0(com.holding.smile.adapter.MyOrdersAdapter$3) -> a
com.holding.smile.adapter.MyOrdersAdapter$3$1 -> com.holding.smile.a.v:
    com.holding.smile.adapter.MyOrdersAdapter$3 this$1 -> a
    com.holding.smile.dto.OrderDto val$order -> b
    com.holding.smile.adapter.MyOrdersAdapter$ViewHolder val$holder -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.holding.smile.adapter.MyOrdersAdapter$ViewHolder -> com.holding.smile.a.w:
    android.widget.TextView number -> a
    android.widget.TextView time -> b
    android.widget.TextView price -> c
    android.widget.TextView totalnum -> d
    android.widget.TextView statusButton -> e
    android.widget.ImageView deleteButton -> f
    android.widget.ImageView checkBoxImage -> g
com.holding.smile.adapter.MyPagerAdapter -> com.holding.smile.a.x:
    com.holding.smile.cache.ImageLoader mImageLoader -> a
    java.util.List mListViews -> b
    void setListViews(java.util.List) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
com.holding.smile.adapter.MyShoppingCartAdapter -> com.holding.smile.a.y:
    android.content.Context context -> a
    java.util.List cartItemList -> b
    com.holding.smile.cache.ImageLoader mImageLoader -> c
    boolean mBusy -> d
    java.lang.Integer sWidth -> e
    android.app.ProgressDialog pDialog -> f
    android.os.Handler mUIHandler -> g
    java.util.Set sIds -> h
    java.lang.Boolean editFlag -> i
    java.lang.Boolean selectAll -> j
    void setEditFlag(boolean) -> a
    void setSelectAll(java.lang.Boolean) -> a
    java.lang.Boolean getSelectAll() -> a
    java.util.Set getSelectIds() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showPDialog() -> c
    android.content.Context access$0(com.holding.smile.adapter.MyShoppingCartAdapter) -> a
    void access$1(com.holding.smile.adapter.MyShoppingCartAdapter) -> b
    android.os.Handler access$2(com.holding.smile.adapter.MyShoppingCartAdapter) -> c
    java.util.Set access$3(com.holding.smile.adapter.MyShoppingCartAdapter) -> d
    void access$4(com.holding.smile.adapter.MyShoppingCartAdapter,java.lang.Boolean) -> a
com.holding.smile.adapter.MyShoppingCartAdapter$1 -> com.holding.smile.a.z:
    com.holding.smile.adapter.MyShoppingCartAdapter this$0 -> a
    com.holding.smile.dto.ProductDto val$jGoods -> b
    android.view.ViewGroup val$parent -> c
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyShoppingCartAdapter$2 -> com.holding.smile.a.aa:
    com.holding.smile.adapter.MyShoppingCartAdapter this$0 -> a
    com.holding.smile.entity.CartItem val$cartItem -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyShoppingCartAdapter$3 -> com.holding.smile.a.ab:
    com.holding.smile.adapter.MyShoppingCartAdapter this$0 -> a
    com.holding.smile.entity.CartItem val$cartItem -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyShoppingCartAdapter$4 -> com.holding.smile.a.ac:
    com.holding.smile.adapter.MyShoppingCartAdapter this$0 -> a
    com.holding.smile.entity.CartItem val$cartItem -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyShoppingCartAdapter$5 -> com.holding.smile.a.ad:
    com.holding.smile.adapter.MyShoppingCartAdapter this$0 -> a
    com.holding.smile.entity.CartItem val$cartItem -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.MyShoppingCartAdapter$ViewHolder -> com.holding.smile.a.ae:
    android.widget.TextView n -> a
    android.widget.TextView pp -> b
    android.widget.ImageView p -> c
    android.widget.TextView color -> d
    android.widget.TextView brandstyle -> e
    android.widget.TextView qty -> f
    android.widget.ImageView subBtn -> g
    android.widget.ImageView addBtn -> h
    android.widget.ImageView checkBox -> i
    android.widget.ImageView delBtn -> j
com.holding.smile.adapter.OrderDetailAdapter -> com.holding.smile.a.af:
    android.content.Context context -> a
    com.holding.smile.dto.OrderDto orderDto -> b
    java.util.List orderDetails -> c
    com.holding.smile.cache.ImageLoader mImageLoader -> d
    boolean isNeedClick -> e
    java.lang.Integer sWidth -> f
    android.view.ViewGroup activityParent -> g
    void notNeedClick() -> a
    void setActivityParent(android.view.ViewGroup) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.holding.smile.adapter.OrderDetailAdapter) -> a
    com.holding.smile.dto.OrderDto access$1(com.holding.smile.adapter.OrderDetailAdapter) -> b
    android.view.ViewGroup access$2(com.holding.smile.adapter.OrderDetailAdapter) -> c
com.holding.smile.adapter.OrderDetailAdapter$1 -> com.holding.smile.a.ag:
    com.holding.smile.adapter.OrderDetailAdapter this$0 -> a
    android.view.ViewGroup val$parent -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.OrderDetailAdapter$2 -> com.holding.smile.a.ah:
    com.holding.smile.adapter.OrderDetailAdapter this$0 -> a
    com.holding.smile.dto.ProductDto val$jGoods -> b
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.OrderDetailAdapter$ViewHolder -> com.holding.smile.a.ai:
    android.widget.TextView n -> a
    android.widget.TextView pp -> b
    android.widget.TextView spq -> c
    android.widget.ImageView p -> d
    android.widget.TextView color -> e
    android.widget.TextView brandstyle -> f
com.holding.smile.adapter.VerticalListAdapter -> com.holding.smile.a.aj:
    float density -> a
    int cWidth -> b
    int hSpacing -> c
    android.view.LayoutInflater mInflater -> d
    java.util.List brandJGoodsList -> e
    java.lang.Integer cid -> f
    void setCid(java.lang.Integer) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Integer access$0(com.holding.smile.adapter.VerticalListAdapter) -> a
com.holding.smile.adapter.VerticalListAdapter$1 -> com.holding.smile.a.ak:
    com.holding.smile.adapter.VerticalListAdapter this$0 -> a
    com.holding.smile.adapter.HorizontalGridViewAdapter val$hlAdapter -> b
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.holding.smile.adapter.VerticalListAdapter$2 -> com.holding.smile.a.al:
    com.holding.smile.adapter.VerticalListAdapter this$0 -> a
    com.holding.smile.dto.BrandJGoods val$brandJGoods -> b
    android.content.Context val$context -> c
    com.holding.smile.adapter.HorizontalGridViewAdapter val$hlAdapter -> d
    void onClick(android.view.View) -> onClick
com.holding.smile.adapter.VerticalListAdapter$ViewHolder -> com.holding.smile.a.am:
    android.widget.TextView brand -> a
    android.widget.TextView moreText -> b
    android.widget.RelativeLayout relativeLayout -> c
    com.holding.smile.myview.MyGridView gridView -> d
    void access$1(com.holding.smile.adapter.VerticalListAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.holding.smile.adapter.VerticalListAdapter$ViewHolder,android.widget.TextView) -> b
    void access$3(com.holding.smile.adapter.VerticalListAdapter$ViewHolder,android.widget.RelativeLayout) -> a
    void access$4(com.holding.smile.adapter.VerticalListAdapter$ViewHolder,com.holding.smile.myview.MyGridView) -> a
    com.holding.smile.myview.MyGridView access$5(com.holding.smile.adapter.VerticalListAdapter$ViewHolder) -> a
    android.widget.TextView access$6(com.holding.smile.adapter.VerticalListAdapter$ViewHolder) -> b
    android.widget.RelativeLayout access$7(com.holding.smile.adapter.VerticalListAdapter$ViewHolder) -> c
com.holding.smile.cache.AbstractFileCache -> com.holding.smile.b.a:
    java.lang.String dirString -> a
    java.io.File getFile(java.lang.String) -> a
    java.lang.String getSavePath(java.lang.String) -> b
    java.lang.String getCacheDir() -> a
    void clear() -> b
com.holding.smile.cache.FileCache -> com.holding.smile.b.b:
    java.lang.String getSavePath(java.lang.String) -> b
    java.lang.String getCacheDir() -> a
com.holding.smile.cache.ImageLoader -> com.holding.smile.b.c:
    com.holding.smile.cache.MemoryCache memoryCache -> a
    com.holding.smile.cache.AbstractFileCache fileCache -> b
    java.util.Map imageViews -> c
    java.util.concurrent.ExecutorService executorService -> d
    void DisplayImage(java.lang.String,android.widget.ImageView,boolean) -> a
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> a
    void queuePhoto(java.lang.String,android.widget.ImageView) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> b
    android.graphics.Bitmap decodeFile(java.io.File) -> a
    boolean imageViewReused(com.holding.smile.cache.ImageLoader$PhotoToLoad) -> a
    void clearMemoryCache() -> a
    void CopyStream(java.io.InputStream,java.io.OutputStream) -> a
    android.graphics.Bitmap access$0(com.holding.smile.cache.ImageLoader,java.lang.String) -> a
    com.holding.smile.cache.MemoryCache access$1(com.holding.smile.cache.ImageLoader) -> a
com.holding.smile.cache.ImageLoader$BitmapDisplayer -> com.holding.smile.b.d:
    android.graphics.Bitmap bitmap -> a
    com.holding.smile.cache.ImageLoader$PhotoToLoad photoToLoad -> b
    com.holding.smile.cache.ImageLoader this$0 -> c
    void run() -> run
com.holding.smile.cache.ImageLoader$PhotoToLoad -> com.holding.smile.b.e:
    java.lang.String url -> a
    android.widget.ImageView imageView -> b
    com.holding.smile.cache.ImageLoader this$0 -> c
com.holding.smile.cache.ImageLoader$PhotosLoader -> com.holding.smile.b.f:
    com.holding.smile.cache.ImageLoader$PhotoToLoad photoToLoad -> a
    com.holding.smile.cache.ImageLoader this$0 -> b
    void run() -> run
com.holding.smile.cache.MemoryCache -> com.holding.smile.b.g:
    java.util.Map cache -> a
    long size -> b
    long limit -> c
    void setLimit(long) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
    void checkSize() -> b
    void clear() -> a
    long getSizeInBytes(android.graphics.Bitmap) -> a
com.holding.smile.dto.BrandDto -> com.holding.smile.dto.BrandDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
com.holding.smile.dto.BrandJGoods -> com.holding.smile.dto.BrandJGoods:
    java.lang.Integer id -> id
    java.lang.String n -> n
    java.util.List gs -> gs
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getN() -> getN
    void setN(java.lang.String) -> setN
    java.util.List getGs() -> getGs
    void setGs(java.util.List) -> setGs
com.holding.smile.dto.CouponDto -> com.holding.smile.dto.CouponDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String desc -> desc
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
com.holding.smile.dto.LogisticsDto -> com.holding.smile.dto.LogisticsDto:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.util.List getList() -> getList
    void setList(java.util.List) -> setList
com.holding.smile.dto.OrderDetailDto -> com.holding.smile.dto.OrderDetailDto:
    long serialVersionUID -> serialVersionUID
    java.util.List coupons -> coupons
    java.util.List getCoupons() -> getCoupons
    void setCoupons(java.util.List) -> setCoupons
com.holding.smile.dto.OrderDto -> com.holding.smile.dto.OrderDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String number -> number
    java.util.List details -> details
    com.holding.smile.entity.Consignee consignee -> consignee
    java.math.BigDecimal total -> total
    java.lang.Integer qty -> qty
    java.util.List vouchers -> vouchers
    com.holding.smile.entity.UserDto user -> user
    java.lang.String time -> time
    java.lang.String status -> status
    com.holding.smile.dto.LogisticsDto logisticsDto -> logisticsDto
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getNumber() -> getNumber
    void setNumber(java.lang.String) -> setNumber
    java.util.List getDetails() -> getDetails
    void setDetails(java.util.List) -> setDetails
    com.holding.smile.entity.Consignee getConsignee() -> getConsignee
    void setConsignee(com.holding.smile.entity.Consignee) -> setConsignee
    java.math.BigDecimal getTotal() -> getTotal
    void setTotal(java.math.BigDecimal) -> setTotal
    java.util.List getVouchers() -> getVouchers
    void setVouchers(java.util.List) -> setVouchers
    com.holding.smile.entity.UserDto getUser() -> getUser
    void setUser(com.holding.smile.entity.UserDto) -> setUser
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.Integer getQty() -> getQty
    void setQty(java.lang.Integer) -> setQty
    com.holding.smile.dto.LogisticsDto getLogisticsDto() -> getLogisticsDto
    void setLogisticsDto(com.holding.smile.dto.LogisticsDto) -> setLogisticsDto
com.holding.smile.dto.OrderItem -> com.holding.smile.dto.OrderItem:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    short qty -> qty
    com.holding.smile.dto.ProductDto product -> product
    java.math.BigDecimal total -> total
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    short getQty() -> getQty
    void setQty(short) -> setQty
    com.holding.smile.dto.ProductDto getProduct() -> getProduct
    void setProduct(com.holding.smile.dto.ProductDto) -> setProduct
    java.math.BigDecimal getTotal() -> getTotal
    void setTotal(java.math.BigDecimal) -> setTotal
com.holding.smile.dto.ProductDto -> com.holding.smile.dto.ProductDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String[] imgs -> imgs
    java.lang.String color -> color
    java.lang.String brandstyle -> brandstyle
    com.holding.smile.dto.BrandDto brand -> brand
    java.math.BigDecimal purchasingPrice -> purchasingPrice
    short qty -> qty
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.holding.smile.dto.BrandDto getBrand() -> getBrand
    void setBrand(com.holding.smile.dto.BrandDto) -> setBrand
    java.lang.String[] getImgs() -> getImgs
    void setImgs(java.lang.String[]) -> setImgs
    java.lang.String getColor() -> getColor
    void setColor(java.lang.String) -> setColor
    java.lang.String getBrandstyle() -> getBrandstyle
    void setBrandstyle(java.lang.String) -> setBrandstyle
    java.math.BigDecimal getPurchasingPrice() -> getPurchasingPrice
    void setPurchasingPrice(java.math.BigDecimal) -> setPurchasingPrice
    short getQty() -> getQty
    void setQty(short) -> setQty
com.holding.smile.dto.RtnGoodsDto -> com.holding.smile.dto.RtnGoodsDto:
    java.lang.Integer code -> code
    java.util.List data -> data
    com.holding.smile.dto.ValidateDto validate -> validate
    java.lang.Integer getCode() -> getCode
    void setCode(java.lang.Integer) -> setCode
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
    com.holding.smile.dto.ValidateDto getValidate() -> getValidate
    void setValidate(com.holding.smile.dto.ValidateDto) -> setValidate
com.holding.smile.dto.RtnValueDto -> com.holding.smile.dto.RtnValueDto:
    java.lang.Integer code -> code
    com.holding.smile.entity.JGoods goodDetail -> goodDetail
    java.util.List data -> data
    java.util.List brandData -> brandData
    java.util.List cateData -> cateData
    com.holding.smile.entity.JIndexJGoods indexData -> indexData
    java.util.List sortData -> sortData
    com.holding.smile.dto.ValidateDto validate -> validate
    java.lang.String atData -> atData
    java.util.List consigneeData -> consigneeData
    com.holding.smile.entity.Consignee consignee -> consignee
    com.holding.smile.entity.SUser userData -> userData
    java.util.List idcardsData -> idcardsData
    com.holding.smile.dto.OrderDto orderData -> orderData
    com.holding.smile.dto.ProductDto productData -> productData
    java.util.List orderListData -> orderListData
    com.holding.smile.entity.CartItem cartData -> cartData
    java.util.List cartListData -> cartListData
    java.lang.Integer getCode() -> getCode
    void setCode(java.lang.Integer) -> setCode
    com.holding.smile.entity.JGoods getGoodDetail() -> getGoodDetail
    void setGoodDetail(com.holding.smile.entity.JGoods) -> setGoodDetail
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
    java.util.List getBrandData() -> getBrandData
    void setBrandData(java.util.List) -> setBrandData
    java.util.List getCateData() -> getCateData
    void setCateData(java.util.List) -> setCateData
    com.holding.smile.entity.JIndexJGoods getIndexData() -> getIndexData
    void setIndexData(com.holding.smile.entity.JIndexJGoods) -> setIndexData
    java.util.List getSortData() -> getSortData
    void setSortData(java.util.List) -> setSortData
    com.holding.smile.dto.ValidateDto getValidate() -> getValidate
    void setValidate(com.holding.smile.dto.ValidateDto) -> setValidate
    java.lang.String getAtData() -> getAtData
    void setAtData(java.lang.String) -> setAtData
    java.util.List getConsigneeData() -> getConsigneeData
    void setConsigneeData(java.util.List) -> setConsigneeData
    com.holding.smile.entity.SUser getUserData() -> getUserData
    void setUserData(com.holding.smile.entity.SUser) -> setUserData
    com.holding.smile.entity.Consignee getConsignee() -> getConsignee
    void setConsignee(com.holding.smile.entity.Consignee) -> setConsignee
    java.util.List getIdcardsData() -> getIdcardsData
    void setIdcardsData(java.util.List) -> setIdcardsData
    com.holding.smile.dto.OrderDto getOrderData() -> getOrderData
    void setOrderData(com.holding.smile.dto.OrderDto) -> setOrderData
    com.holding.smile.dto.ProductDto getProductData() -> getProductData
    void setProductData(com.holding.smile.dto.ProductDto) -> setProductData
    java.util.List getOrderListData() -> getOrderListData
    void setOrderListData(java.util.List) -> setOrderListData
    com.holding.smile.entity.CartItem getCartData() -> getCartData
    void setCartData(com.holding.smile.entity.CartItem) -> setCartData
    java.util.List getCartListData() -> getCartListData
    void setCartListData(java.util.List) -> setCartListData
com.holding.smile.dto.ValidateDto -> com.holding.smile.dto.ValidateDto:
    java.lang.String option -> option
    java.lang.String message -> message
    java.lang.String getOption() -> getOption
    void setOption(java.lang.String) -> setOption
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
com.holding.smile.dto.VoucherDto -> com.holding.smile.dto.VoucherDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String desc -> desc
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
com.holding.smile.entity.CartItem -> com.holding.smile.entity.CartItem:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.Short qty -> qty
    com.holding.smile.dto.ProductDto product -> product
    java.math.BigDecimal total -> total
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Short getQty() -> getQty
    void setQty(java.lang.Short) -> setQty
    com.holding.smile.dto.ProductDto getProduct() -> getProduct
    void setProduct(com.holding.smile.dto.ProductDto) -> setProduct
    java.math.BigDecimal getTotal() -> getTotal
    void setTotal(java.math.BigDecimal) -> setTotal
com.holding.smile.entity.Category -> com.holding.smile.entity.Category:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
com.holding.smile.entity.City -> com.holding.smile.entity.City:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.Integer sort -> sort
    java.lang.Integer proid -> proid
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Integer getSort() -> getSort
    void setSort(java.lang.Integer) -> setSort
    java.lang.Integer getProid() -> getProid
    void setProid(java.lang.Integer) -> setProid
    java.lang.String toString() -> toString
com.holding.smile.entity.Consignee -> com.holding.smile.entity.Consignee:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String address -> address
    java.lang.String zipcode -> zipcode
    java.lang.String phone -> phone
    com.holding.smile.entity.UserDto user -> user
    com.holding.smile.entity.Idcard identitycard -> identitycard
    boolean isDel -> isDel
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
    void setDel(boolean) -> setDel
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getZipcode() -> getZipcode
    void setZipcode(java.lang.String) -> setZipcode
    com.holding.smile.entity.UserDto getUser() -> getUser
    void setUser(com.holding.smile.entity.UserDto) -> setUser
    com.holding.smile.entity.Idcard getIdentitycard() -> getIdentitycard
    void setIdentitycard(com.holding.smile.entity.Idcard) -> setIdentitycard
    boolean getIsDel() -> getIsDel
    void setIsDel(boolean) -> setIsDel
com.holding.smile.entity.District -> com.holding.smile.entity.District:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.Integer sort -> sort
    java.lang.Integer cityid -> cityid
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Integer getSort() -> getSort
    void setSort(java.lang.Integer) -> setSort
    java.lang.Integer getCityid() -> getCityid
    void setCityid(java.lang.Integer) -> setCityid
    java.lang.String toString() -> toString
com.holding.smile.entity.Idcard -> com.holding.smile.entity.Idcard:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.String number -> number
    java.lang.String url -> url
    java.lang.Integer userId -> userId
    java.lang.String gmtCreate -> gmtCreate
    java.lang.String gmtModify -> gmtModify
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNumber() -> getNumber
    void setNumber(java.lang.String) -> setNumber
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.Integer getUserId() -> getUserId
    void setUserId(java.lang.Integer) -> setUserId
    java.lang.String getGmtCreate() -> getGmtCreate
    void setGmtCreate(java.lang.String) -> setGmtCreate
    java.lang.String getGmtModify() -> getGmtModify
    void setGmtModify(java.lang.String) -> setGmtModify
com.holding.smile.entity.JActivity -> com.holding.smile.entity.JActivity:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String p -> p
    java.lang.String url -> url
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getP() -> getP
    void setP(java.lang.String) -> setP
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
com.holding.smile.entity.JColor -> com.holding.smile.entity.JColor:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String c -> c
    java.lang.String ci -> ci
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getC() -> getC
    void setC(java.lang.String) -> setC
    java.lang.String getCi() -> getCi
    void setCi(java.lang.String) -> setCi
com.holding.smile.entity.JGoods -> com.holding.smile.entity.JGoods:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String n -> n
    java.lang.String d -> d
    java.lang.String bs -> bs
    java.lang.String[] p -> p
    java.lang.String t -> t
    java.math.BigDecimal lp -> lp
    java.math.BigDecimal pp -> pp
    java.math.BigDecimal sp -> sp
    java.lang.Integer sf -> sf
    java.lang.Integer st -> st
    java.lang.Integer sd -> sd
    java.lang.Integer ss -> ss
    java.lang.Integer bid -> bid
    java.lang.String be -> be
    java.lang.Integer cid -> cid
    java.lang.String ce -> ce
    java.lang.String c -> c
    java.lang.String ci -> ci
    java.lang.Integer sn -> sn
    java.lang.Integer zsn -> zsn
    java.lang.Integer seq -> seq
    java.lang.String _version_ -> _version_
    java.lang.String[] bp -> bp
    java.lang.String[] getBp() -> getBp
    void setBp(java.lang.String[]) -> setBp
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getN() -> getN
    void setN(java.lang.String) -> setN
    java.lang.String getBs() -> getBs
    void setBs(java.lang.String) -> setBs
    java.lang.String[] getP() -> getP
    void setP(java.lang.String[]) -> setP
    java.lang.String getT() -> getT
    void setT(java.lang.String) -> setT
    java.math.BigDecimal getLp() -> getLp
    void setLp(java.math.BigDecimal) -> setLp
    java.math.BigDecimal getPp() -> getPp
    void setPp(java.math.BigDecimal) -> setPp
    java.math.BigDecimal getSp() -> getSp
    void setSp(java.math.BigDecimal) -> setSp
    java.lang.Integer getSf() -> getSf
    void setSf(java.lang.Integer) -> setSf
    java.lang.Integer getSt() -> getSt
    void setSt(java.lang.Integer) -> setSt
    java.lang.String getD() -> getD
    void setD(java.lang.String) -> setD
    java.lang.Integer getBid() -> getBid
    void setBid(java.lang.Integer) -> setBid
    java.lang.String getBe() -> getBe
    void setBe(java.lang.String) -> setBe
    java.lang.Integer getCid() -> getCid
    void setCid(java.lang.Integer) -> setCid
    java.lang.String getCe() -> getCe
    void setCe(java.lang.String) -> setCe
    java.lang.String getC() -> getC
    void setC(java.lang.String) -> setC
    java.lang.String getCi() -> getCi
    void setCi(java.lang.String) -> setCi
    java.lang.Integer getSd() -> getSd
    void setSd(java.lang.Integer) -> setSd
    java.lang.Integer getSs() -> getSs
    void setSs(java.lang.Integer) -> setSs
    java.lang.Integer getSn() -> getSn
    void setSn(java.lang.Integer) -> setSn
    java.lang.Integer getZsn() -> getZsn
    void setZsn(java.lang.Integer) -> setZsn
    java.lang.Integer getSeq() -> getSeq
    void setSeq(java.lang.Integer) -> setSeq
    java.lang.String get_version_() -> get_version_
    void set_version_(java.lang.String) -> set_version_
com.holding.smile.entity.JIndexJGoods -> com.holding.smile.entity.JIndexJGoods:
    long serialVersionUID -> serialVersionUID
    java.util.List activity -> activity
    java.util.List brand -> brand
    java.util.List getActivity() -> getActivity
    void setActivity(java.util.List) -> setActivity
    java.util.List getBrand() -> getBrand
    void setBrand(java.util.List) -> setBrand
com.holding.smile.entity.JSort -> com.holding.smile.entity.JSort:
    long serialVersionUID -> serialVersionUID
    java.lang.String n -> n
    java.lang.String u -> u
    java.lang.String getN() -> getN
    void setN(java.lang.String) -> setN
    java.lang.String getU() -> getU
    void setU(java.lang.String) -> setU
com.holding.smile.entity.Province -> com.holding.smile.entity.Province:
    long serialVersionUID -> serialVersionUID
    int id -> id
    java.lang.String name -> name
    java.lang.Integer sort -> sort
    java.lang.Integer conturyid -> conturyid
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Integer getSort() -> getSort
    void setSort(java.lang.Integer) -> setSort
    java.lang.Integer getConturyid() -> getConturyid
    void setConturyid(java.lang.Integer) -> setConturyid
    java.lang.String toString() -> toString
com.holding.smile.entity.SUser -> com.holding.smile.entity.SUser:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.util.Date gmtCreate -> gmtCreate
    java.util.Date gmtModify -> gmtModify
    java.util.Date gmtRegister -> gmtRegister
    java.lang.String identitycard -> identitycard
    java.lang.String mobilephone -> mobilephone
    java.lang.String password -> password
    java.lang.String qq -> qq
    java.lang.String username -> username
    java.lang.String email -> email
    java.lang.String weibo -> weibo
    java.lang.String weixin -> weixin
    java.lang.String token -> token
    java.lang.String url -> url
    java.lang.String flag -> flag
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.util.Date getGmtCreate() -> getGmtCreate
    void setGmtCreate(java.util.Date) -> setGmtCreate
    java.util.Date getGmtModify() -> getGmtModify
    void setGmtModify(java.util.Date) -> setGmtModify
    java.util.Date getGmtRegister() -> getGmtRegister
    void setGmtRegister(java.util.Date) -> setGmtRegister
    java.lang.String getIdentitycard() -> getIdentitycard
    void setIdentitycard(java.lang.String) -> setIdentitycard
    java.lang.String getMobilephone() -> getMobilephone
    void setMobilephone(java.lang.String) -> setMobilephone
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getQq() -> getQq
    void setQq(java.lang.String) -> setQq
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getWeibo() -> getWeibo
    void setWeibo(java.lang.String) -> setWeibo
    java.lang.String getWeixin() -> getWeixin
    void setWeixin(java.lang.String) -> setWeixin
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getFlag() -> getFlag
    void setFlag(java.lang.String) -> setFlag
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
com.holding.smile.entity.SolrGood -> com.holding.smile.entity.SolrGood:
    java.lang.Integer seqorder -> seqorder
    java.lang.Integer seqorder_time -> seqorder_time
    java.lang.Integer id -> id
    java.lang.String name -> name
    java.lang.Integer type -> type
    java.lang.String type_en -> type_en
    java.lang.String type_cn -> type_cn
    java.lang.Double purchasing_price -> purchasing_price
    java.lang.Double local_price -> local_price
    java.lang.Integer brand -> brand
    java.lang.String brand_en -> brand_en
    java.lang.String brand_cn -> brand_cn
    java.lang.String description -> description
    java.lang.String post_time -> post_time
    java.lang.String img_urls -> img_urls
    java.lang.String img_urls_s -> img_urls_s
    java.lang.String img_urls_m -> img_urls_m
    java.lang.String sn -> sn
    java.lang.Double money -> money
    java.lang.Float _version_ -> _version_
    java.lang.Integer getSeqorder() -> getSeqorder
    void setSeqorder(java.lang.Integer) -> setSeqorder
    java.lang.Integer getSeqorder_time() -> getSeqorder_time
    void setSeqorder_time(java.lang.Integer) -> setSeqorder_time
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.Integer getType() -> getType
    void setType(java.lang.Integer) -> setType
    java.lang.String getType_en() -> getType_en
    void setType_en(java.lang.String) -> setType_en
    java.lang.String getType_cn() -> getType_cn
    void setType_cn(java.lang.String) -> setType_cn
    java.lang.Double getPurchasing_price() -> getPurchasing_price
    void setPurchasing_price(java.lang.Double) -> setPurchasing_price
    java.lang.Double getLocal_price() -> getLocal_price
    void setLocal_price(java.lang.Double) -> setLocal_price
    java.lang.Integer getBrand() -> getBrand
    void setBrand(java.lang.Integer) -> setBrand
    java.lang.String getBrand_en() -> getBrand_en
    void setBrand_en(java.lang.String) -> setBrand_en
    java.lang.String getBrand_cn() -> getBrand_cn
    void setBrand_cn(java.lang.String) -> setBrand_cn
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getPost_time() -> getPost_time
    void setPost_time(java.lang.String) -> setPost_time
    java.lang.String getImg_urls() -> getImg_urls
    void setImg_urls(java.lang.String) -> setImg_urls
    java.lang.String getSn() -> getSn
    void setSn(java.lang.String) -> setSn
    java.lang.Float get_version_() -> get_version_
    void set_version_(java.lang.Float) -> set_version_
    java.lang.Double getMoney() -> getMoney
    void setMoney(java.lang.Double) -> setMoney
    java.lang.String getImg_urls_s() -> getImg_urls_s
    void setImg_urls_s(java.lang.String) -> setImg_urls_s
    java.lang.String getImg_urls_m() -> getImg_urls_m
    void setImg_urls_m(java.lang.String) -> setImg_urls_m
com.holding.smile.entity.SortType -> com.holding.smile.entity.SortType:
    long serialVersionUID -> serialVersionUID
    java.lang.String n -> n
    java.lang.String v -> v
    java.lang.String getN() -> getN
    void setN(java.lang.String) -> setN
    java.lang.String getV() -> getV
    void setV(java.lang.String) -> setV
com.holding.smile.entity.UserDto -> com.holding.smile.entity.UserDto:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.String username -> username
    java.lang.String token -> token
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
com.holding.smile.myview.MyGridView -> com.holding.smile.myview.MyGridView:
    void onMeasure(int,int) -> onMeasure
com.holding.smile.myview.MyLinearLayout -> com.holding.smile.myview.MyLinearLayout:
    int mLeft -> a
    int mRight -> b
    int mTop -> c
    int mBottom -> d
    java.util.Hashtable map -> e
    com.holding.smile.cache.ImageLoader mImageLoader -> f
    android.content.Context context -> g
    void setSortTypeList(android.content.Context,java.util.List) -> a
    void setJSortList(android.content.Context,java.util.List) -> b
    void setColorList(android.content.Context,java.util.List) -> c
    void setBackgroundBtn(int) -> setBackgroundBtn
    void onMeasure(int,int) -> onMeasure
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getPosition(int,int) -> a
com.holding.smile.myview.MyLinearLayout$Position -> com.holding.smile.myview.a:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    com.holding.smile.myview.MyLinearLayout this$0 -> e
com.holding.smile.myview.MyListView -> com.holding.smile.myview.MyListView:
    void onMeasure(int,int) -> onMeasure
com.holding.smile.myview.MyViewPager -> com.holding.smile.myview.MyViewPager:
    int cWidth -> a
    void onMeasure(int,int) -> onMeasure
com.holding.smile.myview.PullToRefreshView -> com.holding.smile.myview.PullToRefreshView:
    boolean refreshFlag -> a
    boolean moreFlag -> b
    int mLastMotionY -> c
    int mLastMotionX -> d
    boolean mLock -> e
    android.view.View mHeaderView -> f
    android.view.View mFooterView -> g
    android.widget.AdapterView mAdapterView -> h
    android.widget.ScrollView mScrollView -> i
    int mHeaderViewHeight -> j
    int mFooterViewHeight -> k
    android.widget.ImageView mHeaderImageView -> l
    android.widget.ImageView mFooterImageView -> m
    android.widget.TextView mHeaderTextView -> n
    android.widget.TextView mFooterTextView -> o
    android.widget.TextView mHeaderUpdateTextView -> p
    android.widget.ProgressBar mHeaderProgressBar -> q
    android.widget.ProgressBar mFooterProgressBar -> r
    android.view.LayoutInflater mInflater -> s
    int mHeaderState -> t
    int mFooterState -> u
    int mPullState -> v
    android.view.animation.RotateAnimation mFlipAnimation -> w
    android.view.animation.RotateAnimation mReverseFlipAnimation -> x
    com.holding.smile.myview.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> y
    com.holding.smile.myview.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> z
    void setRefreshFlag(boolean) -> setRefreshFlag
    void setMoreFlag(boolean) -> setMoreFlag
    void init() -> c
    void addHeaderView() -> d
    void addFooterView() -> e
    void onFinishInflate() -> onFinishInflate
    void initContentAdapterView() -> f
    void measureView(android.view.View) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isRefreshViewScroll(int) -> a
    void headerPrepareToRefresh(int) -> b
    void footerPrepareToRefresh(int) -> c
    int changingHeaderViewTopMargin(int) -> d
    void headerRefreshing() -> g
    void footerRefreshing() -> h
    void setHeaderTopMargin(int) -> setHeaderTopMargin
    void onHeaderRefreshComplete() -> a
    void onFooterRefreshComplete() -> b
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    int getHeaderTopMargin() -> getHeaderTopMargin
    void setOnHeaderRefreshListener(com.holding.smile.myview.PullToRefreshView$OnHeaderRefreshListener) -> setOnHeaderRefreshListener
    void setOnFooterRefreshListener(com.holding.smile.myview.PullToRefreshView$OnFooterRefreshListener) -> setOnFooterRefreshListener
    void access$0(com.holding.smile.myview.PullToRefreshView) -> a
com.holding.smile.myview.PullToRefreshView$1 -> com.holding.smile.myview.b:
    com.holding.smile.myview.PullToRefreshView this$0 -> a
    void onClick(android.view.View) -> onClick
com.holding.smile.myview.PullToRefreshView$OnFooterRefreshListener -> com.holding.smile.myview.c:
    void onFooterRefresh(com.holding.smile.myview.PullToRefreshView) -> onFooterRefresh
com.holding.smile.myview.PullToRefreshView$OnHeaderRefreshListener -> com.holding.smile.myview.d:
    void onHeaderRefresh(com.holding.smile.myview.PullToRefreshView) -> onHeaderRefresh
com.holding.smile.protocol.PBase -> com.holding.smile.protocol.PBase:
    java.lang.Integer code -> code
    java.lang.Integer getCode() -> getCode
    void setCode(java.lang.Integer) -> setCode
com.holding.smile.protocol.PBrandJGoods -> com.holding.smile.protocol.PBrandJGoods:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PCartItem -> com.holding.smile.protocol.PCartItem:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PCartItemDetail -> com.holding.smile.protocol.PCartItemDetail:
    com.holding.smile.entity.CartItem data -> data
    com.holding.smile.entity.CartItem getData() -> getData
    void setData(com.holding.smile.entity.CartItem) -> setData
com.holding.smile.protocol.PCategory -> com.holding.smile.protocol.PCategory:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PConsignee -> com.holding.smile.protocol.PConsignee:
    com.holding.smile.entity.Consignee data -> data
    com.holding.smile.entity.Consignee getData() -> getData
    void setData(com.holding.smile.entity.Consignee) -> setData
com.holding.smile.protocol.PConsignees -> com.holding.smile.protocol.PConsignees:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PGoods -> com.holding.smile.protocol.PGoods:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PGoodsDetail -> com.holding.smile.protocol.PGoodsDetail:
    com.holding.smile.entity.JGoods data -> data
    com.holding.smile.entity.JGoods getData() -> getData
    void setData(com.holding.smile.entity.JGoods) -> setData
com.holding.smile.protocol.PIdcards -> com.holding.smile.protocol.PIdcards:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PIndexJGoods -> com.holding.smile.protocol.PIndexJGoods:
    com.holding.smile.entity.JIndexJGoods data -> data
    com.holding.smile.entity.JIndexJGoods getData() -> getData
    void setData(com.holding.smile.entity.JIndexJGoods) -> setData
com.holding.smile.protocol.POrder -> com.holding.smile.protocol.POrder:
    com.holding.smile.dto.OrderDto data -> data
    com.holding.smile.dto.OrderDto getData() -> getData
    void setData(com.holding.smile.dto.OrderDto) -> setData
com.holding.smile.protocol.POrderList -> com.holding.smile.protocol.POrderList:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PProduct -> com.holding.smile.protocol.PProduct:
    com.holding.smile.dto.ProductDto data -> data
    com.holding.smile.dto.ProductDto getData() -> getData
    void setData(com.holding.smile.dto.ProductDto) -> setData
com.holding.smile.protocol.PSort -> com.holding.smile.protocol.PSort:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PSortTypes -> com.holding.smile.protocol.PSortTypes:
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.holding.smile.protocol.PUser -> com.holding.smile.protocol.PUser:
    com.holding.smile.entity.SUser data -> data
    com.holding.smile.entity.SUser getData() -> getData
    void setData(com.holding.smile.entity.SUser) -> setData
com.holding.smile.service.DataService -> com.holding.smile.c.a:
    boolean getDataFromNet -> a
    java.lang.String prefix_url -> b
    java.lang.String jGoods_index_url -> c
    java.lang.String jGoods_recommend_url -> d
    java.lang.String jGoods_cate_url -> e
    java.lang.String jGoods_brand_url -> f
    java.lang.String jGoods_brand_more_url -> g
    java.lang.String jGoods_sorttype_url -> h
    java.lang.String jGoods_detail_url -> i
    java.lang.String jGoods_sort_url -> j
    java.lang.String jGoods_search_url -> k
    java.lang.String jGoods_search_more_url -> l
    java.lang.String user_info -> m
    java.lang.String idcard_list -> n
    java.lang.String order_list_url -> o
    java.lang.String cart_list_url -> p
    java.lang.String order_status_url -> q
    com.holding.smile.dto.RtnValueDto getRecommendBrandsListInit(java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto getBrandJGoodsListInit(java.lang.Integer,java.lang.Integer,java.lang.String) -> a
    java.util.List getSortTypeList() -> a
    com.holding.smile.dto.RtnValueDto getBrandJGoodsListMore(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto getJGoodsSearchListInit(java.lang.String,java.lang.String,java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto getJGoodsSearchListRefresh(java.lang.String,com.holding.smile.entity.JGoods,java.lang.String,java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto getJGoodsSearchListMore(java.lang.String,com.holding.smile.entity.JGoods,java.lang.String,java.lang.Integer) -> b
    com.holding.smile.dto.RtnValueDto getIndexJGoods(java.lang.Integer) -> b
    com.holding.smile.dto.RtnValueDto getRecommendBrands(java.lang.Integer) -> c
    com.holding.smile.dto.RtnValueDto getBrandGoods(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer) -> b
    com.holding.smile.dto.RtnValueDto searchGoods(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto getCategorys() -> b
    com.holding.smile.dto.RtnValueDto getSortList() -> c
    com.holding.smile.dto.RtnValueDto getJGoodsSortList(java.lang.String) -> a
    com.holding.smile.dto.RtnValueDto getGoodsDetail(java.lang.String) -> b
    com.holding.smile.dto.RtnValueDto getUserInfo() -> d
    com.holding.smile.dto.RtnValueDto getIdcardsList() -> e
    com.holding.smile.dto.RtnValueDto getOrdersList(java.lang.String) -> c
    com.holding.smile.dto.RtnValueDto getOrderStatus(java.lang.String) -> d
    com.holding.smile.dto.RtnValueDto getCartItemList() -> f
com.holding.smile.service.LoginService -> com.holding.smile.c.b:
    android.content.Context context -> a
    java.lang.String login_url -> b
    java.lang.String auto_login_url -> c
    int SUCCESS_CODE -> d
    com.holding.smile.dto.RtnValueDto login(com.holding.smile.entity.SUser) -> a
    com.holding.smile.dto.RtnValueDto autoLogin(com.holding.smile.entity.SUser) -> b
    void setLoginUser(com.holding.smile.entity.SUser) -> c
    java.lang.String https_get(java.lang.String,java.util.HashMap) -> a
com.holding.smile.service.SQLiteService -> com.holding.smile.c.c:
    com.holding.smile.tools.DBHelper helper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    void closeDB() -> a
    boolean addSearch(java.lang.String) -> a
    java.util.List getSearchWords(java.lang.String) -> b
    com.holding.smile.entity.SUser getScurrentUser() -> b
    com.holding.smile.entity.SUser addUser() -> c
    void updateUser() -> d
    void setCurrentUserEmpty(int) -> a
    com.holding.smile.entity.SUser getUserById(int) -> b
com.holding.smile.service.SubmitService -> com.holding.smile.c.d:
    java.lang.String prefix_url -> a
    java.lang.String password_reset -> b
    java.lang.String set_suer_info -> c
    java.lang.String idcard_save -> d
    java.lang.String idcard_delete -> e
    java.lang.String register_url -> f
    java.lang.String order_inform_url -> g
    java.lang.String order_updateQty_url -> h
    java.lang.String order_confirm_url -> i
    java.lang.String cart_add_url -> j
    java.lang.String cart_setQty_url -> k
    java.lang.String cart_remove_url -> l
    java.lang.String order_close_url -> m
    com.holding.smile.dto.RtnValueDto passwordReset(java.lang.String,java.lang.String) -> a
    com.holding.smile.dto.RtnValueDto setUserInfo(java.lang.String,java.lang.String) -> b
    com.holding.smile.dto.RtnValueDto idcardSave(com.holding.smile.entity.Idcard,java.lang.String) -> a
    com.holding.smile.dto.RtnValueDto idcardRemove(java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto register(com.holding.smile.entity.SUser) -> a
    com.holding.smile.dto.RtnValueDto getOrderInform(java.lang.String,java.util.List,java.lang.Integer) -> a
    com.holding.smile.dto.RtnValueDto updateOrderQty(java.lang.Integer,short) -> a
    com.holding.smile.dto.RtnValueDto confirmOrder(java.lang.String,java.util.List,java.lang.Integer) -> b
    com.holding.smile.dto.RtnValueDto addCart(java.lang.Integer,short) -> b
    com.holding.smile.dto.RtnValueDto removeCart(java.lang.Integer) -> b
    com.holding.smile.dto.RtnValueDto updateCartQty(java.lang.Integer,short) -> c
    com.holding.smile.dto.RtnValueDto closeOrder(java.lang.Integer) -> c
com.holding.smile.tools.BitmapUtils -> com.holding.smile.tools.a:
    int width -> a
    int height -> b
    android.graphics.Bitmap decodeFile(java.lang.String,int,int) -> a
    int calcScaleRatio(android.graphics.BitmapFactory$Options,int,int) -> a
    int readPicDegree(java.lang.String) -> a
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int) -> a
    java.io.ByteArrayOutputStream compressBitmap(android.graphics.Bitmap,int) -> b
    java.io.ByteArrayOutputStream getCompressBitmap(java.lang.String,int,int,int) -> a
com.holding.smile.tools.ClickUtil -> com.holding.smile.tools.b:
    java.lang.String getTextByStatus(java.lang.String) -> a
    int getBackgroundColorByStatus(java.lang.String) -> b
com.holding.smile.tools.CommonLog -> com.holding.smile.tools.c:
    java.lang.String tag -> c
    int logLevel -> a
    boolean isDebug -> b
    void setTag(java.lang.String) -> a
    java.lang.String getFunctionName() -> a
    void error(java.lang.Object) -> a
    void e(java.lang.Object) -> b
    void debug(java.lang.Object) -> c
    void d(java.lang.Object) -> d
com.holding.smile.tools.CommonUtil -> com.holding.smile.tools.d:
    com.holding.smile.tools.CommonLog log -> a
    boolean hasSDCard() -> a
    java.lang.String getRootFilePath() -> b
com.holding.smile.tools.Constants -> com.holding.smile.tools.e:
com.holding.smile.tools.Constants$OrderStateCode -> com.holding.smile.tools.f:
    com.holding.smile.tools.Constants$OrderStateCode FOR_PAYMENT -> a
    com.holding.smile.tools.Constants$OrderStateCode HAVE_BEEN_PAID -> b
    com.holding.smile.tools.Constants$OrderStateCode THE_LACK_OF_IDENTITY_CARD -> c
    com.holding.smile.tools.Constants$OrderStateCode HAS_ID -> d
    com.holding.smile.tools.Constants$OrderStateCode WAITING_FOR_DELIVERY -> e
    com.holding.smile.tools.Constants$OrderStateCode SHIPPED_ABROAD_CLEARANCE -> f
    com.holding.smile.tools.Constants$OrderStateCode FOREIGN_CUSTOMS_CLEARANCE -> g
    com.holding.smile.tools.Constants$OrderStateCode DOMESTIC_CUSTOMS_CLEARANCE -> h
    com.holding.smile.tools.Constants$OrderStateCode DOMESTIC_LOGISTICS -> i
    com.holding.smile.tools.Constants$OrderStateCode HAVE_BEEN_CLOSED -> j
    com.holding.smile.tools.Constants$OrderStateCode HAS_BEEN_COMPLETED -> k
    com.holding.smile.tools.Constants$OrderStateCode DELETED -> l
    java.lang.String code -> m
    com.holding.smile.tools.Constants$OrderStateCode[] ENUM$VALUES -> n
    com.holding.smile.tools.Constants$OrderStateCode[] values() -> values
    com.holding.smile.tools.Constants$OrderStateCode valueOf(java.lang.String) -> valueOf
com.holding.smile.tools.DBHelper -> com.holding.smile.tools.g:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void createTable(android.database.sqlite.SQLiteDatabase) -> a
com.holding.smile.tools.DateUtil -> com.holding.smile.tools.h:
    java.lang.String dateToStr(java.util.Date) -> a
com.holding.smile.tools.FileHelper -> com.holding.smile.tools.i:
    com.holding.smile.tools.CommonLog log -> a
    boolean createDirectory(java.lang.String) -> a
    boolean deleteDirectory(java.lang.String) -> b
com.holding.smile.tools.FileManager -> com.holding.smile.tools.j:
    java.lang.String getSaveFilePath() -> a
com.holding.smile.tools.FileUtils -> com.holding.smile.tools.k:
    java.lang.String uploadIdcardPhoto(java.lang.String,java.util.List,java.lang.String) -> a
com.holding.smile.tools.JSONUtil -> com.holding.smile.tools.l:
    org.codehaus.jackson.map.ObjectMapper objectMapper -> a
    org.codehaus.jackson.JsonGenerator jsonGenerator -> b
    java.lang.Object getJson2Entity(java.lang.String,java.lang.Class) -> a
com.holding.smile.tools.LogFactory -> com.holding.smile.tools.m:
    com.holding.smile.tools.CommonLog log -> a
    com.holding.smile.tools.CommonLog createLog() -> a
com.holding.smile.tools.MD5 -> com.holding.smile.tools.n:
    java.lang.String getMD5(java.lang.String) -> a
    java.lang.String getHashString(java.security.MessageDigest) -> a
com.holding.smile.tools.NullHostNameVerifier -> com.holding.smile.tools.o:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.holding.smile.tools.NullX509TrustManager -> com.holding.smile.tools.p:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.holding.smile.tools.ProvinceCityUtil -> com.holding.smile.tools.q:
    java.util.List conturyList -> a
    java.util.List provinceList -> b
    java.util.List cityList -> c
    java.util.List districtList -> d
    void init() -> f
    java.util.List getConturyList() -> a
    java.util.List getProvinceList() -> b
    java.util.List getCityList() -> c
    java.util.List getDistrictList() -> d
    void cleanData() -> e
com.holding.smile.tools.StrUtils -> com.holding.smile.tools.r:
    boolean isNotEmpty(java.lang.String) -> a
com.holding.smile.tools.TbUtil -> com.holding.smile.tools.TbUtil:
    android.webkit.WebView webView -> webView
    void init() -> init
    void init(java.lang.String) -> init
    void cleanup() -> cleanup
    void cshTb() -> cshTb
    android.webkit.WebView getWebView() -> getWebView
    void setWebView(android.webkit.WebView) -> setWebView
com.holding.smile.tools.URLUtil -> com.holding.smile.tools.s:
    java.lang.String getStringByGet(java.lang.String,java.util.HashMap) -> a
    java.lang.String getStringByPost(java.lang.String,java.util.HashMap) -> b
    java.lang.String getStringByPostMulti(java.lang.String,java.util.HashMap) -> c
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.codehaus.jackson.Base64Variant -> org.codehaus.jackson.Base64Variant:
    char PADDING_CHAR_NONE -> PADDING_CHAR_NONE
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
org.codehaus.jackson.Base64Variants -> org.codehaus.jackson.Base64Variants:
    java.lang.String STD_BASE64_ALPHABET -> STD_BASE64_ALPHABET
    org.codehaus.jackson.Base64Variant MIME -> MIME
    org.codehaus.jackson.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    org.codehaus.jackson.Base64Variant PEM -> PEM
    org.codehaus.jackson.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    org.codehaus.jackson.Base64Variant getDefaultVariant() -> getDefaultVariant
org.codehaus.jackson.FormatSchema -> org.codehaus.jackson.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
org.codehaus.jackson.JsonEncoding -> org.codehaus.jackson.JsonEncoding:
    org.codehaus.jackson.JsonEncoding UTF8 -> UTF8
    org.codehaus.jackson.JsonEncoding UTF16_BE -> UTF16_BE
    org.codehaus.jackson.JsonEncoding UTF16_LE -> UTF16_LE
    org.codehaus.jackson.JsonEncoding UTF32_BE -> UTF32_BE
    org.codehaus.jackson.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    org.codehaus.jackson.JsonEncoding[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonEncoding[] values() -> values
    org.codehaus.jackson.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
org.codehaus.jackson.JsonFactory -> org.codehaus.jackson.JsonFactory:
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.io.InputDecorator _inputDecorator -> _inputDecorator
    org.codehaus.jackson.io.OutputDecorator _outputDecorator -> _outputDecorator
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void enableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> enableParserFeature
    void disableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> disableParserFeature
    void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setParserFeature
    boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isParserFeatureEnabled
    org.codehaus.jackson.io.InputDecorator getInputDecorator() -> getInputDecorator
    org.codehaus.jackson.JsonFactory setInputDecorator(org.codehaus.jackson.io.InputDecorator) -> setInputDecorator
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableGeneratorFeature
    void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableGeneratorFeature
    void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setGeneratorFeature
    boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isGeneratorFeatureEnabled
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonFactory setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    org.codehaus.jackson.JsonFactory setOutputDecorator(org.codehaus.jackson.io.OutputDecorator) -> setOutputDecorator
    org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser createJsonParser(java.io.File) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[]) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext) -> _createJsonGenerator
    org.codehaus.jackson.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext) -> _createUTF8JsonGenerator
    java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext) -> _createWriter
    org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    org.codehaus.jackson.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
org.codehaus.jackson.JsonGenerationException -> org.codehaus.jackson.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonGenerator -> org.codehaus.jackson.JsonGenerator:
    org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void enableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableFeature
    void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> setPrettyPrinter
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
org.codehaus.jackson.JsonGenerator$Feature -> org.codehaus.jackson.JsonGenerator$Feature:
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    org.codehaus.jackson.JsonGenerator$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonGenerator$Feature[] values() -> values
    org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonLocation -> org.codehaus.jackson.JsonLocation:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.Object _sourceRef -> _sourceRef
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonNode -> org.codehaus.jackson.JsonNode:
    java.util.List NO_NODES -> NO_NODES
    java.util.List NO_STRINGS -> NO_STRINGS
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue() -> getBinaryValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    java.lang.String getValueAsText() -> getValueAsText
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    boolean has(java.lang.String) -> has
    boolean has(int) -> has
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String) -> findValues
    java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getElements() -> getElements
    java.util.Iterator getFieldNames() -> getFieldNames
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode getPath(java.lang.String) -> getPath
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode getPath(int) -> getPath
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonParser traverse() -> traverse
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonParseException -> org.codehaus.jackson.JsonParseException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonParser -> org.codehaus.jackson.JsonParser:
    int MIN_BYTE_I -> MIN_BYTE_I
    int MAX_BYTE_I -> MAX_BYTE_I
    int MIN_SHORT_I -> MIN_SHORT_I
    int MAX_SHORT_I -> MAX_SHORT_I
    int _features -> _features
    org.codehaus.jackson.JsonToken _currToken -> _currToken
    org.codehaus.jackson.JsonToken _lastClearedToken -> _lastClearedToken
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setFeature
    void enableFeature(org.codehaus.jackson.JsonParser$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonParser$Feature) -> disableFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(org.codehaus.jackson.type.TypeReference) -> readValuesAs
    org.codehaus.jackson.JsonNode readValueAsTree() -> readValueAsTree
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String) -> _constructError
org.codehaus.jackson.JsonParser$1 -> org.codehaus.jackson.JsonParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.JsonParser$Feature -> org.codehaus.jackson.JsonParser$Feature:
    org.codehaus.jackson.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    org.codehaus.jackson.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    org.codehaus.jackson.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    org.codehaus.jackson.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    org.codehaus.jackson.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.JsonParser$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$Feature[] values() -> values
    org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
org.codehaus.jackson.JsonParser$NumberType -> org.codehaus.jackson.JsonParser$NumberType:
    org.codehaus.jackson.JsonParser$NumberType INT -> INT
    org.codehaus.jackson.JsonParser$NumberType LONG -> LONG
    org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    org.codehaus.jackson.JsonParser$NumberType FLOAT -> FLOAT
    org.codehaus.jackson.JsonParser$NumberType DOUBLE -> DOUBLE
    org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    org.codehaus.jackson.JsonParser$NumberType[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$NumberType[] values() -> values
    org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.JsonProcessingException -> org.codehaus.jackson.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation mLocation -> mLocation
    org.codehaus.jackson.JsonLocation getLocation() -> getLocation
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.codehaus.jackson.JsonStreamContext -> org.codehaus.jackson.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
org.codehaus.jackson.JsonToken -> org.codehaus.jackson.JsonToken:
    org.codehaus.jackson.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    org.codehaus.jackson.JsonToken START_OBJECT -> START_OBJECT
    org.codehaus.jackson.JsonToken END_OBJECT -> END_OBJECT
    org.codehaus.jackson.JsonToken START_ARRAY -> START_ARRAY
    org.codehaus.jackson.JsonToken END_ARRAY -> END_ARRAY
    org.codehaus.jackson.JsonToken FIELD_NAME -> FIELD_NAME
    org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    org.codehaus.jackson.JsonToken VALUE_STRING -> VALUE_STRING
    org.codehaus.jackson.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    org.codehaus.jackson.JsonToken VALUE_TRUE -> VALUE_TRUE
    org.codehaus.jackson.JsonToken VALUE_FALSE -> VALUE_FALSE
    org.codehaus.jackson.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    org.codehaus.jackson.JsonToken[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonToken[] values() -> values
    org.codehaus.jackson.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
org.codehaus.jackson.ObjectCodec -> org.codehaus.jackson.ObjectCodec:
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
org.codehaus.jackson.PrettyPrinter -> org.codehaus.jackson.PrettyPrinter:
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
org.codehaus.jackson.SerializableString -> org.codehaus.jackson.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
org.codehaus.jackson.Version -> org.codehaus.jackson.Version:
    org.codehaus.jackson.Version UNKNOWN_VERSION -> UNKNOWN_VERSION
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _snapshotInfo -> _snapshotInfo
    org.codehaus.jackson.Version unknownVersion() -> unknownVersion
    boolean isUknownVersion() -> isUknownVersion
    boolean isSnapshot() -> isSnapshot
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.codehaus.jackson.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.Versioned -> org.codehaus.jackson.Versioned:
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.annotate.JacksonAnnotation -> org.codehaus.jackson.annotate.JacksonAnnotation:
org.codehaus.jackson.annotate.JsonAnyGetter -> org.codehaus.jackson.annotate.JsonAnyGetter:
org.codehaus.jackson.annotate.JsonAnySetter -> org.codehaus.jackson.annotate.JsonAnySetter:
org.codehaus.jackson.annotate.JsonAutoDetect -> org.codehaus.jackson.annotate.JsonAutoDetect:
    org.codehaus.jackson.annotate.JsonMethod[] value() -> value
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
org.codehaus.jackson.annotate.JsonAutoDetect$1 -> org.codehaus.jackson.annotate.JsonAutoDetect$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility -> $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility
org.codehaus.jackson.annotate.JsonAutoDetect$Visibility -> org.codehaus.jackson.annotate.JsonAutoDetect$Visibility:
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility ANY -> ANY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE -> NONE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] values() -> values
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    boolean isVisible(java.lang.reflect.Member) -> isVisible
org.codehaus.jackson.annotate.JsonBackReference -> org.codehaus.jackson.annotate.JsonBackReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonCreator -> org.codehaus.jackson.annotate.JsonCreator:
org.codehaus.jackson.annotate.JsonGetter -> org.codehaus.jackson.annotate.JsonGetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonIgnore -> org.codehaus.jackson.annotate.JsonIgnore:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonIgnoreProperties -> org.codehaus.jackson.annotate.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
org.codehaus.jackson.annotate.JsonIgnoreType -> org.codehaus.jackson.annotate.JsonIgnoreType:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonManagedReference -> org.codehaus.jackson.annotate.JsonManagedReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonMethod -> org.codehaus.jackson.annotate.JsonMethod:
    org.codehaus.jackson.annotate.JsonMethod GETTER -> GETTER
    org.codehaus.jackson.annotate.JsonMethod SETTER -> SETTER
    org.codehaus.jackson.annotate.JsonMethod CREATOR -> CREATOR
    org.codehaus.jackson.annotate.JsonMethod FIELD -> FIELD
    org.codehaus.jackson.annotate.JsonMethod IS_GETTER -> IS_GETTER
    org.codehaus.jackson.annotate.JsonMethod NONE -> NONE
    org.codehaus.jackson.annotate.JsonMethod ALL -> ALL
    org.codehaus.jackson.annotate.JsonMethod[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonMethod[] values() -> values
    org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String) -> valueOf
    boolean creatorEnabled() -> creatorEnabled
    boolean getterEnabled() -> getterEnabled
    boolean isGetterEnabled() -> isGetterEnabled
    boolean setterEnabled() -> setterEnabled
    boolean fieldEnabled() -> fieldEnabled
org.codehaus.jackson.annotate.JsonProperty -> org.codehaus.jackson.annotate.JsonProperty:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonPropertyOrder -> org.codehaus.jackson.annotate.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
org.codehaus.jackson.annotate.JsonRawValue -> org.codehaus.jackson.annotate.JsonRawValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonSetter -> org.codehaus.jackson.annotate.JsonSetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonSubTypes -> org.codehaus.jackson.annotate.JsonSubTypes:
    org.codehaus.jackson.annotate.JsonSubTypes$Type[] value() -> value
org.codehaus.jackson.annotate.JsonSubTypes$Type -> org.codehaus.jackson.annotate.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
org.codehaus.jackson.annotate.JsonTypeInfo -> org.codehaus.jackson.annotate.JsonTypeInfo:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id use() -> use
    org.codehaus.jackson.annotate.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
org.codehaus.jackson.annotate.JsonTypeInfo$As -> org.codehaus.jackson.annotate.JsonTypeInfo$As:
    org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY -> PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    org.codehaus.jackson.annotate.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.annotate.JsonTypeInfo$Id -> org.codehaus.jackson.annotate.JsonTypeInfo$Id:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE -> NONE
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS -> CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME -> NAME
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
org.codehaus.jackson.annotate.JsonTypeInfo$None -> org.codehaus.jackson.annotate.JsonTypeInfo$None:
org.codehaus.jackson.annotate.JsonTypeName -> org.codehaus.jackson.annotate.JsonTypeName:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonUnwrapped -> org.codehaus.jackson.annotate.JsonUnwrapped:
    boolean enabled() -> enabled
org.codehaus.jackson.annotate.JsonValue -> org.codehaus.jackson.annotate.JsonValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonWriteNullProperties -> org.codehaus.jackson.annotate.JsonWriteNullProperties:
    boolean value() -> value
org.codehaus.jackson.format.DataFormatDetector -> org.codehaus.jackson.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    org.codehaus.jackson.JsonFactory[] _detectors -> _detectors
    org.codehaus.jackson.format.MatchStrength _optimalMatch -> _optimalMatch
    org.codehaus.jackson.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    org.codehaus.jackson.format.DataFormatDetector withOptimalMatch(org.codehaus.jackson.format.MatchStrength) -> withOptimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMinimalMatch(org.codehaus.jackson.format.MatchStrength) -> withMinimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    org.codehaus.jackson.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher _findFormat(org.codehaus.jackson.format.InputAccessor$Std) -> _findFormat
org.codehaus.jackson.format.DataFormatMatcher -> org.codehaus.jackson.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedLength -> _bufferedLength
    org.codehaus.jackson.JsonFactory _match -> _match
    org.codehaus.jackson.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    org.codehaus.jackson.format.MatchStrength getMatchStrength() -> getMatchStrength
    org.codehaus.jackson.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    org.codehaus.jackson.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
org.codehaus.jackson.format.InputAccessor -> org.codehaus.jackson.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
org.codehaus.jackson.format.InputAccessor$Std -> org.codehaus.jackson.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedAmount -> _bufferedAmount
    int _ptr -> _ptr
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    org.codehaus.jackson.format.DataFormatMatcher createMatcher(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.format.MatchStrength) -> createMatcher
org.codehaus.jackson.format.MatchStrength -> org.codehaus.jackson.format.MatchStrength:
    org.codehaus.jackson.format.MatchStrength NO_MATCH -> NO_MATCH
    org.codehaus.jackson.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    org.codehaus.jackson.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    org.codehaus.jackson.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    org.codehaus.jackson.format.MatchStrength FULL_MATCH -> FULL_MATCH
    org.codehaus.jackson.format.MatchStrength[] $VALUES -> $VALUES
    org.codehaus.jackson.format.MatchStrength[] values() -> values
    org.codehaus.jackson.format.MatchStrength valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.impl.ByteSourceBootstrapper -> org.codehaus.jackson.impl.ByteSourceBootstrapper:
    byte UTF8_BOM_1 -> UTF8_BOM_1
    byte UTF8_BOM_2 -> UTF8_BOM_2
    byte UTF8_BOM_3 -> UTF8_BOM_3
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    boolean _bufferRecyclable -> _bufferRecyclable
    int _inputProcessed -> _inputProcessed
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    org.codehaus.jackson.JsonEncoding detectEncoding() -> detectEncoding
    java.io.Reader constructReader() -> constructReader
    org.codehaus.jackson.JsonParser constructParser(int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> constructParser
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.format.MatchStrength tryMatch(org.codehaus.jackson.format.InputAccessor,java.lang.String,org.codehaus.jackson.format.MatchStrength) -> tryMatch
    int skipSpace(org.codehaus.jackson.format.InputAccessor) -> skipSpace
    int skipSpace(org.codehaus.jackson.format.InputAccessor,byte) -> skipSpace
    boolean handleBOM(int) -> handleBOM
    boolean checkUTF32(int) -> checkUTF32
    boolean checkUTF16(int) -> checkUTF16
    void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    boolean ensureLoaded(int) -> ensureLoaded
org.codehaus.jackson.impl.ByteSourceBootstrapper$1 -> org.codehaus.jackson.impl.ByteSourceBootstrapper$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonEncoding -> $SwitchMap$org$codehaus$jackson$JsonEncoding
org.codehaus.jackson.impl.DefaultPrettyPrinter -> org.codehaus.jackson.impl.DefaultPrettyPrinter:
org.codehaus.jackson.impl.Indenter -> org.codehaus.jackson.impl.Indenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.impl.JsonGeneratorBase -> org.codehaus.jackson.impl.JsonGeneratorBase:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void writeStartArray() -> writeStartArray
    void _writeStartArray() -> _writeStartArray
    void writeEndArray() -> writeEndArray
    void _writeEndArray() -> _writeEndArray
    void writeStartObject() -> writeStartObject
    void _writeStartObject() -> _writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeEndObject() -> _writeEndObject
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.impl.JsonGeneratorBase$1 -> org.codehaus.jackson.impl.JsonGeneratorBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonNumericParserBase -> org.codehaus.jackson.impl.JsonNumericParserBase:
org.codehaus.jackson.impl.JsonParserBase -> org.codehaus.jackson.impl.JsonParserBase:
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    long MIN_INT_L -> MIN_INT_L
    long MAX_INT_L -> MAX_INT_L
    double MIN_LONG_D -> MIN_LONG_D
    double MAX_LONG_D -> MAX_LONG_D
    double MIN_INT_D -> MIN_INT_D
    double MAX_INT_D -> MAX_INT_D
    int INT_0 -> INT_0
    int INT_1 -> INT_1
    int INT_2 -> INT_2
    int INT_3 -> INT_3
    int INT_4 -> INT_4
    int INT_5 -> INT_5
    int INT_6 -> INT_6
    int INT_7 -> INT_7
    int INT_8 -> INT_8
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_DECIMAL_POINT -> INT_DECIMAL_POINT
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    org.codehaus.jackson.Version version() -> version
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.impl.JsonReadContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    org.codehaus.jackson.JsonToken reset(boolean,int,int,int) -> reset
    org.codehaus.jackson.JsonToken resetInt(boolean,int) -> resetInt
    org.codehaus.jackson.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    org.codehaus.jackson.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void _parseSlowFloatValue(int) -> _parseSlowFloatValue
    void _parseSlowIntValue(int,char[],int,int) -> _parseSlowIntValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
org.codehaus.jackson.impl.JsonParserMinimalBase -> org.codehaus.jackson.impl.JsonParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_ASTERISK -> INT_ASTERISK
    int INT_APOSTROPHE -> INT_APOSTROPHE
    int INT_b -> INT_b
    int INT_f -> INT_f
    int INT_n -> INT_n
    int INT_r -> INT_r
    int INT_t -> INT_t
    int INT_u -> INT_u
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    void _decodeBase64(java.lang.String,org.codehaus.jackson.util.ByteArrayBuilder,org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
org.codehaus.jackson.impl.JsonParserMinimalBase$1 -> org.codehaus.jackson.impl.JsonParserMinimalBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonReadContext -> org.codehaus.jackson.impl.JsonReadContext:
    org.codehaus.jackson.impl.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    org.codehaus.jackson.impl.JsonReadContext createRootContext(int,int) -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.impl.JsonReadContext getParent() -> getParent
    org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.JsonWriteContext -> org.codehaus.jackson.impl.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    org.codehaus.jackson.impl.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonWriteContext _child -> _child
    org.codehaus.jackson.impl.JsonWriteContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonWriteContext reset(int) -> reset
    org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    org.codehaus.jackson.impl.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.ReaderBasedParser -> org.codehaus.jackson.impl.ReaderBasedParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _symbols -> _symbols
    boolean _tokenIncomplete -> _tokenIncomplete
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    void close() -> close
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken parseNumberText2(boolean) -> parseNumberText2
    char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> _parseFieldName2
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    java.lang.String _parseUnusualFieldName2(int,int,int[]) -> _parseUnusualFieldName2
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.ReaderBasedParser$1 -> org.codehaus.jackson.impl.ReaderBasedParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.ReaderBasedParserBase -> org.codehaus.jackson.impl.ReaderBasedParserBase:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    boolean _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.StreamBasedParserBase -> org.codehaus.jackson.impl.StreamBasedParserBase:
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
org.codehaus.jackson.impl.Utf8Generator -> org.codehaus.jackson.impl.Utf8Generator:
    byte BYTE_u -> BYTE_u
    byte BYTE_0 -> BYTE_0
    byte BYTE_LBRACKET -> BYTE_LBRACKET
    byte BYTE_RBRACKET -> BYTE_RBRACKET
    byte BYTE_LCURLY -> BYTE_LCURLY
    byte BYTE_RCURLY -> BYTE_RCURLY
    byte BYTE_BACKSLASH -> BYTE_BACKSLASH
    byte BYTE_SPACE -> BYTE_SPACE
    byte BYTE_COMMA -> BYTE_COMMA
    byte BYTE_COLON -> BYTE_COLON
    byte BYTE_QUOTE -> BYTE_QUOTE
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int MAX_BYTES_TO_BUFFER -> MAX_BYTES_TO_BUFFER
    byte[] HEX_CHARS -> HEX_CHARS
    byte[] NULL_BYTES -> NULL_BYTES
    byte[] TRUE_BYTES -> TRUE_BYTES
    byte[] FALSE_BYTES -> FALSE_BYTES
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.OutputStream _outputStream -> _outputStream
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeLongString(char[],int,int) -> _writeLongString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> _writeBytes
    void _writeBytes(byte[],int,int) -> _writeBytes
    void _writeStringSegments(java.lang.String) -> _writeStringSegments
    void _writeStringSegments(char[],int,int) -> _writeStringSegments
    void _writeStringSegment(char[],int,int) -> _writeStringSegment
    void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    int _writeCustomEscape(byte[],int,org.codehaus.jackson.SerializableString,int) -> _writeCustomEscape
    int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    void _writeUTF8Segments(byte[],int,int) -> _writeUTF8Segments
    void _writeUTF8Segment(byte[],int,int) -> _writeUTF8Segment
    void _writeUTF8Segment2(byte[],int,int) -> _writeUTF8Segment2
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _writeNull() -> _writeNull
    int _writeGenericEscape(int,int) -> _writeGenericEscape
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.impl.Utf8StreamParser -> org.codehaus.jackson.impl.Utf8StreamParser:
    byte BYTE_LF -> BYTE_LF
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesLatin1 -> sInputCodesLatin1
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    void close() -> close
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    void _isNextTokenNameYes() -> _isNextTokenNameYes
    void _isNextTokenNameNo(int) -> _isNextTokenNameNo
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken _parserNumber2(char[],int,boolean,int) -> _parserNumber2
    int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _parseFloatText(char[],int,int,boolean,int) -> _parseFloatText
    org.codehaus.jackson.sym.Name _parseFieldName(int) -> _parseFieldName
    org.codehaus.jackson.sym.Name parseMediumFieldName(int,int[]) -> parseMediumFieldName
    org.codehaus.jackson.sym.Name parseLongFieldName(int) -> parseLongFieldName
    org.codehaus.jackson.sym.Name slowParseFieldName() -> slowParseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> parseEscapedFieldName
    org.codehaus.jackson.sym.Name _handleUnusualFieldName(int) -> _handleUnusualFieldName
    org.codehaus.jackson.sym.Name _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int,int,int) -> findName
    org.codehaus.jackson.sym.Name addName(int[],int,int) -> addName
    void _finishString() -> _finishString
    void _finishString2(char[],int) -> _finishString2
    void _skipString() -> _skipString
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipColon() -> _skipColon
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> _decodeUtf8_2
    int _decodeUtf8_3(int) -> _decodeUtf8_3
    int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    int _decodeUtf8_4(int) -> _decodeUtf8_4
    void _skipUtf8_2(int) -> _skipUtf8_2
    void _skipUtf8_3(int) -> _skipUtf8_3
    void _skipUtf8_4(int) -> _skipUtf8_4
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int nextByte() -> nextByte
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    int[] growArrayBy(int[],int) -> growArrayBy
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
org.codehaus.jackson.impl.Utf8StreamParser$1 -> org.codehaus.jackson.impl.Utf8StreamParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.WriterBasedGenerator -> org.codehaus.jackson.impl.WriterBasedGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS -> HEX_CHARS
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.Writer _writer -> _writer
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.SerializableString _currentEscape -> _currentEscape
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> writeRawLong
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> _writeString
    void _writeString2(int) -> _writeString2
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeSegment(int) -> _writeSegment
    void _writeString(char[],int,int) -> _writeString
    void _writeStringASCII(int,int) -> _writeStringASCII
    void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    void _writeStringCustom(int) -> _writeStringCustom
    void _writeSegmentCustom(int) -> _writeSegmentCustom
    void _writeStringCustom(char[],int,int) -> _writeStringCustom
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    void _writeNull() -> _writeNull
    void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.io.BaseReader -> org.codehaus.jackson.io.BaseReader:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NULL_CHAR -> NULL_CHAR
    char NULL_BYTE -> NULL_BYTE
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    char[] _tmpBuf -> _tmpBuf
    void close() -> close
    int read() -> read
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
org.codehaus.jackson.io.CharacterEscapes -> org.codehaus.jackson.io.CharacterEscapes:
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    org.codehaus.jackson.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
org.codehaus.jackson.io.IOContext -> org.codehaus.jackson.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    org.codehaus.jackson.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void setEncoding(org.codehaus.jackson.JsonEncoding) -> setEncoding
    java.lang.Object getSourceReference() -> getSourceReference
    org.codehaus.jackson.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    org.codehaus.jackson.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
org.codehaus.jackson.io.InputDecorator -> org.codehaus.jackson.io.InputDecorator:
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,byte[],int,int) -> decorate
    java.io.Reader decorate(org.codehaus.jackson.io.IOContext,java.io.Reader) -> decorate
org.codehaus.jackson.io.JsonStringEncoder -> org.codehaus.jackson.io.JsonStringEncoder:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_U -> INT_U
    int INT_0 -> INT_0
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    char[] _quoteBuffer -> _quoteBuffer
    org.codehaus.jackson.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    int _appendSingleEscape(int,char[]) -> _appendSingleEscape
    int _appendByteEscape(int,int,org.codehaus.jackson.util.ByteArrayBuilder,int) -> _appendByteEscape
    int _convertSurrogate(int,int) -> _convertSurrogate
    void _throwIllegalSurrogate(int) -> _throwIllegalSurrogate
org.codehaus.jackson.io.MergedStream -> org.codehaus.jackson.io.MergedStream:
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _end -> _end
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> freeMergedBuffer
org.codehaus.jackson.io.NumberInput -> org.codehaus.jackson.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    long L_BILLION -> L_BILLION
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
org.codehaus.jackson.io.NumberOutput -> org.codehaus.jackson.io.NumberOutput:
    char NULL_CHAR -> NULL_CHAR
    int MILLION -> MILLION
    int BILLION -> BILLION
    long TEN_BILLION_L -> TEN_BILLION_L
    long THOUSAND_L -> THOUSAND_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    char[] LEADING_TRIPLETS -> LEADING_TRIPLETS
    char[] FULL_TRIPLETS -> FULL_TRIPLETS
    byte[] FULL_TRIPLETS_B -> FULL_TRIPLETS_B
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> outputLeadingTriplet
    int outputLeadingTriplet(int,byte[],int) -> outputLeadingTriplet
    int outputFullTriplet(int,char[],int) -> outputFullTriplet
    int outputFullTriplet(int,byte[],int) -> outputFullTriplet
    int calcLongStrLength(long) -> calcLongStrLength
org.codehaus.jackson.io.OutputDecorator -> org.codehaus.jackson.io.OutputDecorator:
    java.io.OutputStream decorate(org.codehaus.jackson.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(org.codehaus.jackson.io.IOContext,java.io.Writer) -> decorate
org.codehaus.jackson.io.SegmentedStringWriter -> org.codehaus.jackson.io.SegmentedStringWriter:
    org.codehaus.jackson.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.codehaus.jackson.io.SerializedString -> org.codehaus.jackson.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.io.UTF32Reader -> org.codehaus.jackson.io.UTF32Reader:
    boolean mBigEndian -> mBigEndian
    char mSurrogate -> mSurrogate
    int mCharCount -> mCharCount
    int mByteCount -> mByteCount
    int read(char[],int,int) -> read
    void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    void reportInvalid(int,int,java.lang.String) -> reportInvalid
    boolean loadMore(int) -> loadMore
    int read() -> read
    void close() -> close
org.codehaus.jackson.io.UTF8Writer -> org.codehaus.jackson.io.UTF8Writer:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.OutputStream _out -> _out
    byte[] _outBuffer -> _outBuffer
    int _outBufferEnd -> _outBufferEnd
    int _outPtr -> _outPtr
    int _surrogate -> _surrogate
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> convertSurrogate
    void throwIllegal(int) -> throwIllegal
    java.lang.Appendable append(char) -> append
org.codehaus.jackson.map.AbstractTypeResolver -> org.codehaus.jackson.map.AbstractTypeResolver:
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.AnnotationIntrospector -> org.codehaus.jackson.map.AnnotationIntrospector:
    org.codehaus.jackson.map.AnnotationIntrospector nopInstance() -> nopInstance
    org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> pair
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$Pair -> org.codehaus.jackson.map.AnnotationIntrospector$Pair:
    org.codehaus.jackson.map.AnnotationIntrospector _primary -> _primary
    org.codehaus.jackson.map.AnnotationIntrospector _secondary -> _secondary
    org.codehaus.jackson.map.AnnotationIntrospector create(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> create
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.BeanDescription -> org.codehaus.jackson.map.BeanDescription:
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Map findInjectables() -> findInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.BeanProperty -> org.codehaus.jackson.map.BeanProperty:
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanProperty$Std -> org.codehaus.jackson.map.BeanProperty$Std:
    java.lang.String _name -> _name
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType) -> withType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanPropertyDefinition -> org.codehaus.jackson.map.BeanPropertyDefinition:
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
org.codehaus.jackson.map.ClassIntrospector -> org.codehaus.jackson.map.ClassIntrospector:
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
org.codehaus.jackson.map.ClassIntrospector$MixInResolver -> org.codehaus.jackson.map.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
org.codehaus.jackson.map.ContextualDeserializer -> org.codehaus.jackson.map.ContextualDeserializer:
    org.codehaus.jackson.map.JsonDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualKeyDeserializer -> org.codehaus.jackson.map.ContextualKeyDeserializer:
    org.codehaus.jackson.map.KeyDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualSerializer -> org.codehaus.jackson.map.ContextualSerializer:
    org.codehaus.jackson.map.JsonSerializer createContextual(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.DeserializationConfig -> org.codehaus.jackson.map.DeserializationConfig:
    org.codehaus.jackson.map.util.LinkedNode _problemHandlers -> _problemHandlers
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean _sortPropertiesAlphabetically -> _sortPropertiesAlphabetically
    org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int) -> passSerializationFeatures
    org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.DeserializationConfig with(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    void enable(org.codehaus.jackson.map.DeserializationConfig$Feature) -> enable
    void disable(org.codehaus.jackson.map.DeserializationConfig$Feature) -> disable
    void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean) -> set
    org.codehaus.jackson.map.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler) -> addHandler
    void clearHandlers() -> clearHandlers
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType) -> introspectForCreation
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.DeserializationConfig$Feature -> org.codehaus.jackson.map.DeserializationConfig$Feature:
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.DeserializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.DeserializationContext -> org.codehaus.jackson.map.DeserializationContext:
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    org.codehaus.jackson.map.DeserializationConfig getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.JsonParser getParser() -> getParser
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
org.codehaus.jackson.map.DeserializationProblemHandler -> org.codehaus.jackson.map.DeserializationProblemHandler:
    boolean handleUnknownProperty(org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
org.codehaus.jackson.map.DeserializerFactory -> org.codehaus.jackson.map.DeserializerFactory:
    org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.DeserializerFactory withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
org.codehaus.jackson.map.DeserializerFactory$Config -> org.codehaus.jackson.map.DeserializerFactory$Config:
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
org.codehaus.jackson.map.DeserializerProvider -> org.codehaus.jackson.map.DeserializerProvider:
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
org.codehaus.jackson.map.Deserializers -> org.codehaus.jackson.map.Deserializers:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$Base -> org.codehaus.jackson.map.Deserializers$Base:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$None -> org.codehaus.jackson.map.Deserializers$None:
org.codehaus.jackson.map.HandlerInstantiator -> org.codehaus.jackson.map.HandlerInstantiator:
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
org.codehaus.jackson.map.InjectableValues -> org.codehaus.jackson.map.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.InjectableValues$Std -> org.codehaus.jackson.map.InjectableValues$Std:
    java.util.Map _values -> _values
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.JsonDeserializer -> org.codehaus.jackson.map.JsonDeserializer:
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
org.codehaus.jackson.map.JsonDeserializer$None -> org.codehaus.jackson.map.JsonDeserializer$None:
org.codehaus.jackson.map.JsonMappingException -> org.codehaus.jackson.map.JsonMappingException:
    long serialVersionUID -> serialVersionUID
    int MAX_REFS_TO_LIST -> MAX_REFS_TO_LIST
    java.util.LinkedList _path -> _path
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String) -> from
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String,java.lang.Throwable) -> from
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference) -> wrapWithPath
    java.util.List getPath() -> getPath
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
    void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference) -> prependPath
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
org.codehaus.jackson.map.JsonMappingException$Reference -> org.codehaus.jackson.map.JsonMappingException$Reference:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    void setFrom(java.lang.Object) -> setFrom
    void setFieldName(java.lang.String) -> setFieldName
    void setIndex(int) -> setIndex
    java.lang.Object getFrom() -> getFrom
    java.lang.String getFieldName() -> getFieldName
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
org.codehaus.jackson.map.JsonSerializable -> org.codehaus.jackson.map.JsonSerializable:
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.JsonSerializableWithType -> org.codehaus.jackson.map.JsonSerializableWithType:
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.JsonSerializer -> org.codehaus.jackson.map.JsonSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.JsonSerializer$None -> org.codehaus.jackson.map.JsonSerializer$None:
org.codehaus.jackson.map.KeyDeserializer -> org.codehaus.jackson.map.KeyDeserializer:
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
org.codehaus.jackson.map.KeyDeserializer$None -> org.codehaus.jackson.map.KeyDeserializer$None:
org.codehaus.jackson.map.KeyDeserializers -> org.codehaus.jackson.map.KeyDeserializers:
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.MapperConfig -> org.codehaus.jackson.map.MapperConfig:
    java.text.DateFormat DEFAULT_DATE_FORMAT -> DEFAULT_DATE_FORMAT
    org.codehaus.jackson.map.MapperConfig$Base _base -> _base
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    boolean _mixInAnnotationsShared -> _mixInAnnotationsShared
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType) -> getDefaultTyper
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    void setDateFormat(java.text.DateFormat) -> setDateFormat
org.codehaus.jackson.map.MapperConfig$Base -> org.codehaus.jackson.map.MapperConfig$Base:
    org.codehaus.jackson.map.ClassIntrospector _classIntrospector -> _classIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
org.codehaus.jackson.map.MapperConfig$ConfigFeature -> org.codehaus.jackson.map.MapperConfig$ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.MapperConfig$Impl -> org.codehaus.jackson.map.MapperConfig$Impl:
    int _featureFlags -> _featureFlags
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
org.codehaus.jackson.map.MappingIterator -> org.codehaus.jackson.map.MappingIterator:
    org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    org.codehaus.jackson.JsonParser _parser -> _parser
    boolean _closeParser -> _closeParser
    boolean _hasNextChecked -> _hasNextChecked
    java.lang.Object _updatedValue -> _updatedValue
    org.codehaus.jackson.map.MappingIterator emptyIterator() -> emptyIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean hasNextValue() -> hasNextValue
    java.lang.Object nextValue() -> nextValue
org.codehaus.jackson.map.MappingJsonFactory -> org.codehaus.jackson.map.MappingJsonFactory:
    org.codehaus.jackson.map.ObjectMapper getCodec() -> getCodec
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
org.codehaus.jackson.map.Module -> org.codehaus.jackson.map.Module:
    java.lang.String getModuleName() -> getModuleName
    org.codehaus.jackson.Version version() -> version
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
org.codehaus.jackson.map.Module$SetupContext -> org.codehaus.jackson.map.Module$SetupContext:
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper -> org.codehaus.jackson.map.ObjectMapper:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR -> DEFAULT_INTROSPECTOR
    org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER -> STD_VISIBILITY_CHECKER
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.SerializationConfig _serializationConfig -> _serializationConfig
    org.codehaus.jackson.map.SerializerProvider _serializerProvider -> _serializerProvider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.DeserializationConfig _deserializationConfig -> _deserializationConfig
    org.codehaus.jackson.map.DeserializerProvider _deserializerProvider -> _deserializerProvider
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.Version version() -> version
    void registerModule(org.codehaus.jackson.map.Module) -> registerModule
    org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module) -> withModule
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    org.codehaus.jackson.map.SerializationConfig copySerializationConfig() -> copySerializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig) -> setSerializationConfig
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig() -> copyDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig) -> setDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory) -> setSerializerFactory
    org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider) -> setSerializerProvider
    org.codehaus.jackson.map.SerializerProvider getSerializerProvider() -> getSerializerProvider
    org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider) -> setDeserializerProvider
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> setVisibilityChecker
    org.codehaus.jackson.map.ObjectMapper setVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> setVisibility
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> setSubtypeResolver
    org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> setPropertyNamingStrategy
    org.codehaus.jackson.map.ObjectMapper setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    org.codehaus.jackson.map.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> setDefaultTyping
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> setTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> setNodeFactory
    void setFilters(org.codehaus.jackson.map.ser.FilterProvider) -> setFilters
    org.codehaus.jackson.JsonFactory getJsonFactory() -> getJsonFactory
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> setHandlerInstantiator
    org.codehaus.jackson.map.ObjectMapper setInjectableValues(org.codehaus.jackson.map.InjectableValues) -> setInjectableValues
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> disable
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> disable
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.JsonNode readTree(byte[]) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.File) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.net.URL) -> readTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode,org.codehaus.jackson.map.SerializationConfig) -> writeTree
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ArrayNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    org.codehaus.jackson.JsonNode valueToTree(java.lang.Object) -> valueToTree
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canDeserialize(org.codehaus.jackson.type.JavaType) -> canDeserialize
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.JavaType) -> readValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    org.codehaus.jackson.map.ObjectWriter writer() -> writer
    org.codehaus.jackson.map.ObjectWriter writer(java.text.DateFormat) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider) -> writer
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema) -> writer
    org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class) -> viewWriter
    org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter) -> prettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter() -> defaultPrettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider) -> filteredWriter
    org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema) -> schemaBasedWriter
    org.codehaus.jackson.map.ObjectReader reader() -> reader
    org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType) -> reader
    org.codehaus.jackson.map.ObjectReader reader(java.lang.Class) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.map.InjectableValues) -> reader
    org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object) -> updatingReader
    org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema) -> schemaBasedReader
    java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.JavaType) -> convertValue
    java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _convert
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> generateJsonSchema
    org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter() -> _defaultPrettyPrinter
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
    java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readMapAndClose
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
org.codehaus.jackson.map.ObjectMapper$1 -> org.codehaus.jackson.map.ObjectMapper$1:
    org.codehaus.jackson.map.ObjectMapper val$mapper -> val$mapper
    org.codehaus.jackson.map.ObjectMapper this$0 -> this$0
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper$2 -> org.codehaus.jackson.map.ObjectMapper$2:
    int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping -> $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping
org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder -> org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping _appliesFor -> _appliesFor
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    boolean useForType(org.codehaus.jackson.type.JavaType) -> useForType
org.codehaus.jackson.map.ObjectMapper$DefaultTyping -> org.codehaus.jackson.map.ObjectMapper$DefaultTyping:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> JAVA_LANG_OBJECT
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> OBJECT_AND_NON_CONCRETE
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> NON_CONCRETE_AND_ARRAYS
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_FINAL -> NON_FINAL
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] $VALUES -> $VALUES
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] values() -> values
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.ObjectReader -> org.codehaus.jackson.map.ObjectReader:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    boolean _unwrapRoot -> _unwrapRoot
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.map.DeserializerProvider _provider -> _provider
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    java.lang.Object _valueToUpdate -> _valueToUpdate
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.reflect.Type) -> withType
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    org.codehaus.jackson.map.ObjectReader withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectReader withInjectableValues(org.codehaus.jackson.map.InjectableValues) -> withInjectableValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.lang.Object readValue(java.io.InputStream) -> readValue
    java.lang.Object readValue(java.io.Reader) -> readValue
    java.lang.Object readValue(java.lang.String) -> readValue
    java.lang.Object readValue(byte[]) -> readValue
    java.lang.Object readValue(byte[],int,int) -> readValue
    java.lang.Object readValue(java.io.File) -> readValue
    java.lang.Object readValue(java.net.URL) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode) -> readValue
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.InputStream) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.Reader) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.lang.String) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(byte[],int,int) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(byte[]) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.File) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.net.URL) -> readValues
    java.lang.Object _bind(org.codehaus.jackson.JsonParser) -> _bind
    java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser) -> _bindAndClose
    org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser) -> _bindAsTree
    org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser) -> _bindAndCloseAsTree
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
org.codehaus.jackson.map.ObjectWriter -> org.codehaus.jackson.map.ObjectWriter:
    org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.SerializerProvider _provider -> _provider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _rootType -> _rootType
    org.codehaus.jackson.PrettyPrinter _prettyPrinter -> _prettyPrinter
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectWriter withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> withPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.ObjectWriter withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectWriter withDateFormat(java.text.DateFormat) -> withDateFormat
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    boolean canSerialize(java.lang.Class) -> canSerialize
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
org.codehaus.jackson.map.PropertyNamingStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy:
    org.codehaus.jackson.map.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase -> org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase:
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.ResolvableDeserializer -> org.codehaus.jackson.map.ResolvableDeserializer:
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
org.codehaus.jackson.map.ResolvableSerializer -> org.codehaus.jackson.map.ResolvableSerializer:
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.RuntimeJsonMappingException -> org.codehaus.jackson.map.RuntimeJsonMappingException:
org.codehaus.jackson.map.SerializationConfig -> org.codehaus.jackson.map.SerializationConfig:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion -> _serializationInclusion
    java.lang.Class _serializationView -> _serializationView
    org.codehaus.jackson.map.ser.FilterProvider _filterProvider -> _filterProvider
    org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> withSerializationInclusion
    org.codehaus.jackson.map.SerializationConfig with(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    void enable(org.codehaus.jackson.map.SerializationConfig$Feature) -> enable
    void disable(org.codehaus.jackson.map.SerializationConfig$Feature) -> disable
    void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean) -> set
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion() -> getSerializationInclusion
    void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setSerializationView(java.lang.Class) -> setSerializationView
    java.lang.String toString() -> toString
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.SerializationConfig$Feature -> org.codehaus.jackson.map.SerializationConfig$Feature:
    org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.SerializationConfig$Feature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES -> WRITE_NULL_PROPERTIES
    org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING -> USE_STATIC_TYPING
    org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT -> INDENT_OUTPUT
    org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.SerializerFactory -> org.codehaus.jackson.map.SerializerFactory:
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.SerializerFactory withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createTypeSerializer
org.codehaus.jackson.map.SerializerFactory$Config -> org.codehaus.jackson.map.SerializerFactory$Config:
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.SerializerProvider -> org.codehaus.jackson.map.SerializerProvider:
    org.codehaus.jackson.type.JavaType TYPE_OBJECT -> TYPE_OBJECT
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    org.codehaus.jackson.map.SerializationConfig getConfig() -> getConfig
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer() -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeField(java.lang.String,java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeField
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(org.codehaus.jackson.JsonGenerator) -> defaultSerializeNull
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
org.codehaus.jackson.map.Serializers -> org.codehaus.jackson.map.Serializers:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$Base -> org.codehaus.jackson.map.Serializers$Base:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$None -> org.codehaus.jackson.map.Serializers$None:
org.codehaus.jackson.map.TypeDeserializer -> org.codehaus.jackson.map.TypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.TypeSerializer -> org.codehaus.jackson.map.TypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
org.codehaus.jackson.map.annotate.JacksonInject -> org.codehaus.jackson.map.annotate.JacksonInject:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JacksonStdImpl -> org.codehaus.jackson.map.annotate.JacksonStdImpl:
org.codehaus.jackson.map.annotate.JsonCachable -> org.codehaus.jackson.map.annotate.JsonCachable:
    boolean value() -> value
org.codehaus.jackson.map.annotate.JsonDeserialize -> org.codehaus.jackson.map.annotate.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
org.codehaus.jackson.map.annotate.JsonFilter -> org.codehaus.jackson.map.annotate.JsonFilter:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonRootName -> org.codehaus.jackson.map.annotate.JsonRootName:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonSerialize -> org.codehaus.jackson.map.annotate.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing typing() -> typing
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion include() -> include
org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion -> org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonSerialize$Typing -> org.codehaus.jackson.map.annotate.JsonSerialize$Typing:
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC -> STATIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonTypeIdResolver -> org.codehaus.jackson.map.annotate.JsonTypeIdResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonTypeResolver -> org.codehaus.jackson.map.annotate.JsonTypeResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonValueInstantiator -> org.codehaus.jackson.map.annotate.JsonValueInstantiator:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonView -> org.codehaus.jackson.map.annotate.JsonView:
    java.lang.Class[] value() -> value
org.codehaus.jackson.map.annotate.NoClass -> org.codehaus.jackson.map.annotate.NoClass:
org.codehaus.jackson.map.deser.AbstractDeserializer -> org.codehaus.jackson.map.deser.AbstractDeserializer:
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.AbstractDeserializer$1 -> org.codehaus.jackson.map.deser.AbstractDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.ArrayDeserializer -> org.codehaus.jackson.map.deser.ArrayDeserializer:
org.codehaus.jackson.map.deser.ArrayDeserializers -> org.codehaus.jackson.map.deser.ArrayDeserializers:
org.codehaus.jackson.map.deser.BasicDeserializerFactory -> org.codehaus.jackson.map.deser.BasicDeserializerFactory:
    java.util.HashMap _simpleDeserializers -> _simpleDeserializers
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    java.util.HashMap _arrayDeserializers -> _arrayDeserializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findStdBeanDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyContentTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findDeserializerFromAnnotation
    org.codehaus.jackson.map.JsonDeserializer _constructDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> _constructDeserializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> resolveType
    org.codehaus.jackson.map.util.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> constructEnumResolver
org.codehaus.jackson.map.deser.BeanDeserializer -> org.codehaus.jackson.map.deser.BeanDeserializer:
    org.codehaus.jackson.map.introspect.AnnotatedClass _forClass -> _forClass
    org.codehaus.jackson.type.JavaType _beanType -> _beanType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables -> _injectables
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.HashSet _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    boolean hasProperty(java.lang.String) -> hasProperty
    int getPropertyCount() -> getPropertyCount
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    java.util.Iterator properties() -> properties
    org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveUnwrappedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
    java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> injectValues
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handleUnknownProperties
    org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext) -> wrapInstantiationProblem
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.deser.BeanDeserializer$1 -> org.codehaus.jackson.map.deser.BeanDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.BeanDeserializerBuilder -> org.codehaus.jackson.map.deser.BeanDeserializerBuilder:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.HashMap _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.HashMap _copy(java.util.HashMap) -> _copy
    void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addInjectable(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    void addIgnorable(java.lang.String) -> addIgnorable
    void addCreatorProperty(org.codehaus.jackson.map.BeanPropertyDefinition) -> addCreatorProperty
    void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator) -> setValueInstantiator
    java.util.Iterator getProperties() -> getProperties
    boolean hasProperty(java.lang.String) -> hasProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty removeProperty(java.lang.String) -> removeProperty
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty) -> build
org.codehaus.jackson.map.deser.BeanDeserializerFactory -> org.codehaus.jackson.map.deser.BeanDeserializerFactory:
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    org.codehaus.jackson.map.deser.BeanDeserializerFactory instance -> instance
    org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomBeanDeserializer
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _mapAbstractType2
    org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> materializeAbstractType
    org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildThrowableDeserializer
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanDeserializerBuilder
    org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructDefaultValueInstantiator
    void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerConstructors
    boolean _handleSingleArgumentConstructor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean,boolean) -> _handleSingleArgumentConstructor
    void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerFactoryMethods
    boolean _handleSingleArgumentFactory(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _handleSingleArgumentFactory
    org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object) -> constructCreatorProperty
    void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addBeanProps
    void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addInjectables
    org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructAnySetter
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map) -> isIgnorableType
    org.codehaus.jackson.map.Deserializers[] access$000() -> access$000
org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl -> org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl:
    org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS -> NO_KEY_DESERIALIZERS
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    org.codehaus.jackson.map.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
org.codehaus.jackson.map.deser.BeanDeserializerModifier -> org.codehaus.jackson.map.deser.BeanDeserializerModifier:
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer) -> modifyDeserializer
org.codehaus.jackson.map.deser.CollectionDeserializer -> org.codehaus.jackson.map.deser.CollectionDeserializer:
org.codehaus.jackson.map.deser.ContainerDeserializer -> org.codehaus.jackson.map.deser.ContainerDeserializer:
org.codehaus.jackson.map.deser.CustomDeserializerFactory -> org.codehaus.jackson.map.deser.CustomDeserializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addSpecificMapping
    void addMixInAnnotationMapping(java.lang.Class,java.lang.Class) -> addMixInAnnotationMapping
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
org.codehaus.jackson.map.deser.DateDeserializer -> org.codehaus.jackson.map.deser.DateDeserializer:
org.codehaus.jackson.map.deser.EnumDeserializer -> org.codehaus.jackson.map.deser.EnumDeserializer:
org.codehaus.jackson.map.deser.EnumResolver -> org.codehaus.jackson.map.deser.EnumResolver:
org.codehaus.jackson.map.deser.FromStringDeserializer -> org.codehaus.jackson.map.deser.FromStringDeserializer:
org.codehaus.jackson.map.deser.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeAny
org.codehaus.jackson.map.deser.MapDeserializer -> org.codehaus.jackson.map.deser.MapDeserializer:
org.codehaus.jackson.map.deser.SettableAnyProperty -> org.codehaus.jackson.map.deser.SettableAnyProperty:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    org.codehaus.jackson.type.JavaType getType() -> getType
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty:
    java.lang.String _propName -> _propName
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    int _propertyIndex -> _propertyIndex
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void assignIndex(int) -> assignIndex
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    org.codehaus.jackson.map.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    int getPropertyIndex() -> getPropertyIndex
    int getProperytIndex() -> getProperytIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty:
    org.codehaus.jackson.map.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _delegate -> _delegate
    java.lang.reflect.Constructor _creator -> _creator
    org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty:
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    org.codehaus.jackson.map.deser.SettableBeanProperty _managedProperty -> _managedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _backProperty -> _backProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider -> org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider:
    java.lang.Object _nullValue -> _nullValue
    boolean _isPrimitive -> _isPrimitive
    java.lang.Class _rawType -> _rawType
    java.lang.Object nullValue(org.codehaus.jackson.map.DeserializationContext) -> nullValue
org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.StdDeserializationContext -> org.codehaus.jackson.map.deser.StdDeserializationContext:
    int MAX_ERROR_STR_LEN -> MAX_ERROR_STR_LEN
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializerProvider _deserProvider -> _deserProvider
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    org.codehaus.jackson.map.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String determineClassName(java.lang.Object) -> determineClassName
    java.lang.String _calcName(java.lang.Class) -> _calcName
    java.lang.String _valueDesc() -> _valueDesc
    java.lang.String _desc(java.lang.String) -> _desc
org.codehaus.jackson.map.deser.StdDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer:
org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.StdDeserializerProvider -> org.codehaus.jackson.map.deser.StdDeserializerProvider:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.DeserializerFactory _factory -> _factory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.deser.StdDeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
    org.codehaus.jackson.map.JsonDeserializer _findCachedDeserializer(org.codehaus.jackson.type.JavaType) -> _findCachedDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCache2
    org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createDeserializer
    void _resolveDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.ResolvableDeserializer) -> _resolveDeserializer
    org.codehaus.jackson.map.JsonDeserializer _handleUnknownValueDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer _handleUnknownKeyDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownKeyDeserializer
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer -> org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer:
    org.codehaus.jackson.map.TypeDeserializer _typeDeserializer -> _typeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.StdDeserializers -> org.codehaus.jackson.map.deser.StdDeserializers:
    java.util.HashMap _deserializers -> _deserializers
    java.util.HashMap constructAll() -> constructAll
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer) -> add
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class) -> add
org.codehaus.jackson.map.deser.StdKeyDeserializer -> org.codehaus.jackson.map.deser.StdKeyDeserializer:
org.codehaus.jackson.map.deser.StdKeyDeserializers -> org.codehaus.jackson.map.deser.StdKeyDeserializers:
org.codehaus.jackson.map.deser.StdScalarDeserializer -> org.codehaus.jackson.map.deser.StdScalarDeserializer:
org.codehaus.jackson.map.deser.ThrowableDeserializer -> org.codehaus.jackson.map.deser.ThrowableDeserializer:
org.codehaus.jackson.map.deser.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.UntypedObjectDeserializer:
org.codehaus.jackson.map.deser.ValueInstantiator -> org.codehaus.jackson.map.deser.ValueInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
org.codehaus.jackson.map.deser.ValueInstantiators -> org.codehaus.jackson.map.deser.ValueInstantiators:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.ValueInstantiators$Base -> org.codehaus.jackson.map.deser.ValueInstantiators$Base:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.impl.BeanPropertyMap -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    int _hashMask -> _hashMask
    int _size -> _size
    void assignIndexes() -> assignIndexes
    int findSize(int) -> findSize
    int size() -> size
    java.util.Iterator allProperties() -> allProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String) -> find
    void replace(org.codehaus.jackson.map.deser.SettableBeanProperty) -> replace
    void remove(org.codehaus.jackson.map.deser.SettableBeanProperty) -> remove
    org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int) -> _findWithEquals
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next -> next
    java.lang.String key -> key
    org.codehaus.jackson.map.deser.SettableBeanProperty value -> value
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket -> _currentBucket
    int _nextBucketIndex -> _nextBucketIndex
    boolean hasNext() -> hasNext
    org.codehaus.jackson.map.deser.SettableBeanProperty next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.map.deser.impl.CreatorCollector -> org.codehaus.jackson.map.deser.impl.CreatorCollector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _stringCreator -> _stringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _intCreator -> _intCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _longCreator -> _longCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _doubleCreator -> _doubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _booleanCreator -> _booleanCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _propertyBasedArgs -> _propertyBasedArgs
    org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig) -> constructValueInstantiator
    void setDefaultConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> setDefaultConstructor
    void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addStringCreator
    void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addIntCreator
    void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addLongCreator
    void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDoubleCreator
    void addBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addBooleanCreator
    void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDelegatingCreator
    void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> addPropertyCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,java.lang.String) -> verifyNonDup
org.codehaus.jackson.map.deser.impl.CreatorProperty -> org.codehaus.jackson.map.deser.impl.CreatorProperty:
    org.codehaus.jackson.map.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    org.codehaus.jackson.map.deser.impl.CreatorProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.Object findInjectableValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findInjectableValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler:
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    org.codehaus.jackson.util.TokenBuffer[] _tokens -> _tokens
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start() -> start
    boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleToken
    java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> complete
    void _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,int) -> _deserialize
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder:
    java.util.ArrayList _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    void addExternal(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.String) -> addExternal
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler build() -> build
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    java.lang.String _typePropertyName -> _typePropertyName
    boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    java.lang.String getTypePropertyName() -> getTypePropertyName
    org.codehaus.jackson.map.deser.SettableBeanProperty getProperty() -> getProperty
org.codehaus.jackson.map.deser.impl.PropertyBasedCreator -> org.codehaus.jackson.map.deser.impl.PropertyBasedCreator:
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _properties -> _properties
    java.lang.Object[] _defaultValues -> _defaultValues
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertiesWithInjectables -> _propertiesWithInjectables
    java.util.Collection getCreatorProperties() -> getCreatorProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer) -> assignDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> startBuilding
    java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer) -> build
org.codehaus.jackson.map.deser.impl.PropertyValue -> org.codehaus.jackson.map.deser.impl.PropertyValue:
    org.codehaus.jackson.map.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Any -> org.codehaus.jackson.map.deser.impl.PropertyValue$Any:
    org.codehaus.jackson.map.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Map -> org.codehaus.jackson.map.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Regular -> org.codehaus.jackson.map.deser.impl.PropertyValue$Regular:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValueBuffer -> org.codehaus.jackson.map.deser.impl.PropertyValueBuffer:
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    org.codehaus.jackson.map.deser.impl.PropertyValue _buffered -> _buffered
    void inject(org.codehaus.jackson.map.deser.SettableBeanProperty[]) -> inject
    java.lang.Object[] getParameters(java.lang.Object[]) -> getParameters
    org.codehaus.jackson.map.deser.impl.PropertyValue buffered() -> buffered
    boolean assignParameter(int,java.lang.Object) -> assignParameter
    void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler -> org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler:
    java.util.ArrayList _properties -> _properties
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> processUnwrapped
org.codehaus.jackson.map.deser.impl.ValueInjector -> org.codehaus.jackson.map.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    java.lang.Object findValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer -> org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer:
    java.util.concurrent.atomic.AtomicBoolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer -> org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer:
    org.codehaus.jackson.type.JavaType _referencedType -> _referencedType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.concurrent.atomic.AtomicReference deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    void _reportProblem(org.codehaus.jackson.JsonParser,java.lang.String) -> _reportProblem
    void _handleDuplicateField(java.lang.String,org.codehaus.jackson.node.ObjectNode,org.codehaus.jackson.JsonNode,org.codehaus.jackson.JsonNode) -> _handleDuplicateField
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeAny
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.CalendarDeserializer -> org.codehaus.jackson.map.deser.std.CalendarDeserializer:
    java.lang.Class _calendarClass -> _calendarClass
    java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ClassDeserializer -> org.codehaus.jackson.map.deser.std.ClassDeserializer:
    java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.CollectionDeserializer -> org.codehaus.jackson.map.deser.std.CollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ContainerDeserializerBase -> org.codehaus.jackson.map.deser.std.ContainerDeserializerBase:
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
org.codehaus.jackson.map.deser.std.DateDeserializer -> org.codehaus.jackson.map.deser.std.DateDeserializer:
    java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> deserializerForCreator
    java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer:
    java.lang.Class _enumClass -> _enumClass
    java.lang.reflect.Method _factory -> _factory
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumMapDeserializer -> org.codehaus.jackson.map.deser.std.EnumMapDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _enumResolver -> _enumResolver
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.EnumMap deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumMap constructMap() -> constructMap
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumSetDeserializer -> org.codehaus.jackson.map.deser.std.EnumSetDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.deser.std.EnumDeserializer _enumDeserializer -> _enumDeserializer
    java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumSet constructSet() -> constructSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer:
    java.lang.Iterable all() -> all
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer:
    java.util.Currency _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer:
    java.net.InetAddress _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer:
    java.util.Locale _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer:
    java.util.regex.Pattern _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer:
    java.util.TimeZone _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer:
    java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer:
    java.net.URL _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer:
    java.util.UUID _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.JavaTypeDeserializer -> org.codehaus.jackson.map.deser.std.JavaTypeDeserializer:
    org.codehaus.jackson.type.JavaType deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.map.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    org.codehaus.jackson.JsonNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ArrayNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.MapDeserializer -> org.codehaus.jackson.map.deser.std.MapDeserializer:
    org.codehaus.jackson.type.JavaType _mapType -> _mapType
    org.codehaus.jackson.map.KeyDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    java.util.HashSet _ignorableProperties -> _ignorableProperties
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> _readAndBind
    java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingCreator
    void wrapAndThrow(java.lang.Throwable,java.lang.Object) -> wrapAndThrow
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer -> org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer:
    org.codehaus.jackson.type.JavaType _arrayType -> _arrayType
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    org.codehaus.jackson.map.JsonDeserializer _elementDeserializer -> _elementDeserializer
    org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBase64
    java.lang.Object[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers:
    java.util.HashMap _allDeserializers -> _allDeserializers
    org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance -> instance
    java.util.HashMap getAll() -> getAll
    void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> add
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    boolean[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    byte[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    byte[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser:
    char[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    double[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    double[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    float[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    float[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser:
    int[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    int[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser:
    long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    long[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    short[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    short[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser:
    java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer:
    java.lang.Class _valueClass -> _valueClass
    java.lang.Class getValueClass() -> getValueClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonDeserializer) -> isDefaultSerializer
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanPrimitive
    java.lang.Boolean _parseBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBoolean
    java.lang.Byte _parseByte(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseByte
    java.lang.Short _parseShort(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShort
    short _parseShortPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseInteger
    java.lang.Long _parseLong(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLong
    long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLongPrimitive
    java.lang.Float _parseFloat(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloat
    float _parseFloatPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloatPrimitive
    java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDouble
    double _parseDoublePrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDoublePrimitive
    java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDate
    double parseDouble(java.lang.String) -> parseDouble
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findDeserializer
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void reportUnknownProperty(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> reportUnknownProperty
org.codehaus.jackson.map.deser.std.StdDeserializer$1 -> org.codehaus.jackson.map.deser.std.StdDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer:
    java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer:
    java.math.BigInteger deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer:
    java.lang.Boolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer:
    java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer:
    java.lang.Character deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer:
    java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer:
    java.lang.Float deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer:
    java.lang.Integer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer:
    java.lang.Long deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer:
    java.lang.Number deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer:
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object getNullValue() -> getNullValue
org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer:
    java.lang.Short deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer:
    java.sql.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer:
    java.lang.StackTraceElement deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer:
    java.lang.Class _keyClass -> _keyClass
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD:
    java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD:
    java.lang.Byte _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD:
    java.util.Calendar _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD:
    java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD:
    java.util.Date _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD:
    java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    java.lang.Enum _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD:
    java.lang.Float _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD:
    java.lang.Integer _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD:
    java.lang.Long _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD:
    java.lang.Short _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD:
    java.util.UUID _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializers -> org.codehaus.jackson.map.deser.std.StdKeyDeserializers:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer) -> add
    java.util.HashMap constructAll() -> constructAll
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findStringBasedKeyDeserializer
org.codehaus.jackson.map.deser.std.StdScalarDeserializer -> org.codehaus.jackson.map.deser.std.StdScalarDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.StdValueInstantiator -> org.codehaus.jackson.map.deser.std.StdValueInstantiator:
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    boolean _cfgEmptyStringsAsObjects -> _cfgEmptyStringsAsObjects
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments -> _constructorArguments
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    org.codehaus.jackson.type.JavaType _delegateType -> _delegateType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> configureFromObjectSettings
    void configureFromStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    java.lang.Object _createFromStringFallbacks(java.lang.String) -> _createFromStringFallbacks
    org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
org.codehaus.jackson.map.deser.std.StringCollectionDeserializer -> org.codehaus.jackson.map.deser.std.StringCollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    boolean _isDefaultDeserializer -> _isDefaultDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.util.Collection deserializeUsingCustom(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserializeUsingCustom
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StringDeserializer -> org.codehaus.jackson.map.deser.std.StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ThrowableDeserializer -> org.codehaus.jackson.map.deser.std.ThrowableDeserializer:
    java.lang.String PROP_NAME_MESSAGE -> PROP_NAME_MESSAGE
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
org.codehaus.jackson.map.deser.std.TimestampDeserializer -> org.codehaus.jackson.map.deser.std.TimestampDeserializer:
    java.sql.Timestamp deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.TokenBufferDeserializer -> org.codehaus.jackson.map.deser.std.TokenBufferDeserializer:
    org.codehaus.jackson.util.TokenBuffer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object mapArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArray
    java.lang.Object mapObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapObject
    java.lang.Object[] mapArrayToArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArrayToArray
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1 -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.exc.UnrecognizedPropertyException -> org.codehaus.jackson.map.exc.UnrecognizedPropertyException:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _unrecognizedPropertyName -> _unrecognizedPropertyName
    org.codehaus.jackson.map.exc.UnrecognizedPropertyException from(org.codehaus.jackson.JsonParser,java.lang.Object,java.lang.String) -> from
    java.lang.Class getReferringClass() -> getReferringClass
    java.lang.String getUnrecognizedPropertyName() -> getUnrecognizedPropertyName
org.codehaus.jackson.map.ext.CoreXMLDeserializers -> org.codehaus.jackson.map.ext.CoreXMLDeserializers:
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> _dataTypeFactory
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer:
    javax.xml.datatype.Duration _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer:
    javax.xml.datatype.XMLGregorianCalendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer:
    javax.xml.namespace.QName _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLSerializers -> org.codehaus.jackson.map.ext.CoreXMLSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer:
    void serialize(javax.xml.datatype.XMLGregorianCalendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.DOMDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer:
    javax.xml.parsers.DocumentBuilderFactory _parserFactory -> _parserFactory
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    org.w3c.dom.Document parse(java.lang.String) -> parse
org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer:
    org.w3c.dom.Document _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer:
    org.w3c.dom.Node _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMSerializer -> org.codehaus.jackson.map.ext.DOMSerializer:
    org.w3c.dom.ls.DOMImplementationLS _domImpl -> _domImpl
    void serialize(org.w3c.dom.Node,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaDeserializers -> org.codehaus.jackson.map.ext.JodaDeserializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaDeserializers$1 -> org.codehaus.jackson.map.ext.JodaDeserializers$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer:
    org.joda.time.DateMidnight deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer:
    org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.DateTime parseLocal(org.codehaus.jackson.JsonParser) -> parseLocal
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer:
    org.joda.time.LocalDate deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer:
    org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer:
    org.joda.time.ReadablePeriod deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaSerializers -> org.codehaus.jackson.map.ext.JodaSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer:
    void serialize(org.joda.time.DateMidnight,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer:
    void serialize(org.joda.time.DateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.format.DateTimeFormatter _localDateFormat -> _localDateFormat
    java.lang.String printLocalDateTime(org.joda.time.ReadablePartial) -> printLocalDateTime
    java.lang.String printLocalDate(org.joda.time.ReadablePartial) -> printLocalDate
    java.lang.String printLocalDate(org.joda.time.ReadableInstant) -> printLocalDate
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer:
    void serialize(org.joda.time.LocalDate,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer:
    void serialize(org.joda.time.LocalDateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.OptionalHandlerFactory -> org.codehaus.jackson.map.ext.OptionalHandlerFactory:
    java.lang.String PACKAGE_PREFIX_JODA_DATETIME -> PACKAGE_PREFIX_JODA_DATETIME
    java.lang.String PACKAGE_PREFIX_JAVAX_XML -> PACKAGE_PREFIX_JAVAX_XML
    java.lang.String SERIALIZERS_FOR_JODA_DATETIME -> SERIALIZERS_FOR_JODA_DATETIME
    java.lang.String SERIALIZERS_FOR_JAVAX_XML -> SERIALIZERS_FOR_JAVAX_XML
    java.lang.String DESERIALIZERS_FOR_JODA_DATETIME -> DESERIALIZERS_FOR_JODA_DATETIME
    java.lang.String DESERIALIZERS_FOR_JAVAX_XML -> DESERIALIZERS_FOR_JAVAX_XML
    java.lang.String CLASS_NAME_DOM_NODE -> CLASS_NAME_DOM_NODE
    java.lang.String CLASS_NAME_DOM_DOCUMENT -> CLASS_NAME_DOM_DOCUMENT
    java.lang.String SERIALIZER_FOR_DOM_NODE -> SERIALIZER_FOR_DOM_NODE
    java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT -> DESERIALIZER_FOR_DOM_DOCUMENT
    java.lang.String DESERIALIZER_FOR_DOM_NODE -> DESERIALIZER_FOR_DOM_NODE
    org.codehaus.jackson.map.ext.OptionalHandlerFactory instance -> instance
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType) -> findSerializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> findDeserializer
    java.lang.Object instantiate(java.lang.String) -> instantiate
    boolean doesImplement(java.lang.Class,java.lang.String) -> doesImplement
    boolean hasInterface(java.lang.Class,java.lang.String) -> hasInterface
    boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String) -> hasSupertypeStartingWith
    boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String) -> hasInterfaceStartingWith
org.codehaus.jackson.map.introspect.Annotated -> org.codehaus.jackson.map.introspect.Annotated:
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.Annotated withFallBackAnnotationsFrom(org.codehaus.jackson.map.introspect.Annotated) -> withFallBackAnnotationsFrom
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
org.codehaus.jackson.map.introspect.AnnotatedClass -> org.codehaus.jackson.map.introspect.AnnotatedClass:
    org.codehaus.jackson.map.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.Class _class -> _class
    java.util.List _superTypes -> _superTypes
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    org.codehaus.jackson.map.introspect.AnnotationMap _classAnnotations -> _classAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    java.util.List _constructors -> _constructors
    java.util.List _creatorMethods -> _creatorMethods
    org.codehaus.jackson.map.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    org.codehaus.jackson.map.introspect.AnnotatedClass withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> construct
    org.codehaus.jackson.map.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    java.lang.Class getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    org.codehaus.jackson.map.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    int getMemberMethodCount() -> getMemberMethodCount
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    int getFieldCount() -> getFieldCount
    java.lang.Iterable fields() -> fields
    void resolveClassAnnotations() -> resolveClassAnnotations
    void resolveCreators(boolean) -> resolveCreators
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter) -> resolveMemberMethods
    void resolveFields() -> resolveFields
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter,boolean) -> resolveMemberMethods
    void resolveFields(boolean) -> resolveFields
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class) -> _addClassMixIns
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class,java.lang.Class) -> _addClassMixIns
    void _addConstructorMixIns(java.lang.Class) -> _addConstructorMixIns
    void _addFactoryMixIns(java.lang.Class) -> _addFactoryMixIns
    void _addMemberMethods(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMemberMethods
    void _addMethodMixIns(org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMethodMixIns
    void _addFields(java.util.Map,java.lang.Class) -> _addFields
    void _addFieldMixIns(java.lang.Class,java.util.Map) -> _addFieldMixIns
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method) -> _constructMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean) -> _constructConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method) -> _constructCreatorMethod
    org.codehaus.jackson.map.introspect.AnnotatedField _constructField(java.lang.reflect.Field) -> _constructField
    org.codehaus.jackson.map.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    org.codehaus.jackson.map.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    boolean _isIncludableMethod(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.MethodFilter) -> _isIncludableMethod
    boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
    void _addMixOvers(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean) -> _addMixOvers
    void _addMixOvers(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _addMixOvers
    void _addMixUnders(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> _addMixUnders
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedConstructor -> org.codehaus.jackson.map.introspect.AnnotatedConstructor:
    java.lang.reflect.Constructor _constructor -> _constructor
    org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedField -> org.codehaus.jackson.map.introspect.AnnotatedField:
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String getFullName() -> getFullName
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMember -> org.codehaus.jackson.map.introspect.AnnotatedMember:
    org.codehaus.jackson.map.introspect.AnnotationMap _annotations -> _annotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void fixAccess() -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
org.codehaus.jackson.map.introspect.AnnotatedMethod -> org.codehaus.jackson.map.introspect.AnnotatedMethod:
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramTypes -> _paramTypes
    org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method) -> withMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    int getParameterCount() -> getParameterCount
    java.lang.reflect.Type[] getParameterTypes() -> getParameterTypes
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Class[] getParameterClasses() -> getParameterClasses
    java.lang.String getFullName() -> getFullName
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMethodMap -> org.codehaus.jackson.map.introspect.AnnotatedMethodMap:
    java.util.LinkedHashMap _methods -> _methods
    void add(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> add
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> remove
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(java.lang.reflect.Method) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.introspect.AnnotatedParameter -> org.codehaus.jackson.map.introspect.AnnotatedParameter:
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _owner -> _owner
    java.lang.reflect.Type _type -> _type
    int _index -> _index
    org.codehaus.jackson.map.introspect.AnnotatedParameter withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedWithParams -> org.codehaus.jackson.map.introspect.AnnotatedWithParams:
    org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    org.codehaus.jackson.map.introspect.AnnotatedParameter replaceParameterAnnotations(int,org.codehaus.jackson.map.introspect.AnnotationMap) -> replaceParameterAnnotations
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[]) -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    org.codehaus.jackson.type.JavaType resolveParameterType(int,org.codehaus.jackson.map.type.TypeBindings) -> resolveParameterType
    int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
org.codehaus.jackson.map.introspect.AnnotationMap -> org.codehaus.jackson.map.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap) -> merge
    int size() -> size
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    void _add(java.lang.annotation.Annotation) -> _add
org.codehaus.jackson.map.introspect.BasicBeanDescription -> org.codehaus.jackson.map.introspect.BasicBeanDescription:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.AnnotatedClass _classInfo -> _classInfo
    org.codehaus.jackson.map.type.TypeBindings _bindings -> _bindings
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anySetterMethod -> _anySetterMethod
    java.util.Map _injectables -> _injectables
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    org.codehaus.jackson.map.introspect.AnnotatedMethod _jsonValueMethod -> _jsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anyGetterMethod -> _anyGetterMethod
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forOtherUse(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass) -> forOtherUse
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    java.util.List findProperties() -> findProperties
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isFactoryMethod
    java.util.List findCreatorPropertyNames() -> findCreatorPropertyNames
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.introspect.BasicClassIntrospector -> org.codehaus.jackson.map.introspect.BasicClassIntrospector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter DEFAULT_GETTER_FILTER -> DEFAULT_GETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter DEFAULT_SETTER_FILTER -> DEFAULT_SETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter DEFAULT_SETTER_AND_GETTER_FILTER -> DEFAULT_SETTER_AND_GETTER_FILTER
    org.codehaus.jackson.map.introspect.MethodFilter MINIMAL_FILTER -> MINIMAL_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector instance -> instance
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.introspect.BasicBeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collectProperties(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector constructPropertyCollector(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,boolean) -> constructPropertyCollector
    org.codehaus.jackson.map.introspect.AnnotatedClass classWithCreators(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> classWithCreators
    org.codehaus.jackson.map.introspect.BasicBeanDescription _findCachedDesc(org.codehaus.jackson.type.JavaType) -> _findCachedDesc
    org.codehaus.jackson.map.introspect.MethodFilter getSerializationMethodFilter(org.codehaus.jackson.map.SerializationConfig) -> getSerializationMethodFilter
    org.codehaus.jackson.map.introspect.MethodFilter getDeserializationMethodFilter(org.codehaus.jackson.map.DeserializationConfig) -> getDeserializationMethodFilter
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
org.codehaus.jackson.map.introspect.BasicClassIntrospector$1 -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$1:
org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector -> org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector:
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Class findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    boolean _isIgnorable(org.codehaus.jackson.map.introspect.Annotated) -> _isIgnorable
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> _findTypeResolver
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
org.codehaus.jackson.map.introspect.MemberKey -> org.codehaus.jackson.map.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.introspect.MethodFilter -> org.codehaus.jackson.map.introspect.MethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.NopAnnotationIntrospector -> org.codehaus.jackson.map.introspect.NopAnnotationIntrospector:
    org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance -> instance
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
org.codehaus.jackson.map.introspect.POJOPropertiesCollector -> org.codehaus.jackson.map.introspect.POJOPropertiesCollector:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedClass _classDef -> _classDef
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _jsonValueGetters -> _jsonValueGetters
    java.util.HashSet _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.LinkedHashMap _injectables -> _injectables
    org.codehaus.jackson.map.MapperConfig getConfig() -> getConfig
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassDef() -> getClassDef
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod() -> getAnyGetterMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Map getPropertyMap() -> getPropertyMap
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collect() -> collect
    void _sortProperties() -> _sortProperties
    void _addFields() -> _addFields
    void _addCreators() -> _addCreators
    void _addMethods() -> _addMethods
    void _addInjectables() -> _addInjectables
    void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _doAddInjectable
    void _removeUnwantedProperties() -> _removeUnwantedProperties
    void _addIgnored(java.lang.String) -> _addIgnored
    void _renameProperties() -> _renameProperties
    void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy) -> _renameUsing
    void reportProblem(java.lang.String) -> reportProblem
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String) -> _property
org.codehaus.jackson.map.introspect.POJOPropertyBuilder -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder:
    java.lang.String _name -> _name
    java.lang.String _internalName -> _internalName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields -> _fields
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters -> _ctorParameters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters -> _getters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters -> _setters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String) -> withName
    int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    void addField(org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String,boolean,boolean) -> addField
    void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean) -> addCtor
    void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addGetter
    void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addSetter
    void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> addAll
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> merge
    void removeIgnored() -> removeIgnored
    void removeNonVisible() -> removeNonVisible
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[]) -> _mergeAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _trimByVisibility
    boolean anyExplicitNames() -> anyExplicitNames
    boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyExplicitNames
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyVisible
    boolean anyIgnorals() -> anyIgnorals
    boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyIgnorals
    java.lang.String findNewName() -> findNewName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> findRenamed
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node:
    java.lang.Object value -> value
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next -> next
    java.lang.String explicitName -> explicitName
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object) -> withValue
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> withNext
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored() -> withoutIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible() -> withoutNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> append
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility() -> trimByVisibility
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> access$000
org.codehaus.jackson.map.introspect.VisibilityChecker -> org.codehaus.jackson.map.introspect.VisibilityChecker:
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
org.codehaus.jackson.map.introspect.VisibilityChecker$1 -> org.codehaus.jackson.map.introspect.VisibilityChecker$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonMethod -> $SwitchMap$org$codehaus$jackson$annotate$JsonMethod
org.codehaus.jackson.map.introspect.VisibilityChecker$Std -> org.codehaus.jackson.map.introspect.VisibilityChecker$Std:
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean hasMethod(org.codehaus.jackson.annotate.JsonMethod[],org.codehaus.jackson.annotate.JsonMethod) -> hasMethod
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
org.codehaus.jackson.map.jsontype.NamedType -> org.codehaus.jackson.map.jsontype.NamedType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.map.jsontype.SubtypeResolver -> org.codehaus.jackson.map.jsontype.SubtypeResolver:
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
org.codehaus.jackson.map.jsontype.TypeIdResolver -> org.codehaus.jackson.map.jsontype.TypeIdResolver:
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
org.codehaus.jackson.map.jsontype.TypeResolverBuilder -> org.codehaus.jackson.map.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _locateTypeId
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writePrefix
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> _writePrefix
    void _writeSuffix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writeSuffix
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class) -> _idFrom
org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver -> org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver:
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType -> _idType
    org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    java.lang.Class _defaultImpl -> _defaultImpl
    org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    java.lang.String getTypeProperty() -> getTypeProperty
    org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1 -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id
org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.type.JavaType _defaultImpl -> _defaultImpl
    java.util.HashMap _deserializers -> _deserializers
    org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String) -> _findDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext) -> _findDefaultImplDeserializer
org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase -> org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase:
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    void init(org.codehaus.jackson.type.JavaType) -> init
org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    java.util.HashMap _typeToId -> _typeToId
    java.util.HashMap _idToType -> _idToType
    org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver construct(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> construct
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
org.codehaus.jackson.map.module.SimpleAbstractTypeResolver -> org.codehaus.jackson.map.module.SimpleAbstractTypeResolver:
    java.util.HashMap _mappings -> _mappings
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.module.SimpleDeserializers -> org.codehaus.jackson.map.module.SimpleDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    void addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
org.codehaus.jackson.map.module.SimpleKeyDeserializers -> org.codehaus.jackson.map.module.SimpleKeyDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.module.SimpleModule -> org.codehaus.jackson.map.module.SimpleModule:
    java.lang.String _name -> _name
    org.codehaus.jackson.Version _version -> _version
    org.codehaus.jackson.map.module.SimpleSerializers _serializers -> _serializers
    org.codehaus.jackson.map.module.SimpleDeserializers _deserializers -> _deserializers
    org.codehaus.jackson.map.module.SimpleSerializers _keySerializers -> _keySerializers
    org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    java.util.HashMap _mixins -> _mixins
    void setSerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setSerializers
    void setDeserializers(org.codehaus.jackson.map.module.SimpleDeserializers) -> setDeserializers
    void setKeySerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setKeySerializers
    void setKeyDeserializers(org.codehaus.jackson.map.module.SimpleKeyDeserializers) -> setKeyDeserializers
    void setAbstractTypes(org.codehaus.jackson.map.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    void setValueInstantiators(org.codehaus.jackson.map.module.SimpleValueInstantiators) -> setValueInstantiators
    org.codehaus.jackson.map.module.SimpleModule addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addKeySerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addKeySerializer
    org.codehaus.jackson.map.module.SimpleModule addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.module.SimpleModule addKeyDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addKeyDeserializer
    org.codehaus.jackson.map.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    org.codehaus.jackson.map.module.SimpleModule addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    java.lang.String getModuleName() -> getModuleName
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.map.module.SimpleSerializers -> org.codehaus.jackson.map.module.SimpleSerializers:
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    void addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void _addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> _addSerializer
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.module.SimpleValueInstantiators -> org.codehaus.jackson.map.module.SimpleValueInstantiators:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.ser.AnyGetterWriter -> org.codehaus.jackson.map.ser.AnyGetterWriter:
    java.lang.reflect.Method _anyGetter -> _anyGetter
    org.codehaus.jackson.map.ser.std.MapSerializer _serializer -> _serializer
    void getAndSerialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> getAndSerialize
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.ArraySerializers -> org.codehaus.jackson.map.ser.ArraySerializers:
org.codehaus.jackson.map.ser.BasicSerializerFactory -> org.codehaus.jackson.map.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    java.util.HashMap _arraySerializers -> _arraySerializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer getNullSerializer() -> getNullSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByLookup
    org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByPrimaryType
    org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByAddonType
    org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findSerializerFromAnnotation
    org.codehaus.jackson.map.JsonSerializer buildContainerSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildContainerSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumSetSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    org.codehaus.jackson.map.JsonSerializer buildMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildArraySerializer
    org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIteratorSerializer
    org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIterableSerializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifySecondaryTypesByAnnotation
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findContentSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findContentSerializer
    boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> usesStaticTyping
org.codehaus.jackson.map.ser.BeanPropertyFilter -> org.codehaus.jackson.map.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.BeanPropertyWriter -> org.codehaus.jackson.map.ser.BeanPropertyWriter:
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.type.JavaType _declaredType -> _declaredType
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    java.util.HashMap _internalSettings -> _internalSettings
    org.codehaus.jackson.io.SerializedString _name -> _name
    org.codehaus.jackson.type.JavaType _cfgSerializationType -> _cfgSerializationType
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.type.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter unwrappingWriter() -> unwrappingWriter
    void setViews(java.lang.Class[]) -> setViews
    void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType) -> setNonTrivialBaseType
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    org.codehaus.jackson.io.SerializedString getSerializedName() -> getSerializedName
    boolean hasSerializer() -> hasSerializer
    org.codehaus.jackson.map.JsonSerializer getSerializer() -> getSerializer
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
    java.lang.Class getRawSerializationType() -> getRawSerializationType
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    void _reportSelfReference(java.lang.Object) -> _reportSelfReference
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializer -> org.codehaus.jackson.map.ser.BeanSerializer:
    org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class) -> createDummy
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializerBuilder -> org.codehaus.jackson.map.ser.BeanSerializerBuilder:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    org.codehaus.jackson.map.introspect.BasicBeanDescription getBeanDescription() -> getBeanDescription
    java.util.List getProperties() -> getProperties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    boolean hasProperties() -> hasProperties
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(org.codehaus.jackson.map.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(org.codehaus.jackson.map.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    org.codehaus.jackson.map.JsonSerializer build() -> build
    org.codehaus.jackson.map.ser.BeanSerializer createDummy() -> createDummy
org.codehaus.jackson.map.ser.BeanSerializerFactory -> org.codehaus.jackson.map.ser.BeanSerializerFactory:
    org.codehaus.jackson.map.ser.BeanSerializerFactory instance -> instance
    org.codehaus.jackson.map.SerializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeSerializer
    org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> constructBeanSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructPropertyBuilder
    org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanSerializerBuilder
    java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findFilterId
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findBeanProperties
    java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> filterBeanProperties
    java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> sortBeanProperties
    void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeSetterlessGetters
    org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _constructWriter
org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl -> org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl:
    org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.Serializers[] _additionalSerializers -> _additionalSerializers
    org.codehaus.jackson.map.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.ser.BeanSerializerModifier -> org.codehaus.jackson.map.ser.BeanSerializerModifier:
    java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> orderProperties
    org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer) -> modifySerializer
org.codehaus.jackson.map.ser.ContainerSerializers -> org.codehaus.jackson.map.ser.ContainerSerializers:
org.codehaus.jackson.map.ser.CustomSerializerFactory -> org.codehaus.jackson.map.ser.CustomSerializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride -> _enumSerializerOverride
    java.util.HashMap _transitiveClassMappings -> _transitiveClassMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    void addGenericMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addGenericMapping
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSpecificMapping
    void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer) -> setEnumSerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> findCustomSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.ser.EnumSerializer -> org.codehaus.jackson.map.ser.EnumSerializer:
org.codehaus.jackson.map.ser.FilterProvider -> org.codehaus.jackson.map.ser.FilterProvider:
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructViewBased(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.JdkSerializers -> org.codehaus.jackson.map.ser.JdkSerializers:
org.codehaus.jackson.map.ser.MapSerializer -> org.codehaus.jackson.map.ser.MapSerializer:
org.codehaus.jackson.map.ser.PropertyBuilder -> org.codehaus.jackson.map.ser.PropertyBuilder:
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _outputProps -> _outputProps
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.ser.BeanPropertyWriter buildWriter(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.introspect.AnnotatedMember,boolean) -> buildWriter
    org.codehaus.jackson.type.JavaType findSerializationType(org.codehaus.jackson.map.introspect.Annotated,boolean,org.codehaus.jackson.type.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getDefaultValue(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field) -> getDefaultValue
    java.lang.Object getContainerValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getContainerValueChecker
    java.lang.Object getEmptyValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getEmptyValueChecker
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
org.codehaus.jackson.map.ser.PropertyBuilder$1 -> org.codehaus.jackson.map.ser.PropertyBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion -> $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.ScalarSerializerBase -> org.codehaus.jackson.map.ser.ScalarSerializerBase:
org.codehaus.jackson.map.ser.SerializerBase -> org.codehaus.jackson.map.ser.SerializerBase:
org.codehaus.jackson.map.ser.StdKeySerializer -> org.codehaus.jackson.map.ser.StdKeySerializer:
    org.codehaus.jackson.map.ser.StdKeySerializer instace -> instace
org.codehaus.jackson.map.ser.StdSerializerProvider -> org.codehaus.jackson.map.ser.StdSerializerProvider:
    boolean CACHE_UNKNOWN_MAPPINGS -> CACHE_UNKNOWN_MAPPINGS
    org.codehaus.jackson.map.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.ser.impl.SerializerCache _serializerCache -> _serializerCache
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    org.codehaus.jackson.map.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> createInstance
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _serializeValue
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType) -> _serializeValue
    void _reportIncompatibleRootType(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _reportIncompatibleRootType
    org.codehaus.jackson.map.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _findExplicitUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _handleContextualResolvable(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty) -> _handleContextualResolvable
org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer -> org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer:
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.ser.StdSerializers -> org.codehaus.jackson.map.ser.StdSerializers:
org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer -> org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer:
    boolean _forPrimitive -> _forPrimitive
    void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer -> org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer:
org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer -> org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer instance -> instance
    void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer -> org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer instance -> instance
    void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer:
    void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$LongSerializer -> org.codehaus.jackson.map.ser.StdSerializers$LongSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$LongSerializer instance -> instance
    void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer -> org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer:
    void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer:
    void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$StringSerializer -> org.codehaus.jackson.map.ser.StdSerializers$StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer:
org.codehaus.jackson.map.ser.ToStringSerializer -> org.codehaus.jackson.map.ser.ToStringSerializer:
    org.codehaus.jackson.map.ser.ToStringSerializer instance -> instance
org.codehaus.jackson.map.ser.impl.FailingSerializer -> org.codehaus.jackson.map.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.impl.JsonSerializerMap -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int findSize(int) -> findSize
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer find(org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey) -> find
org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket:
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey key -> key
    org.codehaus.jackson.map.JsonSerializer value -> value
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket next -> next
org.codehaus.jackson.map.ser.impl.PropertySerializerMap -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap:
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap() -> emptyMap
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    org.codehaus.jackson.map.JsonSerializer _serializer1 -> _serializer1
    org.codehaus.jackson.map.JsonSerializer _serializer2 -> _serializer2
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty:
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty instance -> instance
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap map -> map
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap -> org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap _map -> _map
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey _cacheKey -> _cacheKey
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance() -> instance
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
org.codehaus.jackson.map.ser.impl.SerializerCache -> org.codehaus.jackson.map.ser.impl.SerializerCache:
    java.util.HashMap _sharedMap -> _sharedMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap -> _readOnlyMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void flush() -> flush
org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey -> org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    org.codehaus.jackson.type.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    int hash(java.lang.Class,boolean) -> hash
    int hash(org.codehaus.jackson.type.JavaType,boolean) -> hash
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(org.codehaus.jackson.type.JavaType) -> resetTyped
    void resetUntyped(org.codehaus.jackson.type.JavaType) -> resetUntyped
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter:
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter:
    java.util.Set _propertiesToInclude -> _propertiesToInclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter:
    java.util.Set _propertiesToExclude -> _propertiesToExclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleFilterProvider -> org.codehaus.jackson.map.ser.impl.SimpleFilterProvider:
    java.util.Map _filtersById -> _filtersById
    org.codehaus.jackson.map.ser.BeanPropertyFilter _defaultFilter -> _defaultFilter
    boolean _cfgFailOnUnknownId -> _cfgFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter) -> setDefaultFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter getDefaultFilter() -> getDefaultFilter
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    boolean willFailOnUnknownId() -> willFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider addFilter(java.lang.String,org.codehaus.jackson.map.ser.BeanPropertyFilter) -> addFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter removeFilter(java.lang.String) -> removeFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.impl.UnknownSerializer -> org.codehaus.jackson.map.ser.impl.UnknownSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void failForEmpty(java.lang.Object) -> failForEmpty
org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.AsArraySerializerBase -> org.codehaus.jackson.map.ser.std.AsArraySerializerBase:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.std.BeanSerializerBase -> org.codehaus.jackson.map.ser.std.BeanSerializerBase:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _props -> _props
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFieldsFiltered
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(org.codehaus.jackson.map.SerializerProvider) -> findFilter
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.std.CalendarSerializer -> org.codehaus.jackson.map.ser.std.CalendarSerializer:
    org.codehaus.jackson.map.ser.std.CalendarSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.CollectionSerializer -> org.codehaus.jackson.map.ser.std.CollectionSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.ContainerSerializerBase -> org.codehaus.jackson.map.ser.std.ContainerSerializerBase:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
org.codehaus.jackson.map.ser.std.DateSerializer -> org.codehaus.jackson.map.ser.std.DateSerializer:
    org.codehaus.jackson.map.ser.std.DateSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumMapSerializer -> org.codehaus.jackson.map.ser.std.EnumMapSerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.map.util.EnumValues _keyEnums -> _keyEnums
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serialize(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.EnumSerializer -> org.codehaus.jackson.map.ser.std.EnumSerializer:
    org.codehaus.jackson.map.util.EnumValues _values -> _values
    org.codehaus.jackson.map.ser.std.EnumSerializer construct(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> construct
    void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.map.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumSetSerializer -> org.codehaus.jackson.map.ser.std.EnumSetSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.EnumSet,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.IndexedStringListSerializer -> org.codehaus.jackson.map.ser.std.IndexedStringListSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.InetAddressSerializer -> org.codehaus.jackson.map.ser.std.InetAddressSerializer:
    org.codehaus.jackson.map.ser.std.InetAddressSerializer instance -> instance
    void serialize(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.IterableSerializer -> org.codehaus.jackson.map.ser.std.IterableSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.JsonValueSerializer -> org.codehaus.jackson.map.ser.std.JsonValueSerializer:
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    boolean isNaturalTypeWithStdHandling(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> isNaturalTypeWithStdHandling
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.MapSerializer -> org.codehaus.jackson.map.ser.std.MapSerializer:
    org.codehaus.jackson.type.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.util.HashSet _ignoredEntries -> _ignoredEntries
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> construct
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer) -> construct
    java.util.HashSet toSet(java.lang.String[]) -> toSet
    void serialize(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeFieldsUsing
    void serializeTypedFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedFields
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase -> org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NullSerializer -> org.codehaus.jackson.map.ser.std.NullSerializer:
    org.codehaus.jackson.map.ser.std.NullSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ObjectArraySerializer -> org.codehaus.jackson.map.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.RawSerializer -> org.codehaus.jackson.map.ser.std.RawSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ScalarSerializerBase -> org.codehaus.jackson.map.ser.std.ScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.SerializableSerializer -> org.codehaus.jackson.map.ser.std.SerializableSerializer:
    org.codehaus.jackson.map.ser.std.SerializableSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer:
    org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializerBase -> org.codehaus.jackson.map.ser.std.SerializerBase:
    java.lang.Class _handledType -> _handledType
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer) -> isDefaultSerializer
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.ser.std.StaticListSerializerBase -> org.codehaus.jackson.map.ser.std.StaticListSerializerBase:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
org.codehaus.jackson.map.ser.std.StdArraySerializers -> org.codehaus.jackson.map.ser.std.StdArraySerializers:
org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase:
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer:
    void serialize(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer:
    void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[]) -> _writeArrayContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer:
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsSlow
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers -> org.codehaus.jackson.map.ser.std.StdContainerSerializers:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> indexedListSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> collectionSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iteratorSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iterableSerializer
    org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> enumSetSerializer
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Iterator,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdJdkSerializers -> org.codehaus.jackson.map.ser.std.StdJdkSerializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer:
    void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer:
    void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer:
    void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializer:
    org.codehaus.jackson.map.ser.std.StdKeySerializer instace -> instace
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.StdKeySerializers -> org.codehaus.jackson.map.ser.std.StdKeySerializers:
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer getStdKeySerializer(org.codehaus.jackson.type.JavaType) -> getStdKeySerializer
org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StringCollectionSerializer -> org.codehaus.jackson.map.ser.std.StringCollectionSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StringSerializer -> org.codehaus.jackson.map.ser.std.StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.TimeZoneSerializer -> org.codehaus.jackson.map.ser.std.TimeZoneSerializer:
    org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance -> instance
    void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.ToStringSerializer -> org.codehaus.jackson.map.ser.std.ToStringSerializer:
    org.codehaus.jackson.map.ser.std.ToStringSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.TokenBufferSerializer -> org.codehaus.jackson.map.ser.std.TokenBufferSerializer:
    void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.type.ArrayType -> org.codehaus.jackson.map.type.ArrayType:
    org.codehaus.jackson.type.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object) -> construct
    org.codehaus.jackson.map.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isContainerType() -> isContainerType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.ClassKey -> org.codehaus.jackson.map.type.ClassKey:
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    void reset(java.lang.Class) -> reset
    int compareTo(org.codehaus.jackson.map.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.type.CollectionLikeType -> org.codehaus.jackson.map.type.CollectionLikeType:
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.CollectionType -> org.codehaus.jackson.map.type.CollectionType:
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.HierarchicType -> org.codehaus.jackson.map.type.HierarchicType:
    java.lang.reflect.Type _actualType -> _actualType
    java.lang.Class _rawClass -> _rawClass
    java.lang.reflect.ParameterizedType _genericType -> _genericType
    org.codehaus.jackson.map.type.HierarchicType _superType -> _superType
    org.codehaus.jackson.map.type.HierarchicType _subType -> _subType
    org.codehaus.jackson.map.type.HierarchicType deepCloneWithoutSubtype() -> deepCloneWithoutSubtype
    void setSuperType(org.codehaus.jackson.map.type.HierarchicType) -> setSuperType
    org.codehaus.jackson.map.type.HierarchicType getSuperType() -> getSuperType
    void setSubType(org.codehaus.jackson.map.type.HierarchicType) -> setSubType
    org.codehaus.jackson.map.type.HierarchicType getSubType() -> getSubType
    boolean isGeneric() -> isGeneric
    java.lang.reflect.ParameterizedType asGeneric() -> asGeneric
    java.lang.Class getRawClass() -> getRawClass
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.MapLikeType -> org.codehaus.jackson.map.type.MapLikeType:
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.type.MapLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.MapType -> org.codehaus.jackson.map.type.MapType:
    org.codehaus.jackson.map.type.MapType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.SimpleType -> org.codehaus.jackson.map.type.SimpleType:
    org.codehaus.jackson.type.JavaType[] _typeParameters -> _typeParameters
    java.lang.String[] _typeNames -> _typeNames
    org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.SimpleType construct(java.lang.Class) -> construct
    org.codehaus.jackson.map.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.TypeBase -> org.codehaus.jackson.map.type.TypeBase:
    java.lang.String _canonicalName -> _canonicalName
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
org.codehaus.jackson.map.type.TypeBindings -> org.codehaus.jackson.map.type.TypeBindings:
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.type.JavaType UNBOUND -> UNBOUND
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _contextType -> _contextType
    java.lang.Class _contextClass -> _contextClass
    java.util.Map _bindings -> _bindings
    java.util.HashSet _placeholders -> _placeholders
    org.codehaus.jackson.map.type.TypeBindings _parentBindings -> _parentBindings
    org.codehaus.jackson.map.type.TypeBindings childInstance() -> childInstance
    org.codehaus.jackson.type.JavaType resolveType(java.lang.Class) -> resolveType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    int getBindingCount() -> getBindingCount
    org.codehaus.jackson.type.JavaType findType(java.lang.String) -> findType
    void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType) -> addBinding
    org.codehaus.jackson.type.JavaType[] typesAsArray() -> typesAsArray
    void _resolve() -> _resolve
    void _addPlaceholder(java.lang.String) -> _addPlaceholder
    void _resolveBindings(java.lang.reflect.Type) -> _resolveBindings
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.TypeFactory -> org.codehaus.jackson.map.type.TypeFactory:
    org.codehaus.jackson.map.type.TypeFactory instance -> instance
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.map.type.TypeModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.type.TypeParser _parser -> _parser
    org.codehaus.jackson.map.type.HierarchicType _cachedHashMapType -> _cachedHashMapType
    org.codehaus.jackson.map.type.HierarchicType _cachedArrayListType -> _cachedArrayListType
    org.codehaus.jackson.map.type.TypeFactory withModifier(org.codehaus.jackson.map.type.TypeModifier) -> withModifier
    org.codehaus.jackson.map.type.TypeFactory defaultInstance() -> defaultInstance
    org.codehaus.jackson.type.JavaType unknownType() -> unknownType
    java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,java.lang.Class) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> type
    org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference) -> type
    org.codehaus.jackson.type.JavaType arrayType(java.lang.Class) -> arrayType
    org.codehaus.jackson.type.JavaType arrayType(org.codehaus.jackson.type.JavaType) -> arrayType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,java.lang.Class) -> collectionType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> collectionType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,java.lang.Class,java.lang.Class) -> mapType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> mapType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,java.lang.Class[]) -> parametricType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> parametricType
    org.codehaus.jackson.type.JavaType fromCanonical(java.lang.String) -> fromCanonical
    org.codehaus.jackson.type.JavaType specialize(org.codehaus.jackson.type.JavaType,java.lang.Class) -> specialize
    org.codehaus.jackson.type.JavaType fastSimpleType(java.lang.Class) -> fastSimpleType
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType fromClass(java.lang.Class) -> fromClass
    org.codehaus.jackson.type.JavaType fromTypeReference(org.codehaus.jackson.type.TypeReference) -> fromTypeReference
    org.codehaus.jackson.type.JavaType fromType(java.lang.reflect.Type) -> fromType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.type.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    org.codehaus.jackson.type.JavaType[] findTypeParameters(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findTypeParameters
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> constructType
    org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> _constructType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(org.codehaus.jackson.type.JavaType) -> constructArrayType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapLikeType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    org.codehaus.jackson.type.JavaType constructSimpleType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructSimpleType
    org.codehaus.jackson.type.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructParametricType
    org.codehaus.jackson.map.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    org.codehaus.jackson.map.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> _fromClass
    org.codehaus.jackson.type.JavaType _fromParameterizedClass(java.lang.Class,java.util.List) -> _fromParameterizedClass
    org.codehaus.jackson.type.JavaType _fromParamType(java.lang.reflect.ParameterizedType,org.codehaus.jackson.map.type.TypeBindings) -> _fromParamType
    org.codehaus.jackson.type.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,org.codehaus.jackson.map.type.TypeBindings) -> _fromArrayType
    org.codehaus.jackson.type.JavaType _fromVariable(java.lang.reflect.TypeVariable,org.codehaus.jackson.map.type.TypeBindings) -> _fromVariable
    org.codehaus.jackson.type.JavaType _fromWildcard(java.lang.reflect.WildcardType,org.codehaus.jackson.map.type.TypeBindings) -> _fromWildcard
    org.codehaus.jackson.type.JavaType _mapType(java.lang.Class) -> _mapType
    org.codehaus.jackson.type.JavaType _collectionType(java.lang.Class) -> _collectionType
    org.codehaus.jackson.type.JavaType _resolveVariableViaSubTypes(org.codehaus.jackson.map.type.HierarchicType,java.lang.String,org.codehaus.jackson.map.type.TypeBindings) -> _resolveVariableViaSubTypes
    org.codehaus.jackson.type.JavaType _unknownType() -> _unknownType
    org.codehaus.jackson.map.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class) -> _findSuperTypeChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperClassChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _doFindSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType,java.lang.Class) -> _doFindSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _hashMapSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _hashMapSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _arrayListSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _arrayListSuperInterfaceChain
org.codehaus.jackson.map.type.TypeModifier -> org.codehaus.jackson.map.type.TypeModifier:
    org.codehaus.jackson.type.JavaType modifyType(org.codehaus.jackson.type.JavaType,java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.type.TypeFactory) -> modifyType
org.codehaus.jackson.map.type.TypeParser -> org.codehaus.jackson.map.type.TypeParser:
    org.codehaus.jackson.map.type.TypeFactory _factory -> _factory
    org.codehaus.jackson.type.JavaType parse(java.lang.String) -> parse
    org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(org.codehaus.jackson.map.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
org.codehaus.jackson.map.type.TypeParser$MyTokenizer -> org.codehaus.jackson.map.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> pushBack
    java.lang.String getAllInput() -> getAllInput
    java.lang.String getUsedInput() -> getUsedInput
    java.lang.String getRemainingInput() -> getRemainingInput
org.codehaus.jackson.map.util.Annotations -> org.codehaus.jackson.map.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    int size() -> size
org.codehaus.jackson.map.util.ArrayBuilders -> org.codehaus.jackson.map.util.ArrayBuilders:
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.util.List addToList(java.util.List,java.lang.Object) -> addToList
    java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object) -> insertInList
    java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
    java.util.Iterator arrayAsIterator(java.lang.Object[]) -> arrayAsIterator
    java.lang.Iterable arrayAsIterable(java.lang.Object[]) -> arrayAsIterable
org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator -> org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator:
    java.lang.Object[] _array -> _array
    int _index -> _index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder:
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder:
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder:
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder:
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder:
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder:
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder:
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.BeanUtil -> org.codehaus.jackson.map.util.BeanUtil:
    java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForGetter
    java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForIsGetter
    java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForSetter
    boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassSetter
    boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String manglePropertyName(java.lang.String) -> manglePropertyName
org.codehaus.jackson.map.util.ClassUtil -> org.codehaus.jackson.map.util.ClassUtil:
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class) -> isLocalType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    void throwRootCause(java.lang.Throwable) -> throwRootCause
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator -> org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator:
    org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
org.codehaus.jackson.map.util.Comparators -> org.codehaus.jackson.map.util.Comparators:
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
org.codehaus.jackson.map.util.Comparators$1 -> org.codehaus.jackson.map.util.Comparators$1:
    java.lang.Object val$defaultValue -> val$defaultValue
    int val$length -> val$length
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.util.EnumResolver -> org.codehaus.jackson.map.util.EnumResolver:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFor
    org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class) -> constructUsingToString
    org.codehaus.jackson.map.util.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructUnsafe
    org.codehaus.jackson.map.util.EnumResolver constructUnsafeUsingToString(java.lang.Class) -> constructUnsafeUsingToString
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
org.codehaus.jackson.map.util.EnumValues -> org.codehaus.jackson.map.util.EnumValues:
    java.util.EnumMap _values -> _values
    org.codehaus.jackson.map.util.EnumValues construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> construct
    org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromName
    org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromToString
    java.lang.String valueFor(java.lang.Enum) -> valueFor
    org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum) -> serializedValueFor
    java.util.Collection values() -> values
org.codehaus.jackson.map.util.ISO8601DateFormat -> org.codehaus.jackson.map.util.ISO8601DateFormat:
    long serialVersionUID -> serialVersionUID
    java.util.Calendar CALENDAR -> CALENDAR
    java.text.NumberFormat NUMBER_FORMAT -> NUMBER_FORMAT
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Object clone() -> clone
org.codehaus.jackson.map.util.ISO8601Utils -> org.codehaus.jackson.map.util.ISO8601Utils:
    java.lang.String GMT_ID -> GMT_ID
    java.util.TimeZone TIMEZONE_GMT -> TIMEZONE_GMT
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Date,boolean) -> format
    java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    java.util.Date parse(java.lang.String) -> parse
    void checkOffset(java.lang.String,int,char) -> checkOffset
    int parseInt(java.lang.String,int,int) -> parseInt
    void padInt(java.lang.StringBuilder,int,int) -> padInt
org.codehaus.jackson.map.util.JSONPObject -> org.codehaus.jackson.map.util.JSONPObject:
    java.lang.String _function -> _function
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getFunction() -> getFunction
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.JSONWrappedObject -> org.codehaus.jackson.map.util.JSONWrappedObject:
    java.lang.String _prefix -> _prefix
    java.lang.String _suffix -> _suffix
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.LRUMap -> org.codehaus.jackson.map.util.LRUMap:
    int _maxEntries -> _maxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.codehaus.jackson.map.util.LinkedNode -> org.codehaus.jackson.map.util.LinkedNode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.map.util.LinkedNode _next -> _next
    org.codehaus.jackson.map.util.LinkedNode next() -> next
    java.lang.Object value() -> value
    boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object) -> contains
org.codehaus.jackson.map.util.Named -> org.codehaus.jackson.map.util.Named:
    java.lang.String getName() -> getName
org.codehaus.jackson.map.util.ObjectBuffer -> org.codehaus.jackson.map.util.ObjectBuffer:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object[] _freeBuffer -> _freeBuffer
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    int bufferedSize() -> bufferedSize
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
org.codehaus.jackson.map.util.ObjectBuffer$Node -> org.codehaus.jackson.map.util.ObjectBuffer$Node:
    java.lang.Object[] _data -> _data
    org.codehaus.jackson.map.util.ObjectBuffer$Node _next -> _next
    java.lang.Object[] getData() -> getData
    org.codehaus.jackson.map.util.ObjectBuffer$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.ObjectBuffer$Node) -> linkNext
org.codehaus.jackson.map.util.PrimitiveArrayBuilder -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    java.lang.Object _freeBuffer -> _freeBuffer
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next -> _next
    java.lang.Object getData() -> getData
    int copyData(java.lang.Object,int) -> copyData
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node) -> linkNext
org.codehaus.jackson.map.util.Provider -> org.codehaus.jackson.map.util.Provider:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.util.RootNameLookup -> org.codehaus.jackson.map.util.RootNameLookup:
    org.codehaus.jackson.map.util.LRUMap _rootNames -> _rootNames
    org.codehaus.jackson.io.SerializedString findRootName(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.MapperConfig) -> findRootName
    org.codehaus.jackson.io.SerializedString findRootName(java.lang.Class,org.codehaus.jackson.map.MapperConfig) -> findRootName
org.codehaus.jackson.map.util.StdDateFormat -> org.codehaus.jackson.map.util.StdDateFormat:
    java.lang.String DATE_FORMAT_STR_ISO8601 -> DATE_FORMAT_STR_ISO8601
    java.lang.String DATE_FORMAT_STR_ISO8601_Z -> DATE_FORMAT_STR_ISO8601_Z
    java.lang.String DATE_FORMAT_STR_PLAIN -> DATE_FORMAT_STR_PLAIN
    java.lang.String DATE_FORMAT_STR_RFC1123 -> DATE_FORMAT_STR_RFC1123
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.DateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    java.text.DateFormat DATE_FORMAT_ISO8601_Z -> DATE_FORMAT_ISO8601_Z
    java.text.DateFormat DATE_FORMAT_PLAIN -> DATE_FORMAT_PLAIN
    org.codehaus.jackson.map.util.StdDateFormat instance -> instance
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    java.text.DateFormat _formatISO8601 -> _formatISO8601
    java.text.DateFormat _formatISO8601_z -> _formatISO8601_z
    java.text.DateFormat _formatPlain -> _formatPlain
    org.codehaus.jackson.map.util.StdDateFormat clone() -> clone
    java.text.DateFormat getBlueprintISO8601Format() -> getBlueprintISO8601Format
    java.text.DateFormat getISO8601Format(java.util.TimeZone) -> getISO8601Format
    java.text.DateFormat getBlueprintRFC1123Format() -> getBlueprintRFC1123Format
    java.text.DateFormat getRFC1123Format(java.util.TimeZone) -> getRFC1123Format
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    boolean hasTimeZone(java.lang.String) -> hasTimeZone
    java.lang.Object clone() -> clone
org.codehaus.jackson.node.ArrayNode -> org.codehaus.jackson.node.ArrayNode:
    java.util.ArrayList _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isArray() -> isArray
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonNode set(int,org.codehaus.jackson.JsonNode) -> set
    void add(org.codehaus.jackson.JsonNode) -> add
    org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode) -> addAll
    org.codehaus.jackson.JsonNode addAll(java.util.Collection) -> addAll
    void insert(int,org.codehaus.jackson.JsonNode) -> insert
    org.codehaus.jackson.JsonNode remove(int) -> remove
    org.codehaus.jackson.node.ArrayNode removeAll() -> removeAll
    org.codehaus.jackson.node.ArrayNode addArray() -> addArray
    org.codehaus.jackson.node.ObjectNode addObject() -> addObject
    void addPOJO(java.lang.Object) -> addPOJO
    void addNull() -> addNull
    void add(int) -> add
    void add(java.lang.Integer) -> add
    void add(long) -> add
    void add(java.lang.Long) -> add
    void add(float) -> add
    void add(java.lang.Float) -> add
    void add(double) -> add
    void add(java.lang.Double) -> add
    void add(java.math.BigDecimal) -> add
    void add(java.lang.String) -> add
    void add(boolean) -> add
    void add(java.lang.Boolean) -> add
    void add(byte[]) -> add
    org.codehaus.jackson.node.ArrayNode insertArray(int) -> insertArray
    org.codehaus.jackson.node.ObjectNode insertObject(int) -> insertObject
    void insertPOJO(int,java.lang.Object) -> insertPOJO
    void insertNull(int) -> insertNull
    void insert(int,int) -> insert
    void insert(int,java.lang.Integer) -> insert
    void insert(int,long) -> insert
    void insert(int,java.lang.Long) -> insert
    void insert(int,float) -> insert
    void insert(int,java.lang.Float) -> insert
    void insert(int,double) -> insert
    void insert(int,java.lang.Double) -> insert
    void insert(int,java.math.BigDecimal) -> insert
    void insert(int,java.lang.String) -> insert
    void insert(int,boolean) -> insert
    void insert(int,java.lang.Boolean) -> insert
    void insert(int,byte[]) -> insert
    void addContentsTo(java.util.List) -> addContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _set(int,org.codehaus.jackson.JsonNode) -> _set
    void _add(org.codehaus.jackson.JsonNode) -> _add
    void _insert(int,org.codehaus.jackson.JsonNode) -> _insert
    boolean _sameChildren(java.util.ArrayList) -> _sameChildren
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BaseJsonNode -> org.codehaus.jackson.node.BaseJsonNode:
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonParser traverse() -> traverse
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BigIntegerNode -> org.codehaus.jackson.node.BigIntegerNode:
    java.math.BigInteger _value -> _value
    org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isBigInteger() -> isBigInteger
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.BinaryNode -> org.codehaus.jackson.node.BinaryNode:
    org.codehaus.jackson.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    org.codehaus.jackson.node.BinaryNode valueOf(byte[]) -> valueOf
    org.codehaus.jackson.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBinary() -> isBinary
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.BooleanNode -> org.codehaus.jackson.node.BooleanNode:
    org.codehaus.jackson.node.BooleanNode TRUE -> TRUE
    org.codehaus.jackson.node.BooleanNode FALSE -> FALSE
    org.codehaus.jackson.node.BooleanNode getTrue() -> getTrue
    org.codehaus.jackson.node.BooleanNode getFalse() -> getFalse
    org.codehaus.jackson.node.BooleanNode valueOf(boolean) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBoolean() -> isBoolean
    boolean getBooleanValue() -> getBooleanValue
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.ContainerNode -> org.codehaus.jackson.node.ContainerNode:
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean isContainerNode() -> isContainerNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String getValueAsText() -> getValueAsText
    java.lang.String asText() -> asText
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    int size() -> size
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ContainerNode$NoNodesIterator -> org.codehaus.jackson.node.ContainerNode$NoNodesIterator:
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance() -> instance
    boolean hasNext() -> hasNext
    org.codehaus.jackson.JsonNode next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.ContainerNode$NoStringsIterator -> org.codehaus.jackson.node.ContainerNode$NoStringsIterator:
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance() -> instance
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.DecimalNode -> org.codehaus.jackson.node.DecimalNode:
    java.math.BigDecimal _value -> _value
    org.codehaus.jackson.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isBigDecimal() -> isBigDecimal
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.DoubleNode -> org.codehaus.jackson.node.DoubleNode:
    double _value -> _value
    org.codehaus.jackson.node.DoubleNode valueOf(double) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isDouble() -> isDouble
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.IntNode -> org.codehaus.jackson.node.IntNode:
    int MIN_CANONICAL -> MIN_CANONICAL
    int MAX_CANONICAL -> MAX_CANONICAL
    org.codehaus.jackson.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    org.codehaus.jackson.node.IntNode valueOf(int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isInt() -> isInt
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.JsonNodeFactory -> org.codehaus.jackson.node.JsonNodeFactory:
    org.codehaus.jackson.node.JsonNodeFactory instance -> instance
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigInteger) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
org.codehaus.jackson.node.LongNode -> org.codehaus.jackson.node.LongNode:
    long _value -> _value
    org.codehaus.jackson.node.LongNode valueOf(long) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isLong() -> isLong
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.MissingNode -> org.codehaus.jackson.node.MissingNode:
    org.codehaus.jackson.node.MissingNode instance -> instance
    org.codehaus.jackson.node.MissingNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isMissingNode() -> isMissingNode
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.codehaus.jackson.node.NodeCursor -> org.codehaus.jackson.node.NodeCursor:
    org.codehaus.jackson.node.NodeCursor _parent -> _parent
    org.codehaus.jackson.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.node.NodeCursor iterateChildren() -> iterateChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Array -> org.codehaus.jackson.node.NodeCursor$Array:
    java.util.Iterator _contents -> _contents
    org.codehaus.jackson.JsonNode _currentNode -> _currentNode
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Object -> org.codehaus.jackson.node.NodeCursor$Object:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$RootValue -> org.codehaus.jackson.node.NodeCursor$RootValue:
    org.codehaus.jackson.JsonNode _node -> _node
    boolean _done -> _done
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NullNode -> org.codehaus.jackson.node.NullNode:
    org.codehaus.jackson.node.NullNode instance -> instance
    org.codehaus.jackson.node.NullNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isNull() -> isNull
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.NumericNode -> org.codehaus.jackson.node.NumericNode:
    boolean isNumber() -> isNumber
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
org.codehaus.jackson.node.ObjectNode -> org.codehaus.jackson.node.ObjectNode:
    java.util.LinkedHashMap _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isObject() -> isObject
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.util.Iterator getFieldNames() -> getFieldNames
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.node.ObjectNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode) -> put
    org.codehaus.jackson.JsonNode remove(java.lang.String) -> remove
    org.codehaus.jackson.node.ObjectNode remove(java.util.Collection) -> remove
    org.codehaus.jackson.node.ObjectNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode putAll(java.util.Map) -> putAll
    org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode) -> putAll
    org.codehaus.jackson.node.ObjectNode retain(java.util.Collection) -> retain
    org.codehaus.jackson.node.ObjectNode retain(java.lang.String[]) -> retain
    org.codehaus.jackson.node.ArrayNode putArray(java.lang.String) -> putArray
    org.codehaus.jackson.node.ObjectNode putObject(java.lang.String) -> putObject
    void putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    void putNull(java.lang.String) -> putNull
    void put(java.lang.String,int) -> put
    void put(java.lang.String,java.lang.Integer) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,java.lang.Long) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,java.lang.Float) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,java.lang.Double) -> put
    void put(java.lang.String,java.math.BigDecimal) -> put
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Boolean) -> put
    void put(java.lang.String,byte[]) -> put
    void putContentsTo(java.util.Map) -> putContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _put(java.lang.String,org.codehaus.jackson.JsonNode) -> _put
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ObjectNode$NoFieldsIterator -> org.codehaus.jackson.node.ObjectNode$NoFieldsIterator:
    org.codehaus.jackson.node.ObjectNode$NoFieldsIterator instance -> instance
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.POJONode -> org.codehaus.jackson.node.POJONode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isPojo() -> isPojo
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.TextNode -> org.codehaus.jackson.node.TextNode:
    int INT_SPACE -> INT_SPACE
    org.codehaus.jackson.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    org.codehaus.jackson.node.TextNode valueOf(java.lang.String) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isTextual() -> isTextual
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int) -> _reportInvalidBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
org.codehaus.jackson.node.TreeTraversingParser -> org.codehaus.jackson.node.TreeTraversingParser:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.node.NodeCursor _nodeCursor -> _nodeCursor
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    int getIntValue() -> getIntValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    org.codehaus.jackson.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.node.TreeTraversingParser$1 -> org.codehaus.jackson.node.TreeTraversingParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.node.ValueNode -> org.codehaus.jackson.node.ValueNode:
    boolean isValueNode() -> isValueNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    java.lang.String toString() -> toString
org.codehaus.jackson.schema.JsonSchema -> org.codehaus.jackson.schema.JsonSchema:
    org.codehaus.jackson.node.ObjectNode schema -> schema
    org.codehaus.jackson.node.ObjectNode getSchemaNode() -> getSchemaNode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
org.codehaus.jackson.schema.JsonSerializableSchema -> org.codehaus.jackson.schema.JsonSerializableSchema:
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
org.codehaus.jackson.schema.SchemaAware -> org.codehaus.jackson.schema.SchemaAware:
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.sym.BytesToNameCanonicalizer -> org.codehaus.jackson.sym.BytesToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    int MIN_HASH_SIZE -> MIN_HASH_SIZE
    int INITIAL_COLLISION_LEN -> INITIAL_COLLISION_LEN
    int LAST_VALID_BUCKET -> LAST_VALID_BUCKET
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    int _count -> _count
    int _mainHashMask -> _mainHashMask
    int[] _mainHash -> _mainHash
    org.codehaus.jackson.sym.Name[] _mainNames -> _mainNames
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList -> _collList
    int _collCount -> _collCount
    int _collEnd -> _collEnd
    boolean _needRehash -> _needRehash
    boolean _mainHashShared -> _mainHashShared
    boolean _mainNamesShared -> _mainNamesShared
    boolean _collListShared -> _collListShared
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    void initTables(int) -> initTables
    void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer) -> mergeChild
    void markAsShared() -> markAsShared
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    org.codehaus.jackson.sym.Name getEmptyName() -> getEmptyName
    org.codehaus.jackson.sym.Name findName(int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int) -> findName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int,int) -> addName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int) -> addName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    void _addSymbol(int,org.codehaus.jackson.sym.Name) -> _addSymbol
    void rehash() -> rehash
    void nukeSymbols() -> nukeSymbols
    int findBestBucket() -> findBestBucket
    void unshareMain() -> unshareMain
    void unshareCollision() -> unshareCollision
    void unshareNames() -> unshareNames
    void expandCollision() -> expandCollision
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int,int) -> constructName
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int[],int) -> constructName
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket:
    org.codehaus.jackson.sym.Name _name -> _name
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket _next -> _next
    int length() -> length
    org.codehaus.jackson.sym.Name find(int,int,int) -> find
    org.codehaus.jackson.sym.Name find(int,int[],int) -> find
org.codehaus.jackson.sym.CharsToNameCanonicalizer -> org.codehaus.jackson.sym.CharsToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> sBootstrapSymbolTable
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    boolean _dirty -> _dirty
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    void initTables(int) -> initTables
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan() -> makeOrphan
    void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> mergeChild
    void release() -> release
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void copyArrays() -> copyArrays
    void rehash() -> rehash
org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String _symbol -> _symbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket mNext -> mNext
    java.lang.String getSymbol() -> getSymbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext() -> getNext
    java.lang.String find(char[],int,int) -> find
org.codehaus.jackson.sym.Name -> org.codehaus.jackson.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.sym.Name1 -> org.codehaus.jackson.sym.Name1:
    org.codehaus.jackson.sym.Name1 sEmptyName -> sEmptyName
    int mQuad -> mQuad
    org.codehaus.jackson.sym.Name1 getEmptyName() -> getEmptyName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name2 -> org.codehaus.jackson.sym.Name2:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name3 -> org.codehaus.jackson.sym.Name3:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    int mQuad3 -> mQuad3
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.NameN -> org.codehaus.jackson.sym.NameN:
    int[] mQuads -> mQuads
    int mQuadLen -> mQuadLen
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.type.JavaType -> org.codehaus.jackson.type.JavaType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    void setValueHandler(java.lang.Object) -> setValueHandler
    org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class) -> narrowBy
    org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    org.codehaus.jackson.type.JavaType widenBy(java.lang.Class) -> widenBy
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType _widen(java.lang.Class) -> _widen
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.String toCanonical() -> toCanonical
    java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    void _assertSubclass(java.lang.Class,java.lang.Class) -> _assertSubclass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.type.TypeReference -> org.codehaus.jackson.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(org.codehaus.jackson.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.util.BufferRecycler -> org.codehaus.jackson.util.BufferRecycler:
    int DEFAULT_WRITE_CONCAT_BUFFER_LEN -> DEFAULT_WRITE_CONCAT_BUFFER_LEN
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
    byte[] balloc(int) -> balloc
    char[] calloc(int) -> calloc
org.codehaus.jackson.util.BufferRecycler$ByteBufferType -> org.codehaus.jackson.util.BufferRecycler$ByteBufferType:
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
    int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> access$000
org.codehaus.jackson.util.BufferRecycler$CharBufferType -> org.codehaus.jackson.util.BufferRecycler$CharBufferType:
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
    int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> access$100
org.codehaus.jackson.util.ByteArrayBuilder -> org.codehaus.jackson.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    int INITIAL_BLOCK_SIZE -> INITIAL_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_ARRAY_SIZE -> DEFAULT_BLOCK_ARRAY_SIZE
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    void reset() -> reset
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> _allocMore
org.codehaus.jackson.util.CharTypes -> org.codehaus.jackson.util.CharTypes:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
org.codehaus.jackson.util.DefaultPrettyPrinter -> org.codehaus.jackson.util.DefaultPrettyPrinter:
    org.codehaus.jackson.impl.Indenter _arrayIndenter -> _arrayIndenter
    org.codehaus.jackson.impl.Indenter _objectIndenter -> _objectIndenter
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    void indentArraysWith(org.codehaus.jackson.impl.Indenter) -> indentArraysWith
    void indentObjectsWith(org.codehaus.jackson.impl.Indenter) -> indentObjectsWith
    void spacesInObjectEntries(boolean) -> spacesInObjectEntries
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    java.lang.String SYSTEM_LINE_SEPARATOR -> SYSTEM_LINE_SEPARATOR
    int SPACE_COUNT -> SPACE_COUNT
    char[] SPACES -> SPACES
    boolean isInline() -> isInline
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.InternCache -> org.codehaus.jackson.util.InternCache:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
org.codehaus.jackson.util.JsonGeneratorDelegate -> org.codehaus.jackson.util.JsonGeneratorDelegate:
    org.codehaus.jackson.JsonGenerator delegate -> delegate
    void close() -> close
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    void flush() -> flush
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    boolean isClosed() -> isClosed
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeObject(java.lang.Object) -> writeObject
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
org.codehaus.jackson.util.JsonParserDelegate -> org.codehaus.jackson.util.JsonParserDelegate:
    org.codehaus.jackson.JsonParser delegate -> delegate
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
org.codehaus.jackson.util.JsonParserSequence -> org.codehaus.jackson.util.JsonParserSequence:
    org.codehaus.jackson.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
org.codehaus.jackson.util.MinimalPrettyPrinter -> org.codehaus.jackson.util.MinimalPrettyPrinter:
    java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.TextBuffer -> org.codehaus.jackson.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    int MIN_SEGMENT_LEN -> MIN_SEGMENT_LEN
    int MAX_SEGMENT_LEN -> MAX_SEGMENT_LEN
    org.codehaus.jackson.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> findBuffer
    void clearSegments() -> clearSegments
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    char[] expandCurrentSegment() -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> unshare
    void expand(int) -> expand
    char[] buildResultArray() -> buildResultArray
    char[] _charArray(int) -> _charArray
org.codehaus.jackson.util.TokenBuffer -> org.codehaus.jackson.util.TokenBuffer:
    int DEFAULT_PARSER_FEATURES -> DEFAULT_PARSER_FEATURES
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    org.codehaus.jackson.util.TokenBuffer$Segment _first -> _first
    org.codehaus.jackson.util.TokenBuffer$Segment _last -> _last
    int _appendOffset -> _appendOffset
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    org.codehaus.jackson.JsonParser asParser() -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.ObjectCodec) -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser) -> asParser
    void serialize(org.codehaus.jackson.JsonGenerator) -> serialize
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _append(org.codehaus.jackson.JsonToken) -> _append
    void _append(org.codehaus.jackson.JsonToken,java.lang.Object) -> _append
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.util.TokenBuffer$1 -> org.codehaus.jackson.util.TokenBuffer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.util.TokenBuffer$Parser -> org.codehaus.jackson.util.TokenBuffer$Parser:
    org.codehaus.jackson.ObjectCodec _codec -> _codec
    org.codehaus.jackson.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.JsonLocation _location -> _location
    void setLocation(org.codehaus.jackson.JsonLocation) -> setLocation
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonToken peekNextToken() -> peekNextToken
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.util.TokenBuffer$Segment -> org.codehaus.jackson.util.TokenBuffer$Segment:
    int TOKENS_PER_SEGMENT -> TOKENS_PER_SEGMENT
    org.codehaus.jackson.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    org.codehaus.jackson.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    org.codehaus.jackson.JsonToken type(int) -> type
    java.lang.Object get(int) -> get
    org.codehaus.jackson.util.TokenBuffer$Segment next() -> next
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken) -> append
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> append
    void set(int,org.codehaus.jackson.JsonToken) -> set
    void set(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> set
org.codehaus.jackson.util.VersionUtil -> org.codehaus.jackson.util.VersionUtil:
    java.lang.String VERSION_FILE -> VERSION_FILE
    java.util.regex.Pattern VERSION_SEPARATOR -> VERSION_SEPARATOR
    org.codehaus.jackson.Version versionFor(java.lang.Class) -> versionFor
    org.codehaus.jackson.Version parseVersion(java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart
